using System.Runtime.CompilerServices;

namespace PlonkaDct;

public static unsafe class Dct128 {

    private const int N = 128;

    public static void ForwardDct(ReadOnlySpan<float> source, Span<float> destination)
    {
        fixed (float* dst = destination)
        fixed (float* src = source)
        {
            float* tmp = stackalloc float[N*N];
            ForwardDct1d(tmp, src, 1, N, 1, N);
            ForwardDct1d(dst, tmp, N, 1, N, 1);
        }
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    private static void ForwardDct1d(
        float* dst, float* src,
        int dst_stridea, int dst_strideb,
        int src_stridea, int src_strideb)
    {
        int i;

        for (i = 0; i < N; i++) {
            float x000 = src[  0 * src_stridea] + src[127 * src_stridea];
            float x011 = src[  1 * src_stridea] + src[126 * src_stridea];
            float x022 = src[  2 * src_stridea] + src[125 * src_stridea];
            float x033 = src[  3 * src_stridea] + src[124 * src_stridea];
            float x044 = src[  4 * src_stridea] + src[123 * src_stridea];
            float x055 = src[  5 * src_stridea] + src[122 * src_stridea];
            float x066 = src[  6 * src_stridea] + src[121 * src_stridea];
            float x077 = src[  7 * src_stridea] + src[120 * src_stridea];
            float x078 = src[  8 * src_stridea] + src[119 * src_stridea];
            float x079 = src[  9 * src_stridea] + src[118 * src_stridea];
            float x07a = src[ 10 * src_stridea] + src[117 * src_stridea];
            float x07b = src[ 11 * src_stridea] + src[116 * src_stridea];
            float x07c = src[ 12 * src_stridea] + src[115 * src_stridea];
            float x07d = src[ 13 * src_stridea] + src[114 * src_stridea];
            float x07e = src[ 14 * src_stridea] + src[113 * src_stridea];
            float x07f = src[ 15 * src_stridea] + src[112 * src_stridea];
            float x001 = src[ 16 * src_stridea] + src[111 * src_stridea];
            float x002 = src[ 17 * src_stridea] + src[110 * src_stridea];
            float x003 = src[ 18 * src_stridea] + src[109 * src_stridea];
            float x004 = src[ 19 * src_stridea] + src[108 * src_stridea];
            float x005 = src[ 20 * src_stridea] + src[107 * src_stridea];
            float x006 = src[ 21 * src_stridea] + src[106 * src_stridea];
            float x007 = src[ 22 * src_stridea] + src[105 * src_stridea];
            float x008 = src[ 23 * src_stridea] + src[104 * src_stridea];
            float x009 = src[ 24 * src_stridea] + src[103 * src_stridea];
            float x00a = src[ 25 * src_stridea] + src[102 * src_stridea];
            float x00b = src[ 26 * src_stridea] + src[101 * src_stridea];
            float x00c = src[ 27 * src_stridea] + src[100 * src_stridea];
            float x00d = src[ 28 * src_stridea] + src[ 99 * src_stridea];
            float x00e = src[ 29 * src_stridea] + src[ 98 * src_stridea];
            float x00f = src[ 30 * src_stridea] + src[ 97 * src_stridea];
            float x010 = src[ 31 * src_stridea] + src[ 96 * src_stridea];
            float x012 = src[ 32 * src_stridea] + src[ 95 * src_stridea];
            float x013 = src[ 33 * src_stridea] + src[ 94 * src_stridea];
            float x014 = src[ 34 * src_stridea] + src[ 93 * src_stridea];
            float x015 = src[ 35 * src_stridea] + src[ 92 * src_stridea];
            float x016 = src[ 36 * src_stridea] + src[ 91 * src_stridea];
            float x017 = src[ 37 * src_stridea] + src[ 90 * src_stridea];
            float x018 = src[ 38 * src_stridea] + src[ 89 * src_stridea];
            float x019 = src[ 39 * src_stridea] + src[ 88 * src_stridea];
            float x01a = src[ 40 * src_stridea] + src[ 87 * src_stridea];
            float x01b = src[ 41 * src_stridea] + src[ 86 * src_stridea];
            float x01c = src[ 42 * src_stridea] + src[ 85 * src_stridea];
            float x01d = src[ 43 * src_stridea] + src[ 84 * src_stridea];
            float x01e = src[ 44 * src_stridea] + src[ 83 * src_stridea];
            float x01f = src[ 45 * src_stridea] + src[ 82 * src_stridea];
            float x020 = src[ 46 * src_stridea] + src[ 81 * src_stridea];
            float x021 = src[ 47 * src_stridea] + src[ 80 * src_stridea];
            float x023 = src[ 48 * src_stridea] + src[ 79 * src_stridea];
            float x024 = src[ 49 * src_stridea] + src[ 78 * src_stridea];
            float x025 = src[ 50 * src_stridea] + src[ 77 * src_stridea];
            float x026 = src[ 51 * src_stridea] + src[ 76 * src_stridea];
            float x027 = src[ 52 * src_stridea] + src[ 75 * src_stridea];
            float x028 = src[ 53 * src_stridea] + src[ 74 * src_stridea];
            float x029 = src[ 54 * src_stridea] + src[ 73 * src_stridea];
            float x02a = src[ 55 * src_stridea] + src[ 72 * src_stridea];
            float x02b = src[ 56 * src_stridea] + src[ 71 * src_stridea];
            float x02c = src[ 57 * src_stridea] + src[ 70 * src_stridea];
            float x02d = src[ 58 * src_stridea] + src[ 69 * src_stridea];
            float x02e = src[ 59 * src_stridea] + src[ 68 * src_stridea];
            float x02f = src[ 60 * src_stridea] + src[ 67 * src_stridea];
            float x030 = src[ 61 * src_stridea] + src[ 66 * src_stridea];
            float x031 = src[ 62 * src_stridea] + src[ 65 * src_stridea];
            float x032 = src[ 63 * src_stridea] + src[ 64 * src_stridea];
            float x034 = src[  0 * src_stridea] - src[127 * src_stridea];
            float x035 = src[  1 * src_stridea] - src[126 * src_stridea];
            float x036 = src[  2 * src_stridea] - src[125 * src_stridea];
            float x037 = src[  3 * src_stridea] - src[124 * src_stridea];
            float x038 = src[  4 * src_stridea] - src[123 * src_stridea];
            float x039 = src[  5 * src_stridea] - src[122 * src_stridea];
            float x03a = src[  6 * src_stridea] - src[121 * src_stridea];
            float x03b = src[  7 * src_stridea] - src[120 * src_stridea];
            float x03c = src[  8 * src_stridea] - src[119 * src_stridea];
            float x03d = src[  9 * src_stridea] - src[118 * src_stridea];
            float x03e = src[ 10 * src_stridea] - src[117 * src_stridea];
            float x03f = src[ 11 * src_stridea] - src[116 * src_stridea];
            float x040 = src[ 12 * src_stridea] - src[115 * src_stridea];
            float x041 = src[ 13 * src_stridea] - src[114 * src_stridea];
            float x042 = src[ 14 * src_stridea] - src[113 * src_stridea];
            float x043 = src[ 15 * src_stridea] - src[112 * src_stridea];
            float x045 = src[ 16 * src_stridea] - src[111 * src_stridea];
            float x046 = src[ 17 * src_stridea] - src[110 * src_stridea];
            float x047 = src[ 18 * src_stridea] - src[109 * src_stridea];
            float x048 = src[ 19 * src_stridea] - src[108 * src_stridea];
            float x049 = src[ 20 * src_stridea] - src[107 * src_stridea];
            float x04a = src[ 21 * src_stridea] - src[106 * src_stridea];
            float x04b = src[ 22 * src_stridea] - src[105 * src_stridea];
            float x04c = src[ 23 * src_stridea] - src[104 * src_stridea];
            float x04d = src[ 24 * src_stridea] - src[103 * src_stridea];
            float x04e = src[ 25 * src_stridea] - src[102 * src_stridea];
            float x04f = src[ 26 * src_stridea] - src[101 * src_stridea];
            float x050 = src[ 27 * src_stridea] - src[100 * src_stridea];
            float x051 = src[ 28 * src_stridea] - src[ 99 * src_stridea];
            float x052 = src[ 29 * src_stridea] - src[ 98 * src_stridea];
            float x053 = src[ 30 * src_stridea] - src[ 97 * src_stridea];
            float x054 = src[ 31 * src_stridea] - src[ 96 * src_stridea];
            float x056 = src[ 32 * src_stridea] - src[ 95 * src_stridea];
            float x057 = src[ 33 * src_stridea] - src[ 94 * src_stridea];
            float x058 = src[ 34 * src_stridea] - src[ 93 * src_stridea];
            float x059 = src[ 35 * src_stridea] - src[ 92 * src_stridea];
            float x05a = src[ 36 * src_stridea] - src[ 91 * src_stridea];
            float x05b = src[ 37 * src_stridea] - src[ 90 * src_stridea];
            float x05c = src[ 38 * src_stridea] - src[ 89 * src_stridea];
            float x05d = src[ 39 * src_stridea] - src[ 88 * src_stridea];
            float x05e = src[ 40 * src_stridea] - src[ 87 * src_stridea];
            float x05f = src[ 41 * src_stridea] - src[ 86 * src_stridea];
            float x060 = src[ 42 * src_stridea] - src[ 85 * src_stridea];
            float x061 = src[ 43 * src_stridea] - src[ 84 * src_stridea];
            float x062 = src[ 44 * src_stridea] - src[ 83 * src_stridea];
            float x063 = src[ 45 * src_stridea] - src[ 82 * src_stridea];
            float x064 = src[ 46 * src_stridea] - src[ 81 * src_stridea];
            float x065 = src[ 47 * src_stridea] - src[ 80 * src_stridea];
            float x067 = src[ 48 * src_stridea] - src[ 79 * src_stridea];
            float x068 = src[ 49 * src_stridea] - src[ 78 * src_stridea];
            float x069 = src[ 50 * src_stridea] - src[ 77 * src_stridea];
            float x06a = src[ 51 * src_stridea] - src[ 76 * src_stridea];
            float x06b = src[ 52 * src_stridea] - src[ 75 * src_stridea];
            float x06c = src[ 53 * src_stridea] - src[ 74 * src_stridea];
            float x06d = src[ 54 * src_stridea] - src[ 73 * src_stridea];
            float x06e = src[ 55 * src_stridea] - src[ 72 * src_stridea];
            float x06f = src[ 56 * src_stridea] - src[ 71 * src_stridea];
            float x070 = src[ 57 * src_stridea] - src[ 70 * src_stridea];
            float x071 = src[ 58 * src_stridea] - src[ 69 * src_stridea];
            float x072 = src[ 59 * src_stridea] - src[ 68 * src_stridea];
            float x073 = src[ 60 * src_stridea] - src[ 67 * src_stridea];
            float x074 = src[ 61 * src_stridea] - src[ 66 * src_stridea];
            float x075 = src[ 62 * src_stridea] - src[ 65 * src_stridea];
            float x076 = src[ 63 * src_stridea] - src[ 64 * src_stridea];
            float x117 = x000 + x032;
            float x128 = x011 + x031;
            float x139 = x022 + x030;
            float x14a = x02f + x033;
            float x14b = x02e + x044;
            float x14c = x02d + x055;
            float x14d = x02c + x066;
            float x14e = x02b + x077;
            float x14f = x02a + x078;
            float x150 = x029 + x079;
            float x151 = x028 + x07a;
            float x152 = x027 + x07b;
            float x153 = x026 + x07c;
            float x154 = x025 + x07d;
            float x155 = x024 + x07e;
            float x156 = x023 + x07f;
            float x118 = x001 + x021;
            float x119 = x002 + x020;
            float x11a = x003 + x01f;
            float x11b = x004 + x01e;
            float x11c = x005 + x01d;
            float x11d = x006 + x01c;
            float x11e = x007 + x01b;
            float x11f = x008 + x01a;
            float x120 = x009 + x019;
            float x121 = x00a + x018;
            float x122 = x00b + x017;
            float x123 = x00c + x016;
            float x124 = x00d + x015;
            float x125 = x00e + x014;
            float x126 = x00f + x013;
            float x127 = x010 + x012;
            float x129 = x000 - x032;
            float x12a = x011 - x031;
            float x12b = x022 - x030;
            float x12c = -x02f + x033;
            float x12d = -x02e + x044;
            float x12e = -x02d + x055;
            float x12f = -x02c + x066;
            float x130 = -x02b + x077;
            float x131 = -x02a + x078;
            float x132 = -x029 + x079;
            float x133 = -x028 + x07a;
            float x134 = -x027 + x07b;
            float x135 = -x026 + x07c;
            float x136 = -x025 + x07d;
            float x137 = -x024 + x07e;
            float x138 = -x023 + x07f;
            float x13a = x001 - x021;
            float x13b = x002 - x020;
            float x13c = x003 - x01f;
            float x13d = x004 - x01e;
            float x13e = x005 - x01d;
            float x13f = x006 - x01c;
            float x140 = x007 - x01b;
            float x141 = x008 - x01a;
            float x142 = x009 - x019;
            float x143 = x00a - x018;
            float x144 = x00b - x017;
            float x145 = x00c - x016;
            float x146 = x00d - x015;
            float x147 = x00e - x014;
            float x148 = x00f - x013;
            float x149 = x010 - x012;
            float x253 = x117 + x127;
            float x264 = x126 + x128;
            float x265 = x125 + x139;
            float x266 = x124 + x14a;
            float x267 = x123 + x14b;
            float x268 = x122 + x14c;
            float x269 = x121 + x14d;
            float x26a = x120 + x14e;
            float x26b = x11f + x14f;
            float x26c = x11e + x150;
            float x26d = x11d + x151;
            float x26e = x11c + x152;
            float x26f = x11b + x153;
            float x270 = x11a + x154;
            float x271 = x119 + x155;
            float x272 = x118 + x156;
            float x254 = x117 - x127;
            float x255 = -x126 + x128;
            float x256 = -x125 + x139;
            float x257 = -x124 + x14a;
            float x258 = -x123 + x14b;
            float x259 = -x122 + x14c;
            float x25a = -x121 + x14d;
            float x25b = -x120 + x14e;
            float x25c = -x11f + x14f;
            float x25d = -x11e + x150;
            float x25e = -x11d + x151;
            float x25f = -x11c + x152;
            float x260 = -x11b + x153;
            float x261 = -x11a + x154;
            float x262 = -x119 + x155;
            float x263 = -x118 + x156;
            float x334 = x253 + x272;
            float x335 = x264 + x271;
            float x336 = x265 + x270;
            float x337 = x266 + x26f;
            float x338 = x267 + x26e;
            float x339 = x268 + x26d;
            float x33a = x269 + x26c;
            float x33b = x26a + x26b;
            float x33c = x253 - x272;
            float x33d = x264 - x271;
            float x33e = x265 - x270;
            float x33f = x266 - x26f;
            float x340 = x267 - x26e;
            float x341 = x268 - x26d;
            float x342 = x269 - x26c;
            float x343 = x26a - x26b;
            float x3a0 = x334 + x33b;
            float x3a1 = x335 + x33a;
            float x3a2 = x336 + x339;
            float x3a3 = x337 + x338;
            float x3a4 = x334 - x33b;
            float x3a5 = x335 - x33a;
            float x3a6 = x336 - x339;
            float x3a7 = x337 - x338;
            float x3a8 = x3a0 + x3a3;
            float x3a9 = x3a1 + x3a2;
            float x3aa = x3a0 - x3a3;
            float x3ab = x3a1 - x3a2;
            float x3ac = 1.38703984532215f*x3a4 + 0.275899379282943f*x3a7;
            float x3ad = 1.17587560241936f*x3a5 + 0.785694958387102f*x3a6;
            float x3ae = -0.785694958387102f*x3a5 + 1.17587560241936f*x3a6;
            float x3af = 0.275899379282943f*x3a4 - 1.38703984532215f*x3a7;
            float x3b0 = 0.0883883476483184f * (x3ac - x3ad);
            float x3b1 = 0.0883883476483184f * (x3ae - x3af);
            float x3b2 = 1.40740373752638f*x33c + 0.138617169199091f*x343;
            float x3b3 = 1.35331800117435f*x33d + 0.410524527522357f*x342;
            float x3b4 = 1.24722501298667f*x33e + 0.666655658477747f*x341;
            float x3b5 = 1.09320186700176f*x33f + 0.897167586342636f*x340;
            float x3b6 = -0.897167586342636f*x33f + 1.09320186700176f*x340;
            float x3b7 = 0.666655658477747f*x33e - 1.24722501298667f*x341;
            float x3b8 = -0.410524527522357f*x33d + 1.35331800117435f*x342;
            float x3b9 = 0.138617169199091f*x33c - 1.40740373752638f*x343;
            float x080 = x3b2 + x3b5;
            float x081 = x3b3 + x3b4;
            float x082 = x3b2 - x3b5;
            float x083 = x3b3 - x3b4;
            float x084 = 0.0883883476483184f * (x080 - x081);
            float x085 = 0.115484941563911f*x082 + 0.0478354290456362f*x083;
            float x086 = 0.0478354290456362f*x082 - 0.115484941563911f*x083;
            float x087 = x3b6 + x3b9;
            float x088 = x3b7 + x3b8;
            float x089 = x3b6 - x3b9;
            float x08a = x3b7 - x3b8;
            float x08b = 0.0883883476483184f * (x087 - x088);
            float x08c = 0.115484941563911f*x089 + 0.0478354290456362f*x08a;
            float x08d = 0.0478354290456362f*x089 - 0.115484941563911f*x08a;
            float x08e = 1.41251008020198f*x254 + 0.0693921705079407f*x263;
            float x08f = 1.39890683597308f*x255 + 0.207508226988212f*x262;
            float x090 = 1.37183135419349f*x256 + 0.34362586580705f*x261;
            float x091 = 1.33154438655373f*x257 + 0.476434199693161f*x260;
            float x092 = 1.27843391857524f*x258 + 0.604654211790801f*x25f;
            float x093 = 1.21301143309781f*x259 + 0.72705107329128f*x25e;
            float x094 = 1.13590698442014f*x25a + 0.842446035509419f*x25d;
            float x095 = 1.04786313053259f*x25b + 0.949727781877754f*x25c;
            float x096 = -0.949727781877754f*x25b + 1.04786313053259f*x25c;
            float x097 = 0.842446035509419f*x25a - 1.13590698442014f*x25d;
            float x098 = -0.72705107329128f*x259 + 1.21301143309781f*x25e;
            float x099 = 0.604654211790801f*x258 - 1.27843391857524f*x25f;
            float x09a = -0.476434199693161f*x257 + 1.33154438655373f*x260;
            float x09b = 0.34362586580705f*x256 - 1.37183135419349f*x261;
            float x09c = -0.207508226988212f*x255 + 1.39890683597308f*x262;
            float x09d = 0.0693921705079407f*x254 - 1.41251008020198f*x263;
            float x09e = x08e + x095;
            float x09f = x08f + x094;
            float x0a0 = x090 + x093;
            float x0a1 = x091 + x092;
            float x0a2 = x08e - x095;
            float x0a3 = x08f - x094;
            float x0a4 = x090 - x093;
            float x0a5 = x091 - x092;
            float x0a8 = x09e + x0a1;
            float x0a9 = x09f + x0a0;
            float x0aa = x09e - x0a1;
            float x0ab = x09f - x0a0;
            float x0ac = 0.0883883476483184f * (x0a8 - x0a9);
            float x0ad = 0.115484941563911f*x0aa + 0.0478354290456362f*x0ab;
            float x0ae = 0.0478354290456362f*x0aa - 0.115484941563911f*x0ab;
            float x0af = 1.38703984532215f*x0a2 + 0.275899379282943f*x0a5;
            float x0b0 = 1.17587560241936f*x0a3 + 0.785694958387102f*x0a4;
            float x0b1 = -0.785694958387102f*x0a3 + 1.17587560241936f*x0a4;
            float x0b2 = 0.275899379282943f*x0a2 - 1.38703984532215f*x0a5;
            float x0b3 = 0.0883883476483184f * (x0af + x0b0);
            float x0b4 = 0.0883883476483184f * (x0af - x0b0);
            float x0b5 = 0.0883883476483184f * (x0b1 + x0b2);
            float x0b6 = 0.0883883476483184f * (x0b1 - x0b2);
            float x0a6 = 0.707106781186547f * (x0b4 - x0b6);
            float x0a7 = 0.707106781186547f * (x0b4 + x0b6);
            float x0b7 = x096 + x09d;
            float x0b8 = x097 + x09c;
            float x0b9 = x098 + x09b;
            float x0ba = x099 + x09a;
            float x0bb = x096 - x09d;
            float x0bc = x097 - x09c;
            float x0bd = x098 - x09b;
            float x0be = x099 - x09a;
            float x0c1 = x0b7 + x0ba;
            float x0c2 = x0b8 + x0b9;
            float x0c3 = x0b7 - x0ba;
            float x0c4 = x0b8 - x0b9;
            float x0c5 = 0.0883883476483184f * (x0c1 - x0c2);
            float x0c6 = 0.115484941563911f*x0c3 + 0.0478354290456362f*x0c4;
            float x0c7 = 0.0478354290456362f*x0c3 - 0.115484941563911f*x0c4;
            float x0c8 = 1.38703984532215f*x0bb + 0.275899379282943f*x0be;
            float x0c9 = 1.17587560241936f*x0bc + 0.785694958387102f*x0bd;
            float x0ca = -0.785694958387102f*x0bc + 1.17587560241936f*x0bd;
            float x0cb = 0.275899379282943f*x0bb - 1.38703984532215f*x0be;
            float x0cc = 0.0883883476483184f * (x0c8 + x0c9);
            float x0cd = 0.0883883476483184f * (x0c8 - x0c9);
            float x0ce = 0.0883883476483184f * (x0ca + x0cb);
            float x0cf = 0.0883883476483184f * (x0ca - x0cb);
            float x0bf = 0.707106781186547f * (x0cd - x0cf);
            float x0c0 = 0.707106781186547f * (x0cd + x0cf);
            float x0d0 = 1.41378762768853f*x129 + 0.0347065382144f*x149;
            float x0e1 = 1.41038168946026f*x12a + 0.104036003552708f*x148;
            float x0e2 = 1.40357801820723f*x12b + 0.173114837045979f*x147;
            float x0e3 = 1.39339300456943f*x12c + 0.241776621733738f*x146;
            float x0e4 = 1.3798511851368f*x12d + 0.30985594536261f*x145;
            float x0e5 = 1.3629851833385f*x12e + 0.377188798878927f*x144;
            float x0e6 = 1.34283563085012f*x12f + 0.443612971540909f*x143;
            float x0e7 = 1.31945106970852f*x130 + 0.508968441698541f*x142;
            float x0e8 = 1.29288783536973f*x131 + 0.573097762299751f*x141;
            float x0e9 = 1.26320992099193f*x132 + 0.635846440194145f*x140;
            float x0ea = 1.23048882327034f*x133 + 0.697063308320542f*x13f;
            float x0eb = 1.1948033701954f*x134 + 0.756600889881659f*x13e;
            float x0ec = 1.15623953114924f*x135 + 0.81431575362864f*x13d;
            float x0ed = 1.11489020979793f*x136 + 0.870068859399494f*x13c;
            float x0ee = 1.07085502027836f*x137 + 0.923725893079023f*x13b;
            float x0ef = 1.02424004721912f*x138 + 0.975157590173292f*x13a;
            float x0d1 = -0.975157590173292f*x138 + 1.02424004721912f*x13a;
            float x0d2 = 0.923725893079023f*x137 - 1.07085502027836f*x13b;
            float x0d3 = -0.870068859399494f*x136 + 1.11489020979793f*x13c;
            float x0d4 = 0.81431575362864f*x135 - 1.15623953114924f*x13d;
            float x0d5 = -0.756600889881659f*x134 + 1.1948033701954f*x13e;
            float x0d6 = 0.697063308320542f*x133 - 1.23048882327034f*x13f;
            float x0d7 = -0.635846440194145f*x132 + 1.26320992099193f*x140;
            float x0d8 = 0.573097762299751f*x131 - 1.29288783536973f*x141;
            float x0d9 = -0.508968441698541f*x130 + 1.31945106970852f*x142;
            float x0da = 0.443612971540909f*x12f - 1.34283563085012f*x143;
            float x0db = -0.377188798878927f*x12e + 1.3629851833385f*x144;
            float x0dc = 0.30985594536261f*x12d - 1.3798511851368f*x145;
            float x0dd = -0.241776621733738f*x12c + 1.39339300456943f*x146;
            float x0de = 0.173114837045979f*x12b - 1.40357801820723f*x147;
            float x0df = -0.104036003552708f*x12a + 1.41038168946026f*x148;
            float x0e0 = 0.0347065382144f*x129 - 1.41378762768853f*x149;
            float x0f0 = x0d0 + x0ef;
            float x0f1 = x0e1 + x0ee;
            float x0f2 = x0e2 + x0ed;
            float x0f3 = x0e3 + x0ec;
            float x0f4 = x0e4 + x0eb;
            float x0f5 = x0e5 + x0ea;
            float x0f6 = x0e6 + x0e9;
            float x0f7 = x0e7 + x0e8;
            float x0f8 = x0d0 - x0ef;
            float x0f9 = x0e1 - x0ee;
            float x0fa = x0e2 - x0ed;
            float x0fb = x0e3 - x0ec;
            float x0fc = x0e4 - x0eb;
            float x0fd = x0e5 - x0ea;
            float x0fe = x0e6 - x0e9;
            float x0ff = x0e7 - x0e8;
            float x106 = x0f0 + x0f7;
            float x107 = x0f1 + x0f6;
            float x108 = x0f2 + x0f5;
            float x109 = x0f3 + x0f4;
            float x10a = x0f0 - x0f7;
            float x10b = x0f1 - x0f6;
            float x10c = x0f2 - x0f5;
            float x10d = x0f3 - x0f4;
            float x110 = x106 + x109;
            float x111 = x107 + x108;
            float x112 = x106 - x109;
            float x113 = x107 - x108;
            float x114 = 0.0883883476483184f * (x110 - x111);
            float x115 = 0.115484941563911f*x112 + 0.0478354290456362f*x113;
            float x116 = 0.0478354290456362f*x112 - 0.115484941563911f*x113;
            float x157 = 1.38703984532215f*x10a + 0.275899379282943f*x10d;
            float x158 = 1.17587560241936f*x10b + 0.785694958387102f*x10c;
            float x159 = -0.785694958387102f*x10b + 1.17587560241936f*x10c;
            float x15a = 0.275899379282943f*x10a - 1.38703984532215f*x10d;
            float x15b = 0.0883883476483184f * (x157 + x158);
            float x15c = 0.0883883476483184f * (x157 - x158);
            float x15d = 0.0883883476483184f * (x159 + x15a);
            float x15e = 0.0883883476483184f * (x159 - x15a);
            float x10e = 0.707106781186547f * (x15c - x15e);
            float x10f = 0.707106781186547f * (x15c + x15e);
            float x15f = 1.40740373752638f*x0f8 + 0.138617169199091f*x0ff;
            float x160 = 1.35331800117435f*x0f9 + 0.410524527522357f*x0fe;
            float x161 = 1.24722501298667f*x0fa + 0.666655658477747f*x0fd;
            float x162 = 1.09320186700176f*x0fb + 0.897167586342636f*x0fc;
            float x163 = -0.897167586342636f*x0fb + 1.09320186700176f*x0fc;
            float x164 = 0.666655658477747f*x0fa - 1.24722501298667f*x0fd;
            float x165 = -0.410524527522357f*x0f9 + 1.35331800117435f*x0fe;
            float x166 = 0.138617169199091f*x0f8 - 1.40740373752638f*x0ff;
            float x167 = x15f + x162;
            float x168 = x160 + x161;
            float x169 = x15f - x162;
            float x16a = x160 - x161;
            float x16b = 0.0883883476483184f * (x167 + x168);
            float x16c = 0.0883883476483184f * (x167 - x168);
            float x16d = 0.115484941563911f*x169 + 0.0478354290456362f*x16a;
            float x16e = 0.0478354290456362f*x169 - 0.115484941563911f*x16a;
            float x16f = x163 + x166;
            float x170 = x164 + x165;
            float x171 = x163 - x166;
            float x172 = x164 - x165;
            float x173 = 0.0883883476483184f * (x16f + x170);
            float x174 = 0.0883883476483184f * (x16f - x170);
            float x175 = 0.115484941563911f*x171 + 0.0478354290456362f*x172;
            float x176 = 0.0478354290456362f*x171 - 0.115484941563911f*x172;
            float x100 = 0.707106781186547f * (x16d - x176);
            float x101 = 0.707106781186547f * (x16d + x176);
            float x102 = 0.707106781186547f * (x16c + x174);
            float x103 = 0.707106781186547f * (x16c - x174);
            float x104 = 0.707106781186547f * (x16e - x175);
            float x105 = 0.707106781186547f * (x16e + x175);
            float x177 = x0d1 + x0e0;
            float x178 = x0d2 + x0df;
            float x179 = x0d3 + x0de;
            float x17a = x0d4 + x0dd;
            float x17b = x0d5 + x0dc;
            float x17c = x0d6 + x0db;
            float x17d = x0d7 + x0da;
            float x17e = x0d8 + x0d9;
            float x17f = x0d1 - x0e0;
            float x180 = x0d2 - x0df;
            float x181 = x0d3 - x0de;
            float x182 = x0d4 - x0dd;
            float x183 = x0d5 - x0dc;
            float x184 = x0d6 - x0db;
            float x185 = x0d7 - x0da;
            float x186 = x0d8 - x0d9;
            float x18d = x177 + x17e;
            float x18e = x178 + x17d;
            float x18f = x179 + x17c;
            float x190 = x17a + x17b;
            float x191 = x177 - x17e;
            float x192 = x178 - x17d;
            float x193 = x179 - x17c;
            float x194 = x17a - x17b;
            float x197 = x18d + x190;
            float x198 = x18e + x18f;
            float x199 = x18d - x190;
            float x19a = x18e - x18f;
            float x19b = 0.0883883476483184f * (x197 - x198);
            float x19c = 0.115484941563911f*x199 + 0.0478354290456362f*x19a;
            float x19d = 0.0478354290456362f*x199 - 0.115484941563911f*x19a;
            float x19e = 1.38703984532215f*x191 + 0.275899379282943f*x194;
            float x19f = 1.17587560241936f*x192 + 0.785694958387102f*x193;
            float x1a0 = -0.785694958387102f*x192 + 1.17587560241936f*x193;
            float x1a1 = 0.275899379282943f*x191 - 1.38703984532215f*x194;
            float x1a2 = 0.0883883476483184f * (x19e + x19f);
            float x1a3 = 0.0883883476483184f * (x19e - x19f);
            float x1a4 = 0.0883883476483184f * (x1a0 + x1a1);
            float x1a5 = 0.0883883476483184f * (x1a0 - x1a1);
            float x195 = 0.707106781186547f * (x1a3 - x1a5);
            float x196 = 0.707106781186547f * (x1a3 + x1a5);
            float x1a6 = 1.40740373752638f*x17f + 0.138617169199091f*x186;
            float x1a7 = 1.35331800117435f*x180 + 0.410524527522357f*x185;
            float x1a8 = 1.24722501298667f*x181 + 0.666655658477747f*x184;
            float x1a9 = 1.09320186700176f*x182 + 0.897167586342636f*x183;
            float x1aa = -0.897167586342636f*x182 + 1.09320186700176f*x183;
            float x1ab = 0.666655658477747f*x181 - 1.24722501298667f*x184;
            float x1ac = -0.410524527522357f*x180 + 1.35331800117435f*x185;
            float x1ad = 0.138617169199091f*x17f - 1.40740373752638f*x186;
            float x1ae = x1a6 + x1a9;
            float x1af = x1a7 + x1a8;
            float x1b0 = x1a6 - x1a9;
            float x1b1 = x1a7 - x1a8;
            float x1b2 = 0.0883883476483184f * (x1ae + x1af);
            float x1b3 = 0.0883883476483184f * (x1ae - x1af);
            float x1b4 = 0.115484941563911f*x1b0 + 0.0478354290456362f*x1b1;
            float x1b5 = 0.0478354290456362f*x1b0 - 0.115484941563911f*x1b1;
            float x1b6 = x1aa + x1ad;
            float x1b7 = x1ab + x1ac;
            float x1b8 = x1aa - x1ad;
            float x1b9 = x1ab - x1ac;
            float x1ba = 0.0883883476483184f * (x1b6 + x1b7);
            float x1bb = 0.0883883476483184f * (x1b6 - x1b7);
            float x1bc = 0.115484941563911f*x1b8 + 0.0478354290456362f*x1b9;
            float x1bd = 0.0478354290456362f*x1b8 - 0.115484941563911f*x1b9;
            float x187 = 0.707106781186547f * (x1b4 - x1bd);
            float x188 = 0.707106781186547f * (x1b4 + x1bd);
            float x189 = 0.707106781186547f * (x1b3 + x1bb);
            float x18a = 0.707106781186547f * (x1b3 - x1bb);
            float x18b = 0.707106781186547f * (x1b5 - x1bc);
            float x18c = 0.707106781186547f * (x1b5 + x1bc);
            float x1be = 1.41410707469279f*x034 + 0.0173545758748458f*x076;
            float x1cf = 1.41325526946787f*x035 + 0.0520532738769598f*x075;
            float x1e0 = 1.41155217211363f*x036 + 0.0867206169332876f*x074;
            float x1f1 = 1.40899880851225f*x037 + 0.121335722732667f*x073;
            float x1f2 = 1.40559671671448f*x038 + 0.155877740429708f*x072;
            float x1f3 = 1.40134794601321f*x039 + 0.190325863204558f*x071;
            float x1f4 = 1.39625505570903f*x03a + 0.224659340796156f*x070;
            float x1f5 = 1.39032111356864f*x03b + 0.258857492001412f*x06f;
            float x1f6 = 1.38354969397688f*x03c + 0.292899717132792f*x06e;
            float x1f7 = 1.37594487578373f*x03d + 0.326765510426796f*x06d;
            float x1f8 = 1.3675112398473f*x03e + 0.360434472395869f*x06c;
            float x1f9 = 1.35825386627453f*x03f + 0.393886322116284f*x06b;
            float x1fa = 1.34817833136109f*x040 + 0.427100909444614f*x06a;
            float x1fb = 1.33729070423248f*x041 + 0.460058227155426f*x069;
            float x1fc = 1.32559754318816f*x042 + 0.492738422992885f*x068;
            float x1fd = 1.31310589175111f*x043 + 0.52512181162901f*x067;
            float x1bf = 1.29982327442505f*x045 + 0.557188886521378f*x065;
            float x1c0 = 1.28575769216201f*x046 + 0.58892033166314f*x064;
            float x1c1 = 1.27091761754278f*x047 + 0.620297033218258f*x063;
            float x1c2 = 1.25531198967342f*x048 + 0.651300091034966f*x062;
            float x1c3 = 1.23895020880062f*x049 + 0.681910830030513f*x061;
            float x1c4 = 1.22184213064937f*x04a + 0.712110811440338f*x060;
            float x1c5 = 1.20399806048623f*x04b + 0.741881843924889f*x05f;
            float x1c6 = 1.18542874691185f*x04c + 0.771205994527409f*x05e;
            float x1c7 = 1.16614537538636f*x04d + 0.800065599476075f*x05d;
            float x1c8 = 1.14615956149172f*x04e + 0.828443274823997f*x05c;
            float x1c9 = 1.12548334393491f*x04f + 0.856321926920654f*x05b;
            float x1ca = 1.10412917729624f*x050 + 0.883684762708473f*x05a;
            float x1cb = 1.08210992452722f*x051 + 0.910515299838338f*x059;
            float x1cc = 1.05943884920236f*x052 + 0.936797376597941f*x058;
            float x1cd = 1.03612960752971f*x053 + 0.962515161646991f*x057;
            float x1ce = 1.01219624012486f*x054 + 0.987653163553425f*x056;
            float x1d0 = -0.987653163553425f*x054 + 1.01219624012486f*x056;
            float x1d1 = 0.962515161646991f*x053 - 1.03612960752971f*x057;
            float x1d2 = -0.936797376597941f*x052 + 1.05943884920236f*x058;
            float x1d3 = 0.910515299838338f*x051 - 1.08210992452722f*x059;
            float x1d4 = -0.883684762708473f*x050 + 1.10412917729624f*x05a;
            float x1d5 = 0.856321926920654f*x04f - 1.12548334393491f*x05b;
            float x1d6 = -0.828443274823997f*x04e + 1.14615956149172f*x05c;
            float x1d7 = 0.800065599476075f*x04d - 1.16614537538636f*x05d;
            float x1d8 = -0.771205994527409f*x04c + 1.18542874691185f*x05e;
            float x1d9 = 0.741881843924889f*x04b - 1.20399806048623f*x05f;
            float x1da = -0.712110811440338f*x04a + 1.22184213064937f*x060;
            float x1db = 0.681910830030513f*x049 - 1.23895020880062f*x061;
            float x1dc = -0.651300091034966f*x048 + 1.25531198967342f*x062;
            float x1dd = 0.620297033218258f*x047 - 1.27091761754278f*x063;
            float x1de = -0.58892033166314f*x046 + 1.28575769216201f*x064;
            float x1df = 0.557188886521378f*x045 - 1.29982327442505f*x065;
            float x1e1 = -0.52512181162901f*x043 + 1.31310589175111f*x067;
            float x1e2 = 0.492738422992885f*x042 - 1.32559754318816f*x068;
            float x1e3 = -0.460058227155426f*x041 + 1.33729070423248f*x069;
            float x1e4 = 0.427100909444614f*x040 - 1.34817833136109f*x06a;
            float x1e5 = -0.393886322116284f*x03f + 1.35825386627453f*x06b;
            float x1e6 = 0.360434472395869f*x03e - 1.3675112398473f*x06c;
            float x1e7 = -0.326765510426796f*x03d + 1.37594487578373f*x06d;
            float x1e8 = 0.292899717132792f*x03c - 1.38354969397688f*x06e;
            float x1e9 = -0.258857492001412f*x03b + 1.39032111356864f*x06f;
            float x1ea = 0.224659340796156f*x03a - 1.39625505570903f*x070;
            float x1eb = -0.190325863204558f*x039 + 1.40134794601321f*x071;
            float x1ec = 0.155877740429708f*x038 - 1.40559671671448f*x072;
            float x1ed = -0.121335722732667f*x037 + 1.40899880851225f*x073;
            float x1ee = 0.0867206169332876f*x036 - 1.41155217211363f*x074;
            float x1ef = -0.0520532738769598f*x035 + 1.41325526946787f*x075;
            float x1f0 = 0.0173545758748458f*x034 - 1.41410707469279f*x076;
            float x1fe = x1be + x1ce;
            float x20f = x1cd + x1cf;
            float x210 = x1cc + x1e0;
            float x211 = x1cb + x1f1;
            float x212 = x1ca + x1f2;
            float x213 = x1c9 + x1f3;
            float x214 = x1c8 + x1f4;
            float x215 = x1c7 + x1f5;
            float x216 = x1c6 + x1f6;
            float x217 = x1c5 + x1f7;
            float x218 = x1c4 + x1f8;
            float x219 = x1c3 + x1f9;
            float x21a = x1c2 + x1fa;
            float x21b = x1c1 + x1fb;
            float x21c = x1c0 + x1fc;
            float x21d = x1bf + x1fd;
            float x1ff = x1be - x1ce;
            float x200 = -x1cd + x1cf;
            float x201 = -x1cc + x1e0;
            float x202 = -x1cb + x1f1;
            float x203 = -x1ca + x1f2;
            float x204 = -x1c9 + x1f3;
            float x205 = -x1c8 + x1f4;
            float x206 = -x1c7 + x1f5;
            float x207 = -x1c6 + x1f6;
            float x208 = -x1c5 + x1f7;
            float x209 = -x1c4 + x1f8;
            float x20a = -x1c3 + x1f9;
            float x20b = -x1c2 + x1fa;
            float x20c = -x1c1 + x1fb;
            float x20d = -x1c0 + x1fc;
            float x20e = -x1bf + x1fd;
            float x22c = x1fe + x21d;
            float x22d = x20f + x21c;
            float x22e = x210 + x21b;
            float x22f = x211 + x21a;
            float x230 = x212 + x219;
            float x231 = x213 + x218;
            float x232 = x214 + x217;
            float x233 = x215 + x216;
            float x234 = x1fe - x21d;
            float x235 = x20f - x21c;
            float x236 = x210 - x21b;
            float x237 = x211 - x21a;
            float x238 = x212 - x219;
            float x239 = x213 - x218;
            float x23a = x214 - x217;
            float x23b = x215 - x216;
            float x242 = x22c + x233;
            float x243 = x22d + x232;
            float x244 = x22e + x231;
            float x245 = x22f + x230;
            float x246 = x22c - x233;
            float x247 = x22d - x232;
            float x248 = x22e - x231;
            float x249 = x22f - x230;
            float x24c = x242 + x245;
            float x24d = x243 + x244;
            float x24e = x242 - x245;
            float x24f = x243 - x244;
            float x250 = 0.0883883476483184f * (x24c - x24d);
            float x251 = 0.115484941563911f*x24e + 0.0478354290456362f*x24f;
            float x252 = 0.0478354290456362f*x24e - 0.115484941563911f*x24f;
            float x273 = 1.38703984532215f*x246 + 0.275899379282943f*x249;
            float x274 = 1.17587560241936f*x247 + 0.785694958387102f*x248;
            float x275 = -0.785694958387102f*x247 + 1.17587560241936f*x248;
            float x276 = 0.275899379282943f*x246 - 1.38703984532215f*x249;
            float x277 = 0.0883883476483184f * (x273 + x274);
            float x278 = 0.0883883476483184f * (x273 - x274);
            float x279 = 0.0883883476483184f * (x275 + x276);
            float x27a = 0.0883883476483184f * (x275 - x276);
            float x24a = 0.707106781186547f * (x278 - x27a);
            float x24b = 0.707106781186547f * (x278 + x27a);
            float x27b = 1.40740373752638f*x234 + 0.138617169199091f*x23b;
            float x27c = 1.35331800117435f*x235 + 0.410524527522357f*x23a;
            float x27d = 1.24722501298667f*x236 + 0.666655658477747f*x239;
            float x27e = 1.09320186700176f*x237 + 0.897167586342636f*x238;
            float x27f = -0.897167586342636f*x237 + 1.09320186700176f*x238;
            float x280 = 0.666655658477747f*x236 - 1.24722501298667f*x239;
            float x281 = -0.410524527522357f*x235 + 1.35331800117435f*x23a;
            float x282 = 0.138617169199091f*x234 - 1.40740373752638f*x23b;
            float x283 = x27b + x27e;
            float x284 = x27c + x27d;
            float x285 = x27b - x27e;
            float x286 = x27c - x27d;
            float x287 = 0.0883883476483184f * (x283 + x284);
            float x288 = 0.0883883476483184f * (x283 - x284);
            float x289 = 0.115484941563911f*x285 + 0.0478354290456362f*x286;
            float x28a = 0.0478354290456362f*x285 - 0.115484941563911f*x286;
            float x28b = x27f + x282;
            float x28c = x280 + x281;
            float x28d = x27f - x282;
            float x28e = x280 - x281;
            float x28f = 0.0883883476483184f * (x28b + x28c);
            float x290 = 0.0883883476483184f * (x28b - x28c);
            float x291 = 0.115484941563911f*x28d + 0.0478354290456362f*x28e;
            float x292 = 0.0478354290456362f*x28d - 0.115484941563911f*x28e;
            float x23c = 0.707106781186547f * (x289 - x292);
            float x23d = 0.707106781186547f * (x289 + x292);
            float x23e = 0.707106781186547f * (x288 + x290);
            float x23f = 0.707106781186547f * (x288 - x290);
            float x240 = 0.707106781186547f * (x28a - x291);
            float x241 = 0.707106781186547f * (x28a + x291);
            float x293 = 1.41251008020198f*x1ff + 0.0693921705079407f*x20e;
            float x294 = 1.39890683597308f*x200 + 0.207508226988212f*x20d;
            float x295 = 1.37183135419349f*x201 + 0.34362586580705f*x20c;
            float x296 = 1.33154438655373f*x202 + 0.476434199693161f*x20b;
            float x297 = 1.27843391857524f*x203 + 0.604654211790801f*x20a;
            float x298 = 1.21301143309781f*x204 + 0.72705107329128f*x209;
            float x299 = 1.13590698442014f*x205 + 0.842446035509419f*x208;
            float x29a = 1.04786313053259f*x206 + 0.949727781877754f*x207;
            float x29b = -0.949727781877754f*x206 + 1.04786313053259f*x207;
            float x29c = 0.842446035509419f*x205 - 1.13590698442014f*x208;
            float x29d = -0.72705107329128f*x204 + 1.21301143309781f*x209;
            float x29e = 0.604654211790801f*x203 - 1.27843391857524f*x20a;
            float x29f = -0.476434199693161f*x202 + 1.33154438655373f*x20b;
            float x2a0 = 0.34362586580705f*x201 - 1.37183135419349f*x20c;
            float x2a1 = -0.207508226988212f*x200 + 1.39890683597308f*x20d;
            float x2a2 = 0.0693921705079407f*x1ff - 1.41251008020198f*x20e;
            float x2a3 = x293 + x29a;
            float x2a4 = x294 + x299;
            float x2a5 = x295 + x298;
            float x2a6 = x296 + x297;
            float x2a7 = x293 - x29a;
            float x2a8 = x294 - x299;
            float x2a9 = x295 - x298;
            float x2aa = x296 - x297;
            float x2ad = x2a3 + x2a6;
            float x2ae = x2a4 + x2a5;
            float x2af = x2a3 - x2a6;
            float x2b0 = x2a4 - x2a5;
            float x2b1 = 0.0883883476483184f * (x2ad + x2ae);
            float x2b2 = 0.0883883476483184f * (x2ad - x2ae);
            float x2b3 = 0.115484941563911f*x2af + 0.0478354290456362f*x2b0;
            float x2b4 = 0.0478354290456362f*x2af - 0.115484941563911f*x2b0;
            float x2b5 = 1.38703984532215f*x2a7 + 0.275899379282943f*x2aa;
            float x2b6 = 1.17587560241936f*x2a8 + 0.785694958387102f*x2a9;
            float x2b7 = -0.785694958387102f*x2a8 + 1.17587560241936f*x2a9;
            float x2b8 = 0.275899379282943f*x2a7 - 1.38703984532215f*x2aa;
            float x2b9 = 0.0883883476483184f * (x2b5 + x2b6);
            float x2ba = 0.0883883476483184f * (x2b5 - x2b6);
            float x2bb = 0.0883883476483184f * (x2b7 + x2b8);
            float x2bc = 0.0883883476483184f * (x2b7 - x2b8);
            float x2ab = 0.707106781186547f * (x2ba - x2bc);
            float x2ac = 0.707106781186547f * (x2ba + x2bc);
            float x2bd = x29b + x2a2;
            float x2be = x29c + x2a1;
            float x2bf = x29d + x2a0;
            float x2c0 = x29e + x29f;
            float x2c1 = x29b - x2a2;
            float x2c2 = x29c - x2a1;
            float x2c3 = x29d - x2a0;
            float x2c4 = x29e - x29f;
            float x2c7 = x2bd + x2c0;
            float x2c8 = x2be + x2bf;
            float x2c9 = x2bd - x2c0;
            float x2ca = x2be - x2bf;
            float x2cb = 0.0883883476483184f * (x2c7 + x2c8);
            float x2cc = 0.0883883476483184f * (x2c7 - x2c8);
            float x2cd = 0.115484941563911f*x2c9 + 0.0478354290456362f*x2ca;
            float x2ce = 0.0478354290456362f*x2c9 - 0.115484941563911f*x2ca;
            float x2cf = 1.38703984532215f*x2c1 + 0.275899379282943f*x2c4;
            float x2d0 = 1.17587560241936f*x2c2 + 0.785694958387102f*x2c3;
            float x2d1 = -0.785694958387102f*x2c2 + 1.17587560241936f*x2c3;
            float x2d2 = 0.275899379282943f*x2c1 - 1.38703984532215f*x2c4;
            float x2d3 = 0.0883883476483184f * (x2cf + x2d0);
            float x2d4 = 0.0883883476483184f * (x2cf - x2d0);
            float x2d5 = 0.0883883476483184f * (x2d1 + x2d2);
            float x2d6 = 0.0883883476483184f * (x2d1 - x2d2);
            float x2c5 = 0.707106781186547f * (x2d4 - x2d6);
            float x2c6 = 0.707106781186547f * (x2d4 + x2d6);
            float x21e = 0.707106781186547f * (x2b9 - x2d5);
            float x21f = 0.707106781186547f * (x2b9 + x2d5);
            float x220 = 0.707106781186547f * (x2b3 + x2ce);
            float x221 = 0.707106781186547f * (x2b3 - x2ce);
            float x222 = 0.707106781186547f * (x2ab - x2c6);
            float x223 = 0.707106781186547f * (x2ab + x2c6);
            float x224 = 0.707106781186547f * (x2b2 + x2cc);
            float x225 = 0.707106781186547f * (x2b2 - x2cc);
            float x226 = 0.707106781186547f * (x2ac - x2c5);
            float x227 = 0.707106781186547f * (x2ac + x2c5);
            float x228 = 0.707106781186547f * (x2b4 + x2cd);
            float x229 = 0.707106781186547f * (x2b4 - x2cd);
            float x22a = 0.707106781186547f * (x2bb - x2d3);
            float x22b = 0.707106781186547f * (x2bb + x2d3);
            float x2d7 = x1d0 + x1f0;
            float x2e8 = x1d1 + x1ef;
            float x2e9 = x1d2 + x1ee;
            float x2ea = x1d3 + x1ed;
            float x2eb = x1d4 + x1ec;
            float x2ec = x1d5 + x1eb;
            float x2ed = x1d6 + x1ea;
            float x2ee = x1d7 + x1e9;
            float x2ef = x1d8 + x1e8;
            float x2f0 = x1d9 + x1e7;
            float x2f1 = x1da + x1e6;
            float x2f2 = x1db + x1e5;
            float x2f3 = x1dc + x1e4;
            float x2f4 = x1dd + x1e3;
            float x2f5 = x1de + x1e2;
            float x2f6 = x1df + x1e1;
            float x2d8 = x1d0 - x1f0;
            float x2d9 = x1d1 - x1ef;
            float x2da = x1d2 - x1ee;
            float x2db = x1d3 - x1ed;
            float x2dc = x1d4 - x1ec;
            float x2dd = x1d5 - x1eb;
            float x2de = x1d6 - x1ea;
            float x2df = x1d7 - x1e9;
            float x2e0 = x1d8 - x1e8;
            float x2e1 = x1d9 - x1e7;
            float x2e2 = x1da - x1e6;
            float x2e3 = x1db - x1e5;
            float x2e4 = x1dc - x1e4;
            float x2e5 = x1dd - x1e3;
            float x2e6 = x1de - x1e2;
            float x2e7 = x1df - x1e1;
            float x305 = x2d7 + x2f6;
            float x306 = x2e8 + x2f5;
            float x307 = x2e9 + x2f4;
            float x308 = x2ea + x2f3;
            float x309 = x2eb + x2f2;
            float x30a = x2ec + x2f1;
            float x30b = x2ed + x2f0;
            float x30c = x2ee + x2ef;
            float x30d = x2d7 - x2f6;
            float x30e = x2e8 - x2f5;
            float x30f = x2e9 - x2f4;
            float x310 = x2ea - x2f3;
            float x311 = x2eb - x2f2;
            float x312 = x2ec - x2f1;
            float x313 = x2ed - x2f0;
            float x314 = x2ee - x2ef;
            float x31b = x305 + x30c;
            float x31c = x306 + x30b;
            float x31d = x307 + x30a;
            float x31e = x308 + x309;
            float x31f = x305 - x30c;
            float x320 = x306 - x30b;
            float x321 = x307 - x30a;
            float x322 = x308 - x309;
            float x325 = x31b + x31e;
            float x326 = x31c + x31d;
            float x327 = x31b - x31e;
            float x328 = x31c - x31d;
            float x329 = 0.0883883476483184f * (x325 - x326);
            float x32a = 0.115484941563911f*x327 + 0.0478354290456362f*x328;
            float x32b = 0.0478354290456362f*x327 - 0.115484941563911f*x328;
            float x32c = 1.38703984532215f*x31f + 0.275899379282943f*x322;
            float x32d = 1.17587560241936f*x320 + 0.785694958387102f*x321;
            float x32e = -0.785694958387102f*x320 + 1.17587560241936f*x321;
            float x32f = 0.275899379282943f*x31f - 1.38703984532215f*x322;
            float x330 = 0.0883883476483184f * (x32c + x32d);
            float x331 = 0.0883883476483184f * (x32c - x32d);
            float x332 = 0.0883883476483184f * (x32e + x32f);
            float x333 = 0.0883883476483184f * (x32e - x32f);
            float x323 = 0.707106781186547f * (x331 - x333);
            float x324 = 0.707106781186547f * (x331 + x333);
            float x344 = 1.40740373752638f*x30d + 0.138617169199091f*x314;
            float x345 = 1.35331800117435f*x30e + 0.410524527522357f*x313;
            float x346 = 1.24722501298667f*x30f + 0.666655658477747f*x312;
            float x347 = 1.09320186700176f*x310 + 0.897167586342636f*x311;
            float x348 = -0.897167586342636f*x310 + 1.09320186700176f*x311;
            float x349 = 0.666655658477747f*x30f - 1.24722501298667f*x312;
            float x34a = -0.410524527522357f*x30e + 1.35331800117435f*x313;
            float x34b = 0.138617169199091f*x30d - 1.40740373752638f*x314;
            float x34c = x344 + x347;
            float x34d = x345 + x346;
            float x34e = x344 - x347;
            float x34f = x345 - x346;
            float x350 = 0.0883883476483184f * (x34c + x34d);
            float x351 = 0.0883883476483184f * (x34c - x34d);
            float x352 = 0.115484941563911f*x34e + 0.0478354290456362f*x34f;
            float x353 = 0.0478354290456362f*x34e - 0.115484941563911f*x34f;
            float x354 = x348 + x34b;
            float x355 = x349 + x34a;
            float x356 = x348 - x34b;
            float x357 = x349 - x34a;
            float x358 = 0.0883883476483184f * (x354 + x355);
            float x359 = 0.0883883476483184f * (x354 - x355);
            float x35a = 0.115484941563911f*x356 + 0.0478354290456362f*x357;
            float x35b = 0.0478354290456362f*x356 - 0.115484941563911f*x357;
            float x315 = 0.707106781186547f * (x352 - x35b);
            float x316 = 0.707106781186547f * (x352 + x35b);
            float x317 = 0.707106781186547f * (x351 + x359);
            float x318 = 0.707106781186547f * (x351 - x359);
            float x319 = 0.707106781186547f * (x353 - x35a);
            float x31a = 0.707106781186547f * (x353 + x35a);
            float x35c = 1.41251008020198f*x2d8 + 0.0693921705079407f*x2e7;
            float x35d = 1.39890683597308f*x2d9 + 0.207508226988212f*x2e6;
            float x35e = 1.37183135419349f*x2da + 0.34362586580705f*x2e5;
            float x35f = 1.33154438655373f*x2db + 0.476434199693161f*x2e4;
            float x360 = 1.27843391857524f*x2dc + 0.604654211790801f*x2e3;
            float x361 = 1.21301143309781f*x2dd + 0.72705107329128f*x2e2;
            float x362 = 1.13590698442014f*x2de + 0.842446035509419f*x2e1;
            float x363 = 1.04786313053259f*x2df + 0.949727781877754f*x2e0;
            float x364 = -0.949727781877754f*x2df + 1.04786313053259f*x2e0;
            float x365 = 0.842446035509419f*x2de - 1.13590698442014f*x2e1;
            float x366 = -0.72705107329128f*x2dd + 1.21301143309781f*x2e2;
            float x367 = 0.604654211790801f*x2dc - 1.27843391857524f*x2e3;
            float x368 = -0.476434199693161f*x2db + 1.33154438655373f*x2e4;
            float x369 = 0.34362586580705f*x2da - 1.37183135419349f*x2e5;
            float x36a = -0.207508226988212f*x2d9 + 1.39890683597308f*x2e6;
            float x36b = 0.0693921705079407f*x2d8 - 1.41251008020198f*x2e7;
            float x36c = x35c + x363;
            float x36d = x35d + x362;
            float x36e = x35e + x361;
            float x36f = x35f + x360;
            float x370 = x35c - x363;
            float x371 = x35d - x362;
            float x372 = x35e - x361;
            float x373 = x35f - x360;
            float x376 = x36c + x36f;
            float x377 = x36d + x36e;
            float x378 = x36c - x36f;
            float x379 = x36d - x36e;
            float x37a = 0.0883883476483184f * (x376 + x377);
            float x37b = 0.0883883476483184f * (x376 - x377);
            float x37c = 0.115484941563911f*x378 + 0.0478354290456362f*x379;
            float x37d = 0.0478354290456362f*x378 - 0.115484941563911f*x379;
            float x37e = 1.38703984532215f*x370 + 0.275899379282943f*x373;
            float x37f = 1.17587560241936f*x371 + 0.785694958387102f*x372;
            float x380 = -0.785694958387102f*x371 + 1.17587560241936f*x372;
            float x381 = 0.275899379282943f*x370 - 1.38703984532215f*x373;
            float x382 = 0.0883883476483184f * (x37e + x37f);
            float x383 = 0.0883883476483184f * (x37e - x37f);
            float x384 = 0.0883883476483184f * (x380 + x381);
            float x385 = 0.0883883476483184f * (x380 - x381);
            float x374 = 0.707106781186547f * (x383 - x385);
            float x375 = 0.707106781186547f * (x383 + x385);
            float x386 = x364 + x36b;
            float x387 = x365 + x36a;
            float x388 = x366 + x369;
            float x389 = x367 + x368;
            float x38a = x364 - x36b;
            float x38b = x365 - x36a;
            float x38c = x366 - x369;
            float x38d = x367 - x368;
            float x390 = x386 + x389;
            float x391 = x387 + x388;
            float x392 = x386 - x389;
            float x393 = x387 - x388;
            float x394 = 0.0883883476483184f * (x390 + x391);
            float x395 = 0.0883883476483184f * (x390 - x391);
            float x396 = 0.115484941563911f*x392 + 0.0478354290456362f*x393;
            float x397 = 0.0478354290456362f*x392 - 0.115484941563911f*x393;
            float x398 = 1.38703984532215f*x38a + 0.275899379282943f*x38d;
            float x399 = 1.17587560241936f*x38b + 0.785694958387102f*x38c;
            float x39a = -0.785694958387102f*x38b + 1.17587560241936f*x38c;
            float x39b = 0.275899379282943f*x38a - 1.38703984532215f*x38d;
            float x39c = 0.0883883476483184f * (x398 + x399);
            float x39d = 0.0883883476483184f * (x398 - x399);
            float x39e = 0.0883883476483184f * (x39a + x39b);
            float x39f = 0.0883883476483184f * (x39a - x39b);
            float x38e = 0.707106781186547f * (x39d - x39f);
            float x38f = 0.707106781186547f * (x39d + x39f);
            float x2f7 = 0.707106781186547f * (x382 - x39e);
            float x2f8 = 0.707106781186547f * (x382 + x39e);
            float x2f9 = 0.707106781186547f * (x37c + x397);
            float x2fa = 0.707106781186547f * (x37c - x397);
            float x2fb = 0.707106781186547f * (x374 - x38f);
            float x2fc = 0.707106781186547f * (x374 + x38f);
            float x2fd = 0.707106781186547f * (x37b + x395);
            float x2fe = 0.707106781186547f * (x37b - x395);
            float x2ff = 0.707106781186547f * (x375 - x38e);
            float x300 = 0.707106781186547f * (x375 + x38e);
            float x301 = 0.707106781186547f * (x37d + x396);
            float x302 = 0.707106781186547f * (x37d - x396);
            float x303 = 0.707106781186547f * (x384 - x39c);
            float x304 = 0.707106781186547f * (x384 + x39c);
            dst[  0 * dst_stridea] = 0.0883883476483184f * (x3a8 + x3a9);
            dst[  1 * dst_stridea] = 0.0883883476483184f * (x24c + x24d);
            dst[  2 * dst_stridea] = 0.0883883476483184f * (x110 + x111);
            dst[  3 * dst_stridea] = 0.707106781186547f * (x2b1 - x394);
            dst[  4 * dst_stridea] = 0.0883883476483184f * (x0a8 + x0a9);
            dst[  5 * dst_stridea] = 0.707106781186547f * (x2b1 + x394);
            dst[  6 * dst_stridea] = -0.707106781186547f*x1ba + 0.707106781186547f*x16b;
            dst[  7 * dst_stridea] = 0.707106781186547f * (x287 + x358);
            dst[  8 * dst_stridea] = 0.0883883476483184f * (x080 + x081);
            dst[  9 * dst_stridea] = 0.707106781186547f * (x287 - x358);
            dst[ 10 * dst_stridea] = 0.707106781186547f * (x1ba + x16b);
            dst[ 11 * dst_stridea] = -0.707106781186547f*x304 + 0.707106781186547f*x21e;
            dst[ 12 * dst_stridea] = 0.707106781186547f * (x0b3 - x0ce);
            dst[ 13 * dst_stridea] = 0.707106781186547f * (x304 + x21e);
            dst[ 14 * dst_stridea] = 0.707106781186547f * (x1a4 + x15b);
            dst[ 15 * dst_stridea] = 0.707106781186547f * (x332 + x277);
            dst[ 16 * dst_stridea] = 0.0883883476483184f * (x3ac + x3ad);
            dst[ 17 * dst_stridea] = -0.707106781186547f*x332 + 0.707106781186547f*x277;
            dst[ 18 * dst_stridea] = -0.707106781186547f*x1a4 + 0.707106781186547f*x15b;
            dst[ 19 * dst_stridea] = -0.707106781186547f*x303 + 0.707106781186547f*x21f;
            dst[ 20 * dst_stridea] = 0.707106781186547f * (x0b3 + x0ce);
            dst[ 21 * dst_stridea] = 0.707106781186547f * (x303 + x21f);
            dst[ 22 * dst_stridea] = -0.707106781186547f*x18c + 0.707106781186547f*x100;
            dst[ 23 * dst_stridea] = 0.707106781186547f * (x31a + x23c);
            dst[ 24 * dst_stridea] = 0.707106781186547f * (x085 - x08d);
            dst[ 25 * dst_stridea] = -0.707106781186547f*x31a + 0.707106781186547f*x23c;
            dst[ 26 * dst_stridea] = 0.707106781186547f * (x18c + x100);
            dst[ 27 * dst_stridea] = -0.707106781186547f*x302 + 0.707106781186547f*x220;
            dst[ 28 * dst_stridea] = 0.707106781186547f * (x0ad + x0c7);
            dst[ 29 * dst_stridea] = 0.707106781186547f * (x302 + x220);
            dst[ 30 * dst_stridea] = 0.707106781186547f * (x19d + x115);
            dst[ 31 * dst_stridea] = 0.707106781186547f * (x32b + x251);
            dst[ 32 * dst_stridea] = 0.115484941563911f*x3aa + 0.0478354290456362f*x3ab;
            dst[ 33 * dst_stridea] = -0.707106781186547f*x32b + 0.707106781186547f*x251;
            dst[ 34 * dst_stridea] = -0.707106781186547f*x19d + 0.707106781186547f*x115;
            dst[ 35 * dst_stridea] = -0.707106781186547f*x301 + 0.707106781186547f*x221;
            dst[ 36 * dst_stridea] = 0.707106781186547f * (x0ad - x0c7);
            dst[ 37 * dst_stridea] = 0.707106781186547f * (x301 + x221);
            dst[ 38 * dst_stridea] = -0.707106781186547f*x18b + 0.707106781186547f*x101;
            dst[ 39 * dst_stridea] = 0.707106781186547f * (x319 + x23d);
            dst[ 40 * dst_stridea] = 0.707106781186547f * (x085 + x08d);
            dst[ 41 * dst_stridea] = -0.707106781186547f*x319 + 0.707106781186547f*x23d;
            dst[ 42 * dst_stridea] = 0.707106781186547f * (x18b + x101);
            dst[ 43 * dst_stridea] = -0.707106781186547f*x300 + 0.707106781186547f*x222;
            dst[ 44 * dst_stridea] = 0.707106781186547f * (x0a6 - x0c0);
            dst[ 45 * dst_stridea] = 0.707106781186547f * (x300 + x222);
            dst[ 46 * dst_stridea] = 0.707106781186547f * (x196 + x10e);
            dst[ 47 * dst_stridea] = 0.707106781186547f * (x324 + x24a);
            dst[ 48 * dst_stridea] = 0.707106781186547f * (x3b0 - x3b1);
            dst[ 49 * dst_stridea] = -0.707106781186547f*x324 + 0.707106781186547f*x24a;
            dst[ 50 * dst_stridea] = -0.707106781186547f*x196 + 0.707106781186547f*x10e;
            dst[ 51 * dst_stridea] = -0.707106781186547f*x2ff + 0.707106781186547f*x223;
            dst[ 52 * dst_stridea] = 0.707106781186547f * (x0a6 + x0c0);
            dst[ 53 * dst_stridea] = 0.707106781186547f * (x2ff + x223);
            dst[ 54 * dst_stridea] = -0.707106781186547f*x18a + 0.707106781186547f*x102;
            dst[ 55 * dst_stridea] = 0.707106781186547f * (x318 + x23e);
            dst[ 56 * dst_stridea] = 0.707106781186547f * (x084 + x08b);
            dst[ 57 * dst_stridea] = -0.707106781186547f*x318 + 0.707106781186547f*x23e;
            dst[ 58 * dst_stridea] = 0.707106781186547f * (x18a + x102);
            dst[ 59 * dst_stridea] = -0.707106781186547f*x2fe + 0.707106781186547f*x224;
            dst[ 60 * dst_stridea] = 0.707106781186547f * (x0ac + x0c5);
            dst[ 61 * dst_stridea] = 0.707106781186547f * (x2fe + x224);
            dst[ 62 * dst_stridea] = 0.707106781186547f * (x19b + x114);
            dst[ 63 * dst_stridea] = 0.707106781186547f * (x250 + x329);
            dst[ 64 * dst_stridea] = 0.0883883476483184f * (x3a8 - x3a9);
            dst[ 65 * dst_stridea] = 0.707106781186547f * (x250 - x329);
            dst[ 66 * dst_stridea] = -0.707106781186547f*x19b + 0.707106781186547f*x114;
            dst[ 67 * dst_stridea] = 0.707106781186547f * (x225 - x2fd);
            dst[ 68 * dst_stridea] = 0.707106781186547f * (x0ac - x0c5);
            dst[ 69 * dst_stridea] = 0.707106781186547f * (x225 + x2fd);
            dst[ 70 * dst_stridea] = -0.707106781186547f*x189 + 0.707106781186547f*x103;
            dst[ 71 * dst_stridea] = 0.707106781186547f * (x23f + x317);
            dst[ 72 * dst_stridea] = 0.707106781186547f * (x084 - x08b);
            dst[ 73 * dst_stridea] = 0.707106781186547f * (x23f - x317);
            dst[ 74 * dst_stridea] = 0.707106781186547f * (x189 + x103);
            dst[ 75 * dst_stridea] = 0.707106781186547f * (x226 - x2fc);
            dst[ 76 * dst_stridea] = 0.707106781186547f * (x0a7 - x0bf);
            dst[ 77 * dst_stridea] = 0.707106781186547f * (x226 + x2fc);
            dst[ 78 * dst_stridea] = 0.707106781186547f * (x195 + x10f);
            dst[ 79 * dst_stridea] = 0.707106781186547f * (x24b + x323);
            dst[ 80 * dst_stridea] = 0.707106781186547f * (x3b0 + x3b1);
            dst[ 81 * dst_stridea] = 0.707106781186547f * (x24b - x323);
            dst[ 82 * dst_stridea] = -0.707106781186547f*x195 + 0.707106781186547f*x10f;
            dst[ 83 * dst_stridea] = 0.707106781186547f * (x227 - x2fb);
            dst[ 84 * dst_stridea] = 0.707106781186547f * (x0a7 + x0bf);
            dst[ 85 * dst_stridea] = 0.707106781186547f * (x227 + x2fb);
            dst[ 86 * dst_stridea] = -0.707106781186547f*x188 + 0.707106781186547f*x104;
            dst[ 87 * dst_stridea] = 0.707106781186547f * (x240 + x316);
            dst[ 88 * dst_stridea] = 0.707106781186547f * (x086 - x08c);
            dst[ 89 * dst_stridea] = 0.707106781186547f * (x240 - x316);
            dst[ 90 * dst_stridea] = 0.707106781186547f * (x188 + x104);
            dst[ 91 * dst_stridea] = 0.707106781186547f * (x228 - x2fa);
            dst[ 92 * dst_stridea] = 0.707106781186547f * (x0ae + x0c6);
            dst[ 93 * dst_stridea] = 0.707106781186547f * (x228 + x2fa);
            dst[ 94 * dst_stridea] = 0.707106781186547f * (x19c + x116);
            dst[ 95 * dst_stridea] = 0.707106781186547f * (x252 + x32a);
            dst[ 96 * dst_stridea] = 0.0478354290456362f*x3aa - 0.115484941563911f*x3ab;
            dst[ 97 * dst_stridea] = 0.707106781186547f * (x252 - x32a);
            dst[ 98 * dst_stridea] = -0.707106781186547f*x19c + 0.707106781186547f*x116;
            dst[ 99 * dst_stridea] = 0.707106781186547f * (x229 - x2f9);
            dst[100 * dst_stridea] = 0.707106781186547f * (x0ae - x0c6);
            dst[101 * dst_stridea] = 0.707106781186547f * (x229 + x2f9);
            dst[102 * dst_stridea] = -0.707106781186547f*x187 + 0.707106781186547f*x105;
            dst[103 * dst_stridea] = 0.707106781186547f * (x241 + x315);
            dst[104 * dst_stridea] = 0.707106781186547f * (x086 + x08c);
            dst[105 * dst_stridea] = 0.707106781186547f * (x241 - x315);
            dst[106 * dst_stridea] = 0.707106781186547f * (x187 + x105);
            dst[107 * dst_stridea] = 0.707106781186547f * (x22a - x2f8);
            dst[108 * dst_stridea] = 0.707106781186547f * (x0b5 - x0cc);
            dst[109 * dst_stridea] = 0.707106781186547f * (x22a + x2f8);
            dst[110 * dst_stridea] = 0.707106781186547f * (x1a2 + x15d);
            dst[111 * dst_stridea] = 0.707106781186547f * (x279 + x330);
            dst[112 * dst_stridea] = 0.0883883476483184f * (x3ae + x3af);
            dst[113 * dst_stridea] = 0.707106781186547f * (x279 - x330);
            dst[114 * dst_stridea] = -0.707106781186547f*x1a2 + 0.707106781186547f*x15d;
            dst[115 * dst_stridea] = 0.707106781186547f * (x22b - x2f7);
            dst[116 * dst_stridea] = 0.707106781186547f * (x0b5 + x0cc);
            dst[117 * dst_stridea] = 0.707106781186547f * (x22b + x2f7);
            dst[118 * dst_stridea] = -0.707106781186547f*x1b2 + 0.707106781186547f*x173;
            dst[119 * dst_stridea] = 0.707106781186547f * (x28f + x350);
            dst[120 * dst_stridea] = 0.0883883476483184f * (x087 + x088);
            dst[121 * dst_stridea] = 0.707106781186547f * (x28f - x350);
            dst[122 * dst_stridea] = 0.707106781186547f * (x1b2 + x173);
            dst[123 * dst_stridea] = 0.707106781186547f * (x2cb - x37a);
            dst[124 * dst_stridea] = 0.0883883476483184f * (x0c1 + x0c2);
            dst[125 * dst_stridea] = 0.707106781186547f * (x2cb + x37a);
            dst[126 * dst_stridea] = 0.0883883476483184f * (x197 + x198);
            dst[127 * dst_stridea] = 0.0883883476483184f * (x325 + x326);
            dst += dst_strideb;
            src += src_strideb;
        }
    }

    public static void InverseDct(ReadOnlySpan<float> source, Span<float> destination)
    {
        fixed (float* dst = destination)
        fixed (float* src = source)
        {
            float* tmp = stackalloc float[N*N];
            InverseDct1d(tmp, src, 1, N, 1, N);
            InverseDct1d(dst, tmp, N, 1, N, 1);
        }
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    private static void InverseDct1d(
        float* dst, float* src,
        int dst_stridea, int dst_strideb,
        int src_stridea, int src_strideb)
    {
        int i;

        for (i = 0; i < N; i++) {
            float x000 = 1.4142135623731f*src[  0 * src_stridea];
            float x011 = 1.41410707469279f*src[  1 * src_stridea] + 0.0173545758748458f*src[127 * src_stridea];
            float x022 = 1.41378762768853f*src[  2 * src_stridea] + 0.0347065382144f*src[126 * src_stridea];
            float x033 = 1.41325526946787f*src[  3 * src_stridea] + 0.0520532738769598f*src[125 * src_stridea];
            float x044 = 1.41251008020198f*src[  4 * src_stridea] + 0.0693921705079407f*src[124 * src_stridea];
            float x055 = 1.41155217211363f*src[  5 * src_stridea] + 0.0867206169332876f*src[123 * src_stridea];
            float x066 = 1.41038168946026f*src[  6 * src_stridea] + 0.104036003552708f*src[122 * src_stridea];
            float x077 = 1.40899880851225f*src[  7 * src_stridea] + 0.121335722732667f*src[121 * src_stridea];
            float x078 = 1.40740373752638f*src[  8 * src_stridea] + 0.138617169199091f*src[120 * src_stridea];
            float x079 = 1.40559671671448f*src[  9 * src_stridea] + 0.155877740429708f*src[119 * src_stridea];
            float x07a = 1.40357801820723f*src[ 10 * src_stridea] + 0.173114837045979f*src[118 * src_stridea];
            float x07b = 1.40134794601321f*src[ 11 * src_stridea] + 0.190325863204558f*src[117 * src_stridea];
            float x07c = 1.39890683597308f*src[ 12 * src_stridea] + 0.207508226988212f*src[116 * src_stridea];
            float x07d = 1.39625505570903f*src[ 13 * src_stridea] + 0.224659340796156f*src[115 * src_stridea];
            float x07e = 1.39339300456943f*src[ 14 * src_stridea] + 0.241776621733738f*src[114 * src_stridea];
            float x07f = 1.39032111356864f*src[ 15 * src_stridea] + 0.258857492001412f*src[113 * src_stridea];
            float x001 = 1.38703984532215f*src[ 16 * src_stridea] + 0.275899379282943f*src[112 * src_stridea];
            float x002 = 1.38354969397688f*src[ 17 * src_stridea] + 0.292899717132792f*src[111 * src_stridea];
            float x003 = 1.3798511851368f*src[ 18 * src_stridea] + 0.30985594536261f*src[110 * src_stridea];
            float x004 = 1.37594487578373f*src[ 19 * src_stridea] + 0.326765510426796f*src[109 * src_stridea];
            float x005 = 1.37183135419349f*src[ 20 * src_stridea] + 0.34362586580705f*src[108 * src_stridea];
            float x006 = 1.3675112398473f*src[ 21 * src_stridea] + 0.360434472395869f*src[107 * src_stridea];
            float x007 = 1.3629851833385f*src[ 22 * src_stridea] + 0.377188798878927f*src[106 * src_stridea];
            float x008 = 1.35825386627453f*src[ 23 * src_stridea] + 0.393886322116284f*src[105 * src_stridea];
            float x009 = 1.35331800117435f*src[ 24 * src_stridea] + 0.410524527522357f*src[104 * src_stridea];
            float x00a = 1.34817833136109f*src[ 25 * src_stridea] + 0.427100909444614f*src[103 * src_stridea];
            float x00b = 1.34283563085012f*src[ 26 * src_stridea] + 0.443612971540909f*src[102 * src_stridea];
            float x00c = 1.33729070423248f*src[ 27 * src_stridea] + 0.460058227155426f*src[101 * src_stridea];
            float x00d = 1.33154438655373f*src[ 28 * src_stridea] + 0.476434199693161f*src[100 * src_stridea];
            float x00e = 1.32559754318816f*src[ 29 * src_stridea] + 0.492738422992885f*src[ 99 * src_stridea];
            float x00f = 1.31945106970852f*src[ 30 * src_stridea] + 0.508968441698541f*src[ 98 * src_stridea];
            float x010 = 1.31310589175111f*src[ 31 * src_stridea] + 0.52512181162901f*src[ 97 * src_stridea];
            float x012 = 1.30656296487638f*src[ 32 * src_stridea] + 0.541196100146197f*src[ 96 * src_stridea];
            float x013 = 1.29982327442505f*src[ 33 * src_stridea] + 0.557188886521378f*src[ 95 * src_stridea];
            float x014 = 1.29288783536973f*src[ 34 * src_stridea] + 0.573097762299751f*src[ 94 * src_stridea];
            float x015 = 1.28575769216201f*src[ 35 * src_stridea] + 0.58892033166314f*src[ 93 * src_stridea];
            float x016 = 1.27843391857524f*src[ 36 * src_stridea] + 0.604654211790801f*src[ 92 * src_stridea];
            float x017 = 1.27091761754278f*src[ 37 * src_stridea] + 0.620297033218258f*src[ 91 * src_stridea];
            float x018 = 1.26320992099193f*src[ 38 * src_stridea] + 0.635846440194145f*src[ 90 * src_stridea];
            float x019 = 1.25531198967342f*src[ 39 * src_stridea] + 0.651300091034966f*src[ 89 * src_stridea];
            float x01a = 1.24722501298667f*src[ 40 * src_stridea] + 0.666655658477747f*src[ 88 * src_stridea];
            float x01b = 1.23895020880062f*src[ 41 * src_stridea] + 0.681910830030513f*src[ 87 * src_stridea];
            float x01c = 1.23048882327034f*src[ 42 * src_stridea] + 0.697063308320542f*src[ 86 * src_stridea];
            float x01d = 1.22184213064937f*src[ 43 * src_stridea] + 0.712110811440338f*src[ 85 * src_stridea];
            float x01e = 1.21301143309781f*src[ 44 * src_stridea] + 0.72705107329128f*src[ 84 * src_stridea];
            float x01f = 1.20399806048623f*src[ 45 * src_stridea] + 0.741881843924889f*src[ 83 * src_stridea];
            float x020 = 1.1948033701954f*src[ 46 * src_stridea] + 0.756600889881659f*src[ 82 * src_stridea];
            float x021 = 1.18542874691185f*src[ 47 * src_stridea] + 0.771205994527409f*src[ 81 * src_stridea];
            float x023 = 1.17587560241936f*src[ 48 * src_stridea] + 0.785694958387102f*src[ 80 * src_stridea];
            float x024 = 1.16614537538636f*src[ 49 * src_stridea] + 0.800065599476075f*src[ 79 * src_stridea];
            float x025 = 1.15623953114924f*src[ 50 * src_stridea] + 0.81431575362864f*src[ 78 * src_stridea];
            float x026 = 1.14615956149172f*src[ 51 * src_stridea] + 0.828443274823997f*src[ 77 * src_stridea];
            float x027 = 1.13590698442014f*src[ 52 * src_stridea] + 0.842446035509419f*src[ 76 * src_stridea];
            float x028 = 1.12548334393491f*src[ 53 * src_stridea] + 0.856321926920654f*src[ 75 * src_stridea];
            float x029 = 1.11489020979793f*src[ 54 * src_stridea] + 0.870068859399494f*src[ 74 * src_stridea];
            float x02a = 1.10412917729624f*src[ 55 * src_stridea] + 0.883684762708473f*src[ 73 * src_stridea];
            float x02b = 1.09320186700176f*src[ 56 * src_stridea] + 0.897167586342636f*src[ 72 * src_stridea];
            float x02c = 1.08210992452722f*src[ 57 * src_stridea] + 0.910515299838338f*src[ 71 * src_stridea];
            float x02d = 1.07085502027836f*src[ 58 * src_stridea] + 0.923725893079023f*src[ 70 * src_stridea];
            float x02e = 1.05943884920236f*src[ 59 * src_stridea] + 0.936797376597941f*src[ 69 * src_stridea];
            float x02f = 1.04786313053259f*src[ 60 * src_stridea] + 0.949727781877754f*src[ 68 * src_stridea];
            float x030 = 1.03612960752971f*src[ 61 * src_stridea] + 0.962515161646991f*src[ 67 * src_stridea];
            float x031 = 1.02424004721912f*src[ 62 * src_stridea] + 0.975157590173292f*src[ 66 * src_stridea];
            float x032 = 1.01219624012486f*src[ 63 * src_stridea] + 0.987653163553425f*src[ 65 * src_stridea];
            float x034 = 1.4142135623731f*src[ 64 * src_stridea];
            float x035 = -0.987653163553425f*src[ 63 * src_stridea] + 1.01219624012486f*src[ 65 * src_stridea];
            float x036 = 0.975157590173292f*src[ 62 * src_stridea] - 1.02424004721912f*src[ 66 * src_stridea];
            float x037 = -0.962515161646991f*src[ 61 * src_stridea] + 1.03612960752971f*src[ 67 * src_stridea];
            float x038 = 0.949727781877754f*src[ 60 * src_stridea] - 1.04786313053259f*src[ 68 * src_stridea];
            float x039 = -0.936797376597941f*src[ 59 * src_stridea] + 1.05943884920236f*src[ 69 * src_stridea];
            float x03a = 0.923725893079023f*src[ 58 * src_stridea] - 1.07085502027836f*src[ 70 * src_stridea];
            float x03b = -0.910515299838338f*src[ 57 * src_stridea] + 1.08210992452722f*src[ 71 * src_stridea];
            float x03c = 0.897167586342636f*src[ 56 * src_stridea] - 1.09320186700176f*src[ 72 * src_stridea];
            float x03d = -0.883684762708473f*src[ 55 * src_stridea] + 1.10412917729624f*src[ 73 * src_stridea];
            float x03e = 0.870068859399494f*src[ 54 * src_stridea] - 1.11489020979793f*src[ 74 * src_stridea];
            float x03f = -0.856321926920654f*src[ 53 * src_stridea] + 1.12548334393491f*src[ 75 * src_stridea];
            float x040 = 0.842446035509419f*src[ 52 * src_stridea] - 1.13590698442014f*src[ 76 * src_stridea];
            float x041 = -0.828443274823997f*src[ 51 * src_stridea] + 1.14615956149172f*src[ 77 * src_stridea];
            float x042 = 0.81431575362864f*src[ 50 * src_stridea] - 1.15623953114924f*src[ 78 * src_stridea];
            float x043 = -0.800065599476075f*src[ 49 * src_stridea] + 1.16614537538636f*src[ 79 * src_stridea];
            float x045 = 0.785694958387102f*src[ 48 * src_stridea] - 1.17587560241936f*src[ 80 * src_stridea];
            float x046 = -0.771205994527409f*src[ 47 * src_stridea] + 1.18542874691185f*src[ 81 * src_stridea];
            float x047 = 0.756600889881659f*src[ 46 * src_stridea] - 1.1948033701954f*src[ 82 * src_stridea];
            float x048 = -0.741881843924889f*src[ 45 * src_stridea] + 1.20399806048623f*src[ 83 * src_stridea];
            float x049 = 0.72705107329128f*src[ 44 * src_stridea] - 1.21301143309781f*src[ 84 * src_stridea];
            float x04a = -0.712110811440338f*src[ 43 * src_stridea] + 1.22184213064937f*src[ 85 * src_stridea];
            float x04b = 0.697063308320542f*src[ 42 * src_stridea] - 1.23048882327034f*src[ 86 * src_stridea];
            float x04c = -0.681910830030513f*src[ 41 * src_stridea] + 1.23895020880062f*src[ 87 * src_stridea];
            float x04d = 0.666655658477747f*src[ 40 * src_stridea] - 1.24722501298667f*src[ 88 * src_stridea];
            float x04e = -0.651300091034966f*src[ 39 * src_stridea] + 1.25531198967342f*src[ 89 * src_stridea];
            float x04f = 0.635846440194145f*src[ 38 * src_stridea] - 1.26320992099193f*src[ 90 * src_stridea];
            float x050 = -0.620297033218258f*src[ 37 * src_stridea] + 1.27091761754278f*src[ 91 * src_stridea];
            float x051 = 0.604654211790801f*src[ 36 * src_stridea] - 1.27843391857524f*src[ 92 * src_stridea];
            float x052 = -0.58892033166314f*src[ 35 * src_stridea] + 1.28575769216201f*src[ 93 * src_stridea];
            float x053 = 0.573097762299751f*src[ 34 * src_stridea] - 1.29288783536973f*src[ 94 * src_stridea];
            float x054 = -0.557188886521378f*src[ 33 * src_stridea] + 1.29982327442505f*src[ 95 * src_stridea];
            float x056 = 0.541196100146197f*src[ 32 * src_stridea] - 1.30656296487638f*src[ 96 * src_stridea];
            float x057 = -0.52512181162901f*src[ 31 * src_stridea] + 1.31310589175111f*src[ 97 * src_stridea];
            float x058 = 0.508968441698541f*src[ 30 * src_stridea] - 1.31945106970852f*src[ 98 * src_stridea];
            float x059 = -0.492738422992885f*src[ 29 * src_stridea] + 1.32559754318816f*src[ 99 * src_stridea];
            float x05a = 0.476434199693161f*src[ 28 * src_stridea] - 1.33154438655373f*src[100 * src_stridea];
            float x05b = -0.460058227155426f*src[ 27 * src_stridea] + 1.33729070423248f*src[101 * src_stridea];
            float x05c = 0.443612971540909f*src[ 26 * src_stridea] - 1.34283563085012f*src[102 * src_stridea];
            float x05d = -0.427100909444614f*src[ 25 * src_stridea] + 1.34817833136109f*src[103 * src_stridea];
            float x05e = 0.410524527522357f*src[ 24 * src_stridea] - 1.35331800117435f*src[104 * src_stridea];
            float x05f = -0.393886322116284f*src[ 23 * src_stridea] + 1.35825386627453f*src[105 * src_stridea];
            float x060 = 0.377188798878927f*src[ 22 * src_stridea] - 1.3629851833385f*src[106 * src_stridea];
            float x061 = -0.360434472395869f*src[ 21 * src_stridea] + 1.3675112398473f*src[107 * src_stridea];
            float x062 = 0.34362586580705f*src[ 20 * src_stridea] - 1.37183135419349f*src[108 * src_stridea];
            float x063 = -0.326765510426796f*src[ 19 * src_stridea] + 1.37594487578373f*src[109 * src_stridea];
            float x064 = 0.30985594536261f*src[ 18 * src_stridea] - 1.3798511851368f*src[110 * src_stridea];
            float x065 = -0.292899717132792f*src[ 17 * src_stridea] + 1.38354969397688f*src[111 * src_stridea];
            float x067 = 0.275899379282943f*src[ 16 * src_stridea] - 1.38703984532215f*src[112 * src_stridea];
            float x068 = -0.258857492001412f*src[ 15 * src_stridea] + 1.39032111356864f*src[113 * src_stridea];
            float x069 = 0.241776621733738f*src[ 14 * src_stridea] - 1.39339300456943f*src[114 * src_stridea];
            float x06a = -0.224659340796156f*src[ 13 * src_stridea] + 1.39625505570903f*src[115 * src_stridea];
            float x06b = 0.207508226988212f*src[ 12 * src_stridea] - 1.39890683597308f*src[116 * src_stridea];
            float x06c = -0.190325863204558f*src[ 11 * src_stridea] + 1.40134794601321f*src[117 * src_stridea];
            float x06d = 0.173114837045979f*src[ 10 * src_stridea] - 1.40357801820723f*src[118 * src_stridea];
            float x06e = -0.155877740429708f*src[  9 * src_stridea] + 1.40559671671448f*src[119 * src_stridea];
            float x06f = 0.138617169199091f*src[  8 * src_stridea] - 1.40740373752638f*src[120 * src_stridea];
            float x070 = -0.121335722732667f*src[  7 * src_stridea] + 1.40899880851225f*src[121 * src_stridea];
            float x071 = 0.104036003552708f*src[  6 * src_stridea] - 1.41038168946026f*src[122 * src_stridea];
            float x072 = -0.0867206169332876f*src[  5 * src_stridea] + 1.41155217211363f*src[123 * src_stridea];
            float x073 = 0.0693921705079407f*src[  4 * src_stridea] - 1.41251008020198f*src[124 * src_stridea];
            float x074 = -0.0520532738769598f*src[  3 * src_stridea] + 1.41325526946787f*src[125 * src_stridea];
            float x075 = 0.0347065382144f*src[  2 * src_stridea] - 1.41378762768853f*src[126 * src_stridea];
            float x076 = -0.0173545758748458f*src[  1 * src_stridea] + 1.41410707469279f*src[127 * src_stridea];
            float x137 = x000 + x034;
            float x148 = x011 + x032;
            float x159 = x022 + x031;
            float x16a = x030 + x033;
            float x16c = x02f + x044;
            float x16d = x02e + x055;
            float x16e = x02d + x066;
            float x16f = x02c + x077;
            float x170 = x02b + x078;
            float x171 = x02a + x079;
            float x172 = x029 + x07a;
            float x173 = x028 + x07b;
            float x174 = x027 + x07c;
            float x175 = x026 + x07d;
            float x176 = x025 + x07e;
            float x177 = x024 + x07f;
            float x138 = x001 + x023;
            float x139 = x002 + x021;
            float x13a = x003 + x020;
            float x13b = x004 + x01f;
            float x13c = x005 + x01e;
            float x13d = x006 + x01d;
            float x13e = x007 + x01c;
            float x13f = x008 + x01b;
            float x140 = x009 + x01a;
            float x141 = x00a + x019;
            float x142 = x00b + x018;
            float x143 = x00c + x017;
            float x144 = x00d + x016;
            float x145 = x00e + x015;
            float x146 = x00f + x014;
            float x147 = x010 + x013;
            float x149 = 1.4142135623731f*x012;
            float x14a = x000 - x034;
            float x14b = x011 - x032;
            float x14c = x022 - x031;
            float x14d = -x030 + x033;
            float x14e = -x02f + x044;
            float x14f = -x02e + x055;
            float x150 = -x02d + x066;
            float x151 = -x02c + x077;
            float x152 = -x02b + x078;
            float x153 = -x02a + x079;
            float x154 = -x029 + x07a;
            float x155 = -x028 + x07b;
            float x156 = -x027 + x07c;
            float x157 = -x026 + x07d;
            float x158 = -x025 + x07e;
            float x15a = -x024 + x07f;
            float x15b = x001 - x023;
            float x15c = x002 - x021;
            float x15d = x003 - x020;
            float x15e = x004 - x01f;
            float x15f = x005 - x01e;
            float x160 = x006 - x01d;
            float x161 = x007 - x01c;
            float x162 = x008 - x01b;
            float x163 = x009 - x01a;
            float x164 = x00a - x019;
            float x165 = x00b - x018;
            float x166 = x00c - x017;
            float x167 = x00d - x016;
            float x168 = x00e - x015;
            float x169 = x00f - x014;
            float x16b = x010 - x013;
            float x2b4 = x137 + x149;
            float x2c5 = x147 + x148;
            float x2c7 = x146 + x159;
            float x2c8 = x145 + x16a;
            float x2c9 = x144 + x16c;
            float x2ca = x143 + x16d;
            float x2cb = x142 + x16e;
            float x2cc = x141 + x16f;
            float x2cd = x140 + x170;
            float x2ce = x13f + x171;
            float x2cf = x13e + x172;
            float x2d0 = x13d + x173;
            float x2d1 = x13c + x174;
            float x2d2 = x13b + x175;
            float x2d3 = x13a + x176;
            float x2d4 = x139 + x177;
            float x2b5 = 1.4142135623731f*x138;
            float x2b6 = x137 - x149;
            float x2b7 = -x147 + x148;
            float x2b8 = -x146 + x159;
            float x2b9 = -x145 + x16a;
            float x2ba = -x144 + x16c;
            float x2bb = -x143 + x16d;
            float x2bc = -x142 + x16e;
            float x2bd = -x141 + x16f;
            float x2be = -x140 + x170;
            float x2bf = -x13f + x171;
            float x2c0 = -x13e + x172;
            float x2c1 = -x13d + x173;
            float x2c2 = -x13c + x174;
            float x2c3 = -x13b + x175;
            float x2c4 = -x13a + x176;
            float x2c6 = -x139 + x177;
            float x3ac = x2b4 + x2b5;
            float x3ae = x2c5 + x2d4;
            float x3af = x2c7 + x2d3;
            float x3b0 = x2c8 + x2d2;
            float x3b1 = x2c9 + x2d1;
            float x3b2 = x2ca + x2d0;
            float x3b3 = x2cb + x2cf;
            float x3b4 = x2cc + x2ce;
            float x3b5 = 1.4142135623731f*x2cd;
            float x3b6 = x2b4 - x2b5;
            float x3b7 = x2c5 - x2d4;
            float x3b8 = x2c7 - x2d3;
            float x3b9 = x2c8 - x2d2;
            float x3ba = x2c9 - x2d1;
            float x3bb = x2ca - x2d0;
            float x3bc = x2cb - x2cf;
            float x3ad = x2cc - x2ce;
            float x423 = x3ac + x3b5;
            float x424 = x3ae + x3b4;
            float x425 = x3af + x3b3;
            float x426 = x3b0 + x3b2;
            float x427 = 1.4142135623731f*x3b1;
            float x428 = x3ac - x3b5;
            float x429 = x3ae - x3b4;
            float x42a = x3af - x3b3;
            float x42b = x3b0 - x3b2;
            float x42e = x423 + x427;
            float x42f = x424 + x426;
            float x430 = 1.4142135623731f*x425;
            float x431 = x423 - x427;
            float x432 = x424 - x426;
            float x433 = 0.0883883476483184f * (x42e - x430);
            float x434 = 0.0883883476483184f * (x431 + x432);
            float x435 = 0.0883883476483184f * (x431 - x432);
            float x436 = 1.4142135623731f*x428;
            float x437 = 1.30656296487638f*x429 + 0.541196100146197f*x42b;
            float x438 = 1.4142135623731f*x42a;
            float x439 = -0.541196100146197f*x429 + 1.30656296487638f*x42b;
            float x43a = 0.0625f * (x436 + x438) + 0.0883883476483184f*x437;
            float x43b = 0.0883883476483184f * (x436 - x438);
            float x43c = 0.0625f * (x436 + x438) - 0.0883883476483184f*x437;
            float x43d = 0.125f*x439;
            float x42c = 0.707106781186547f * (x43b - x43d);
            float x42d = 0.707106781186547f * (x43b + x43d);
            float x43e = 1.4142135623731f*x3b6;
            float x43f = 0.275899379282943f*x3ad + 1.38703984532215f*x3b7;
            float x440 = 1.30656296487638f*x3b8 + 0.541196100146197f*x3bc;
            float x441 = 1.17587560241936f*x3b9 + 0.785694958387102f*x3bb;
            float x442 = 1.4142135623731f*x3ba;
            float x443 = -0.785694958387102f*x3b9 + 1.17587560241936f*x3bb;
            float x444 = 0.541196100146197f*x3b8 - 1.30656296487638f*x3bc;
            float x445 = 1.38703984532215f*x3ad - 0.275899379282943f*x3b7;
            float x080 = x43e + x442;
            float x081 = x43f + x441;
            float x082 = 1.4142135623731f*x440;
            float x083 = x43e - x442;
            float x084 = x43f - x441;
            float x085 = 0.0625f * (x080 + x082) + 0.0883883476483184f*x081;
            float x086 = 0.0883883476483184f * (x080 - x082);
            float x087 = 0.0625f * (x080 + x082) - 0.0883883476483184f*x081;
            float x088 = 0.0883883476483184f * (x083 + x084);
            float x089 = 0.0883883476483184f * (x083 - x084);
            float x08a = 1.4142135623731f*x444;
            float x08b = x443 + x445;
            float x08c = x443 - x445;
            float x08d = 0.0883883476483184f * (x08a + x08b);
            float x08e = 0.0883883476483184f * (x08a - x08b);
            float x08f = 0.125f*x08c;
            float x446 = -x08e;
            float x40f = 0.707106781186547f * (x088 - x446);
            float x410 = 0.707106781186547f * (x088 + x446);
            float x411 = 0.707106781186547f * (x086 + x08f);
            float x412 = 0.707106781186547f * (x086 - x08f);
            float x413 = 0.707106781186547f * (x089 - x08d);
            float x414 = 0.707106781186547f * (x089 + x08d);
            float x090 = 1.4142135623731f*x2b6;
            float x091 = 1.40740373752638f*x2b7 + 0.138617169199091f*x2c6;
            float x092 = 1.38703984532215f*x2b8 + 0.275899379282943f*x2c4;
            float x093 = 1.35331800117435f*x2b9 + 0.410524527522357f*x2c3;
            float x094 = 1.30656296487638f*x2ba + 0.541196100146197f*x2c2;
            float x095 = 1.24722501298667f*x2bb + 0.666655658477747f*x2c1;
            float x096 = 1.17587560241936f*x2bc + 0.785694958387102f*x2c0;
            float x097 = 1.09320186700176f*x2bd + 0.897167586342636f*x2bf;
            float x098 = 1.4142135623731f*x2be;
            float x099 = -0.897167586342636f*x2bd + 1.09320186700176f*x2bf;
            float x09a = 0.785694958387102f*x2bc - 1.17587560241936f*x2c0;
            float x09b = -0.666655658477747f*x2bb + 1.24722501298667f*x2c1;
            float x09c = 0.541196100146197f*x2ba - 1.30656296487638f*x2c2;
            float x09d = -0.410524527522357f*x2b9 + 1.35331800117435f*x2c3;
            float x09e = 0.275899379282943f*x2b8 - 1.38703984532215f*x2c4;
            float x09f = -0.138617169199091f*x2b7 + 1.40740373752638f*x2c6;
            float x0a2 = x090 + x098;
            float x0a3 = x091 + x097;
            float x0a4 = x092 + x096;
            float x0a5 = x093 + x095;
            float x0a6 = 1.4142135623731f*x094;
            float x0a7 = x090 - x098;
            float x0a8 = x091 - x097;
            float x0a9 = x092 - x096;
            float x0aa = x093 - x095;
            float x0ad = x0a2 + x0a6;
            float x0ae = x0a3 + x0a5;
            float x0af = 1.4142135623731f*x0a4;
            float x0b0 = x0a2 - x0a6;
            float x0b1 = x0a3 - x0a5;
            float x0b2 = 0.0625f * (x0ad + x0af) + 0.0883883476483184f*x0ae;
            float x0b3 = 0.0883883476483184f * (x0ad - x0af);
            float x0b4 = 0.0625f * (x0ad + x0af) - 0.0883883476483184f*x0ae;
            float x0b5 = 0.0883883476483184f * (x0b0 + x0b1);
            float x0b6 = 0.0883883476483184f * (x0b0 - x0b1);
            float x0c7 = 1.4142135623731f*x0a7;
            float x0c8 = 1.30656296487638f*x0a8 + 0.541196100146197f*x0aa;
            float x0c9 = 1.4142135623731f*x0a9;
            float x0ca = -0.541196100146197f*x0a8 + 1.30656296487638f*x0aa;
            float x0cb = 0.0625f * (x0c7 + x0c9) + 0.0883883476483184f*x0c8;
            float x0cc = 0.0883883476483184f * (x0c7 - x0c9);
            float x0cd = 0.0625f * (x0c7 + x0c9) - 0.0883883476483184f*x0c8;
            float x0ce = 0.125f*x0ca;
            float x0ab = 0.707106781186547f * (x0cc - x0ce);
            float x0ac = 0.707106781186547f * (x0cc + x0ce);
            float x0cf = 1.4142135623731f*x09c;
            float x0d0 = x09b + x09d;
            float x0d1 = x09a + x09e;
            float x0d2 = x099 + x09f;
            float x0d3 = x099 - x09f;
            float x0d4 = x09a - x09e;
            float x0d5 = x09b - x09d;
            float x0d9 = 1.4142135623731f*x0cf;
            float x0da = 1.30656296487638f*x0d0 + 0.541196100146197f*x0d2;
            float x0db = 1.4142135623731f*x0d1;
            float x0dc = -0.541196100146197f*x0d0 + 1.30656296487638f*x0d2;
            float x0dd = 0.0625f * (x0d9 + x0db) + 0.0883883476483184f*x0da;
            float x0de = 0.0883883476483184f * (x0d9 - x0db);
            float x0df = 0.0625f * (x0d9 + x0db) - 0.0883883476483184f*x0da;
            float x0e0 = 0.125f*x0dc;
            float x0d6 = 0.707106781186547f * (x0de - x0e0);
            float x0d7 = 0.707106781186547f * (x0de + x0e0);
            float x0e1 = 1.4142135623731f*x0d4;
            float x0e2 = x0d3 + x0d5;
            float x0e3 = x0d3 - x0d5;
            float x0e4 = 0.0883883476483184f * (x0e1 + x0e2);
            float x0e5 = 0.0883883476483184f * (x0e1 - x0e2);
            float x0e6 = 0.125f*x0e3;
            float x0d8 = -x0e5;
            float x0a0 = -x0d6;
            float x0a1 = -x0df;
            float x326 = 0.707106781186547f * (x0cb - x0a1);
            float x327 = 0.707106781186547f * (x0cb + x0a1);
            float x328 = 0.707106781186547f * (x0b5 + x0d8);
            float x329 = 0.707106781186547f * (x0b5 - x0d8);
            float x32a = 0.707106781186547f * (x0ab - x0d7);
            float x32b = 0.707106781186547f * (x0ab + x0d7);
            float x32c = 0.707106781186547f * (x0b3 + x0e6);
            float x32d = 0.707106781186547f * (x0b3 - x0e6);
            float x32e = 0.707106781186547f * (x0ac - x0a0);
            float x32f = 0.707106781186547f * (x0ac + x0a0);
            float x330 = 0.707106781186547f * (x0b6 + x0e4);
            float x331 = 0.707106781186547f * (x0b6 - x0e4);
            float x332 = 0.707106781186547f * (x0cd - x0dd);
            float x333 = 0.707106781186547f * (x0cd + x0dd);
            float x0e7 = 1.4142135623731f*x14a;
            float x0f8 = 1.41251008020198f*x14b + 0.0693921705079407f*x16b;
            float x0f9 = 1.40740373752638f*x14c + 0.138617169199091f*x169;
            float x0fa = 1.39890683597308f*x14d + 0.207508226988212f*x168;
            float x0fb = 1.38703984532215f*x14e + 0.275899379282943f*x167;
            float x0fc = 1.37183135419349f*x14f + 0.34362586580705f*x166;
            float x0fd = 1.35331800117435f*x150 + 0.410524527522357f*x165;
            float x0fe = 1.33154438655373f*x151 + 0.476434199693161f*x164;
            float x0ff = 1.30656296487638f*x152 + 0.541196100146197f*x163;
            float x100 = 1.27843391857524f*x153 + 0.604654211790801f*x162;
            float x101 = 1.24722501298667f*x154 + 0.666655658477747f*x161;
            float x102 = 1.21301143309781f*x155 + 0.72705107329128f*x160;
            float x103 = 1.17587560241936f*x156 + 0.785694958387102f*x15f;
            float x104 = 1.13590698442014f*x157 + 0.842446035509419f*x15e;
            float x105 = 1.09320186700176f*x158 + 0.897167586342636f*x15d;
            float x106 = 1.04786313053259f*x15a + 0.949727781877754f*x15c;
            float x0e8 = 1.4142135623731f*x15b;
            float x0e9 = -0.949727781877754f*x15a + 1.04786313053259f*x15c;
            float x0ea = 0.897167586342636f*x158 - 1.09320186700176f*x15d;
            float x0eb = -0.842446035509419f*x157 + 1.13590698442014f*x15e;
            float x0ec = 0.785694958387102f*x156 - 1.17587560241936f*x15f;
            float x0ed = -0.72705107329128f*x155 + 1.21301143309781f*x160;
            float x0ee = 0.666655658477747f*x154 - 1.24722501298667f*x161;
            float x0ef = -0.604654211790801f*x153 + 1.27843391857524f*x162;
            float x0f0 = 0.541196100146197f*x152 - 1.30656296487638f*x163;
            float x0f1 = -0.476434199693161f*x151 + 1.33154438655373f*x164;
            float x0f2 = 0.410524527522357f*x150 - 1.35331800117435f*x165;
            float x0f3 = -0.34362586580705f*x14f + 1.37183135419349f*x166;
            float x0f4 = 0.275899379282943f*x14e - 1.38703984532215f*x167;
            float x0f5 = -0.207508226988212f*x14d + 1.39890683597308f*x168;
            float x0f6 = 0.138617169199091f*x14c - 1.40740373752638f*x169;
            float x0f7 = -0.0693921705079407f*x14b + 1.41251008020198f*x16b;
            float x10b = x0e7 + x0e8;
            float x10d = x0f8 + x106;
            float x10e = x0f9 + x105;
            float x10f = x0fa + x104;
            float x110 = x0fb + x103;
            float x111 = x0fc + x102;
            float x112 = x0fd + x101;
            float x113 = x0fe + x100;
            float x114 = 1.4142135623731f*x0ff;
            float x115 = x0e7 - x0e8;
            float x116 = x0f8 - x106;
            float x117 = x0f9 - x105;
            float x118 = x0fa - x104;
            float x119 = x0fb - x103;
            float x11a = x0fc - x102;
            float x11b = x0fd - x101;
            float x10c = x0fe - x100;
            float x122 = x10b + x114;
            float x123 = x10d + x113;
            float x124 = x10e + x112;
            float x125 = x10f + x111;
            float x126 = 1.4142135623731f*x110;
            float x127 = x10b - x114;
            float x128 = x10d - x113;
            float x129 = x10e - x112;
            float x12a = x10f - x111;
            float x12d = x122 + x126;
            float x12e = x123 + x125;
            float x12f = 1.4142135623731f*x124;
            float x130 = x122 - x126;
            float x131 = x123 - x125;
            float x132 = 0.0625f * (x12d + x12f) + 0.0883883476483184f*x12e;
            float x133 = 0.0883883476483184f * (x12d - x12f);
            float x134 = 0.0625f * (x12d + x12f) - 0.0883883476483184f*x12e;
            float x135 = 0.0883883476483184f * (x130 + x131);
            float x136 = 0.0883883476483184f * (x130 - x131);
            float x178 = 1.4142135623731f*x127;
            float x179 = 1.30656296487638f*x128 + 0.541196100146197f*x12a;
            float x17a = 1.4142135623731f*x129;
            float x17b = -0.541196100146197f*x128 + 1.30656296487638f*x12a;
            float x17c = 0.0625f * (x178 + x17a) + 0.0883883476483184f*x179;
            float x17d = 0.0883883476483184f * (x178 - x17a);
            float x17e = 0.0625f * (x178 + x17a) - 0.0883883476483184f*x179;
            float x17f = 0.125f*x17b;
            float x12b = 0.707106781186547f * (x17d - x17f);
            float x12c = 0.707106781186547f * (x17d + x17f);
            float x180 = 1.4142135623731f*x115;
            float x181 = 0.275899379282943f*x10c + 1.38703984532215f*x116;
            float x182 = 1.30656296487638f*x117 + 0.541196100146197f*x11b;
            float x183 = 1.17587560241936f*x118 + 0.785694958387102f*x11a;
            float x184 = 1.4142135623731f*x119;
            float x185 = -0.785694958387102f*x118 + 1.17587560241936f*x11a;
            float x186 = 0.541196100146197f*x117 - 1.30656296487638f*x11b;
            float x187 = 1.38703984532215f*x10c - 0.275899379282943f*x116;
            float x189 = x180 + x184;
            float x18a = x181 + x183;
            float x18b = 1.4142135623731f*x182;
            float x18c = x180 - x184;
            float x18d = x181 - x183;
            float x18e = 0.0625f * (x189 + x18b) + 0.0883883476483184f*x18a;
            float x18f = 0.0883883476483184f * (x189 - x18b);
            float x190 = 0.0625f * (x189 + x18b) - 0.0883883476483184f*x18a;
            float x191 = 0.0883883476483184f * (x18c + x18d);
            float x192 = 0.0883883476483184f * (x18c - x18d);
            float x193 = 1.4142135623731f*x186;
            float x194 = x185 + x187;
            float x195 = x185 - x187;
            float x196 = 0.0883883476483184f * (x193 + x194);
            float x197 = 0.0883883476483184f * (x193 - x194);
            float x198 = 0.125f*x195;
            float x188 = -x197;
            float x11c = 0.707106781186547f * (x191 - x188);
            float x11d = 0.707106781186547f * (x191 + x188);
            float x11e = 0.707106781186547f * (x18f + x198);
            float x11f = 0.707106781186547f * (x18f - x198);
            float x120 = 0.707106781186547f * (x192 - x196);
            float x121 = 0.707106781186547f * (x192 + x196);
            float x199 = 1.4142135623731f*x0f0;
            float x19a = x0ef + x0f1;
            float x19b = x0ee + x0f2;
            float x19c = x0ed + x0f3;
            float x19d = x0ec + x0f4;
            float x19e = x0eb + x0f5;
            float x19f = x0ea + x0f6;
            float x1a0 = x0e9 + x0f7;
            float x1a1 = x0e9 - x0f7;
            float x1a2 = x0ea - x0f6;
            float x1a3 = x0eb - x0f5;
            float x1a4 = x0ec - x0f4;
            float x1a5 = x0ed - x0f3;
            float x1a6 = x0ee - x0f2;
            float x1a7 = x0ef - x0f1;
            float x1b0 = 1.4142135623731f*x199;
            float x1b1 = 1.38703984532215f*x19a + 0.275899379282943f*x1a0;
            float x1b2 = 1.30656296487638f*x19b + 0.541196100146197f*x19f;
            float x1b3 = 1.17587560241936f*x19c + 0.785694958387102f*x19e;
            float x1b4 = 1.4142135623731f*x19d;
            float x1b5 = -0.785694958387102f*x19c + 1.17587560241936f*x19e;
            float x1b6 = 0.541196100146197f*x19b - 1.30656296487638f*x19f;
            float x1b7 = -0.275899379282943f*x19a + 1.38703984532215f*x1a0;
            float x1b9 = x1b0 + x1b4;
            float x1ba = x1b1 + x1b3;
            float x1bb = 1.4142135623731f*x1b2;
            float x1bc = x1b0 - x1b4;
            float x1bd = x1b1 - x1b3;
            float x1be = 0.0625f * (x1b9 + x1bb) + 0.0883883476483184f*x1ba;
            float x1bf = 0.0883883476483184f * (x1b9 - x1bb);
            float x1c0 = 0.0625f * (x1b9 + x1bb) - 0.0883883476483184f*x1ba;
            float x1c1 = 0.0883883476483184f * (x1bc + x1bd);
            float x1c2 = 0.0883883476483184f * (x1bc - x1bd);
            float x1c3 = 1.4142135623731f*x1b6;
            float x1c4 = x1b5 + x1b7;
            float x1c5 = x1b5 - x1b7;
            float x1c6 = 0.0883883476483184f * (x1c3 + x1c4);
            float x1c7 = 0.0883883476483184f * (x1c3 - x1c4);
            float x1c8 = 0.125f*x1c5;
            float x1b8 = -x1c7;
            float x1a8 = 0.707106781186547f * (x1c1 - x1b8);
            float x1a9 = 0.707106781186547f * (x1c1 + x1b8);
            float x1aa = 0.707106781186547f * (x1bf + x1c8);
            float x1ab = 0.707106781186547f * (x1bf - x1c8);
            float x1ac = 0.707106781186547f * (x1c2 - x1c6);
            float x1ad = 0.707106781186547f * (x1c2 + x1c6);
            float x1e7 = 1.4142135623731f*x1a4;
            float x1e8 = x1a3 + x1a5;
            float x1e9 = x1a2 + x1a6;
            float x1ea = x1a1 + x1a7;
            float x1eb = x1a1 - x1a7;
            float x1ec = x1a2 - x1a6;
            float x1ed = x1a3 - x1a5;
            float x1f1 = 1.4142135623731f*x1e7;
            float x1f2 = 1.30656296487638f*x1e8 + 0.541196100146197f*x1ea;
            float x1f3 = 1.4142135623731f*x1e9;
            float x1f4 = -0.541196100146197f*x1e8 + 1.30656296487638f*x1ea;
            float x1f5 = 0.0625f * (x1f1 + x1f3) + 0.0883883476483184f*x1f2;
            float x1f6 = 0.0883883476483184f * (x1f1 - x1f3);
            float x1f7 = 0.0625f * (x1f1 + x1f3) - 0.0883883476483184f*x1f2;
            float x1f8 = 0.125f*x1f4;
            float x1ee = 0.707106781186547f * (x1f6 - x1f8);
            float x1ef = 0.707106781186547f * (x1f6 + x1f8);
            float x1f9 = 1.4142135623731f*x1ec;
            float x1fa = x1eb + x1ed;
            float x1fb = x1eb - x1ed;
            float x1fc = 0.0883883476483184f * (x1f9 + x1fa);
            float x1fd = 0.0883883476483184f * (x1f9 - x1fa);
            float x1fe = 0.125f*x1fb;
            float x1f0 = -x1fd;
            float x1ae = -x1ee;
            float x1af = -x1f7;
            float x107 = -x1a8;
            float x108 = -x1aa;
            float x109 = -x1ac;
            float x10a = -x1c0;
            float x1c9 = -0.707106781186547f*x10a + 0.707106781186547f*x18e;
            float x1ca = 0.707106781186547f * (x10a + x18e);
            float x1cb = 0.707106781186547f * (x1af + x17c);
            float x1cc = -0.707106781186547f*x1af + 0.707106781186547f*x17c;
            float x1cd = -0.707106781186547f*x1ad + 0.707106781186547f*x11c;
            float x1ce = 0.707106781186547f * (x1ad + x11c);
            float x1cf = 0.707106781186547f * (x1f0 + x135);
            float x1d0 = -0.707106781186547f*x1f0 + 0.707106781186547f*x135;
            float x1d1 = -0.707106781186547f*x109 + 0.707106781186547f*x11d;
            float x1d2 = 0.707106781186547f * (x109 + x11d);
            float x1d3 = 0.707106781186547f * (x1ef + x12b);
            float x1d4 = -0.707106781186547f*x1ef + 0.707106781186547f*x12b;
            float x1d5 = -0.707106781186547f*x1ab + 0.707106781186547f*x11e;
            float x1d6 = 0.707106781186547f * (x1ab + x11e);
            float x1d7 = 0.707106781186547f * (x1fe + x133);
            float x1d8 = -0.707106781186547f*x1fe + 0.707106781186547f*x133;
            float x1d9 = -0.707106781186547f*x108 + 0.707106781186547f*x11f;
            float x1da = 0.707106781186547f * (x108 + x11f);
            float x1db = 0.707106781186547f * (x1ae + x12c);
            float x1dc = -0.707106781186547f*x1ae + 0.707106781186547f*x12c;
            float x1dd = -0.707106781186547f*x1a9 + 0.707106781186547f*x120;
            float x1de = 0.707106781186547f * (x1a9 + x120);
            float x1df = 0.707106781186547f * (x1fc + x136);
            float x1e0 = -0.707106781186547f*x1fc + 0.707106781186547f*x136;
            float x1e1 = -0.707106781186547f*x107 + 0.707106781186547f*x121;
            float x1e2 = 0.707106781186547f * (x107 + x121);
            float x1e3 = 0.707106781186547f * (x1f5 + x17e);
            float x1e4 = -0.707106781186547f*x1f5 + 0.707106781186547f*x17e;
            float x1e5 = -0.707106781186547f*x1be + 0.707106781186547f*x190;
            float x1e6 = 0.707106781186547f * (x1be + x190);
            float x1ff = 1.4142135623731f*x056;
            float x210 = x054 + x057;
            float x221 = x053 + x058;
            float x231 = x052 + x059;
            float x232 = x051 + x05a;
            float x233 = x050 + x05b;
            float x234 = x04f + x05c;
            float x235 = x04e + x05d;
            float x236 = x04d + x05e;
            float x237 = x04c + x05f;
            float x238 = x04b + x060;
            float x239 = x04a + x061;
            float x23a = x049 + x062;
            float x23b = x048 + x063;
            float x23c = x047 + x064;
            float x23d = x046 + x065;
            float x200 = x045 + x067;
            float x201 = x043 + x068;
            float x202 = x042 + x069;
            float x203 = x041 + x06a;
            float x204 = x040 + x06b;
            float x205 = x03f + x06c;
            float x206 = x03e + x06d;
            float x207 = x03d + x06e;
            float x208 = x03c + x06f;
            float x209 = x03b + x070;
            float x20a = x03a + x071;
            float x20b = x039 + x072;
            float x20c = x038 + x073;
            float x20d = x037 + x074;
            float x20e = x036 + x075;
            float x20f = x035 + x076;
            float x211 = x035 - x076;
            float x212 = x036 - x075;
            float x213 = x037 - x074;
            float x214 = x038 - x073;
            float x215 = x039 - x072;
            float x216 = x03a - x071;
            float x217 = x03b - x070;
            float x218 = x03c - x06f;
            float x219 = x03d - x06e;
            float x21a = x03e - x06d;
            float x21b = x03f - x06c;
            float x21c = x040 - x06b;
            float x21d = x041 - x06a;
            float x21e = x042 - x069;
            float x21f = x043 - x068;
            float x220 = x045 - x067;
            float x222 = x046 - x065;
            float x223 = x047 - x064;
            float x224 = x048 - x063;
            float x225 = x049 - x062;
            float x226 = x04a - x061;
            float x227 = x04b - x060;
            float x228 = x04c - x05f;
            float x229 = x04d - x05e;
            float x22a = x04e - x05d;
            float x22b = x04f - x05c;
            float x22c = x050 - x05b;
            float x22d = x051 - x05a;
            float x22e = x052 - x059;
            float x22f = x053 - x058;
            float x230 = x054 - x057;
            float x264 = 1.4142135623731f*x1ff;
            float x275 = 0.0693921705079407f*x20f + 1.41251008020198f*x210;
            float x276 = 0.138617169199091f*x20e + 1.40740373752638f*x221;
            float x277 = 0.207508226988212f*x20d + 1.39890683597308f*x231;
            float x278 = 0.275899379282943f*x20c + 1.38703984532215f*x232;
            float x279 = 0.34362586580705f*x20b + 1.37183135419349f*x233;
            float x27a = 0.410524527522357f*x20a + 1.35331800117435f*x234;
            float x27b = 0.476434199693161f*x209 + 1.33154438655373f*x235;
            float x27c = 0.541196100146197f*x208 + 1.30656296487638f*x236;
            float x27d = 0.604654211790801f*x207 + 1.27843391857524f*x237;
            float x27e = 0.666655658477747f*x206 + 1.24722501298667f*x238;
            float x27f = 0.72705107329128f*x205 + 1.21301143309781f*x239;
            float x280 = 0.785694958387102f*x204 + 1.17587560241936f*x23a;
            float x281 = 0.842446035509419f*x203 + 1.13590698442014f*x23b;
            float x282 = 0.897167586342636f*x202 + 1.09320186700176f*x23c;
            float x283 = 0.949727781877754f*x201 + 1.04786313053259f*x23d;
            float x265 = 1.4142135623731f*x200;
            float x266 = 1.04786313053259f*x201 - 0.949727781877754f*x23d;
            float x267 = -1.09320186700176f*x202 + 0.897167586342636f*x23c;
            float x268 = 1.13590698442014f*x203 - 0.842446035509419f*x23b;
            float x269 = -1.17587560241936f*x204 + 0.785694958387102f*x23a;
            float x26a = 1.21301143309781f*x205 - 0.72705107329128f*x239;
            float x26b = -1.24722501298667f*x206 + 0.666655658477747f*x238;
            float x26c = 1.27843391857524f*x207 - 0.604654211790801f*x237;
            float x26d = -1.30656296487638f*x208 + 0.541196100146197f*x236;
            float x26e = 1.33154438655373f*x209 - 0.476434199693161f*x235;
            float x26f = -1.35331800117435f*x20a + 0.410524527522357f*x234;
            float x270 = 1.37183135419349f*x20b - 0.34362586580705f*x233;
            float x271 = -1.38703984532215f*x20c + 0.275899379282943f*x232;
            float x272 = 1.39890683597308f*x20d - 0.207508226988212f*x231;
            float x273 = -1.40740373752638f*x20e + 0.138617169199091f*x221;
            float x274 = 1.41251008020198f*x20f - 0.0693921705079407f*x210;
            float x288 = x264 + x265;
            float x28a = x275 + x283;
            float x28b = x276 + x282;
            float x28c = x277 + x281;
            float x28d = x278 + x280;
            float x28e = x279 + x27f;
            float x28f = x27a + x27e;
            float x290 = x27b + x27d;
            float x291 = 1.4142135623731f*x27c;
            float x292 = x264 - x265;
            float x293 = x275 - x283;
            float x294 = x276 - x282;
            float x295 = x277 - x281;
            float x296 = x278 - x280;
            float x297 = x279 - x27f;
            float x298 = x27a - x27e;
            float x289 = x27b - x27d;
            float x29f = x288 + x291;
            float x2a0 = x28a + x290;
            float x2a1 = x28b + x28f;
            float x2a2 = x28c + x28e;
            float x2a3 = 1.4142135623731f*x28d;
            float x2a4 = x288 - x291;
            float x2a5 = x28a - x290;
            float x2a6 = x28b - x28f;
            float x2a7 = x28c - x28e;
            float x2aa = x29f + x2a3;
            float x2ab = x2a0 + x2a2;
            float x2ac = 1.4142135623731f*x2a1;
            float x2ad = x29f - x2a3;
            float x2ae = x2a0 - x2a2;
            float x2af = 0.0625f * (x2aa + x2ac) + 0.0883883476483184f*x2ab;
            float x2b0 = 0.0883883476483184f * (x2aa - x2ac);
            float x2b1 = 0.0625f * (x2aa + x2ac) - 0.0883883476483184f*x2ab;
            float x2b2 = 0.0883883476483184f * (x2ad + x2ae);
            float x2b3 = 0.0883883476483184f * (x2ad - x2ae);
            float x2d5 = 1.4142135623731f*x2a4;
            float x2d6 = 1.30656296487638f*x2a5 + 0.541196100146197f*x2a7;
            float x2d7 = 1.4142135623731f*x2a6;
            float x2d8 = -0.541196100146197f*x2a5 + 1.30656296487638f*x2a7;
            float x2d9 = 0.0625f * (x2d5 + x2d7) + 0.0883883476483184f*x2d6;
            float x2da = 0.0883883476483184f * (x2d5 - x2d7);
            float x2db = 0.0625f * (x2d5 + x2d7) - 0.0883883476483184f*x2d6;
            float x2dc = 0.125f*x2d8;
            float x2a8 = 0.707106781186547f * (x2da - x2dc);
            float x2a9 = 0.707106781186547f * (x2da + x2dc);
            float x2dd = 1.4142135623731f*x292;
            float x2de = 0.275899379282943f*x289 + 1.38703984532215f*x293;
            float x2df = 1.30656296487638f*x294 + 0.541196100146197f*x298;
            float x2e0 = 1.17587560241936f*x295 + 0.785694958387102f*x297;
            float x2e1 = 1.4142135623731f*x296;
            float x2e2 = -0.785694958387102f*x295 + 1.17587560241936f*x297;
            float x2e3 = 0.541196100146197f*x294 - 1.30656296487638f*x298;
            float x2e4 = 1.38703984532215f*x289 - 0.275899379282943f*x293;
            float x2e6 = x2dd + x2e1;
            float x2e7 = x2de + x2e0;
            float x2e8 = 1.4142135623731f*x2df;
            float x2e9 = x2dd - x2e1;
            float x2ea = x2de - x2e0;
            float x2eb = 0.0625f * (x2e6 + x2e8) + 0.0883883476483184f*x2e7;
            float x2ec = 0.0883883476483184f * (x2e6 - x2e8);
            float x2ed = 0.0625f * (x2e6 + x2e8) - 0.0883883476483184f*x2e7;
            float x2ee = 0.0883883476483184f * (x2e9 + x2ea);
            float x2ef = 0.0883883476483184f * (x2e9 - x2ea);
            float x2f0 = 1.4142135623731f*x2e3;
            float x2f1 = x2e2 + x2e4;
            float x2f2 = x2e2 - x2e4;
            float x2f3 = 0.0883883476483184f * (x2f0 + x2f1);
            float x2f4 = 0.0883883476483184f * (x2f0 - x2f1);
            float x2f5 = 0.125f*x2f2;
            float x2e5 = -x2f4;
            float x299 = 0.707106781186547f * (x2ee - x2e5);
            float x29a = 0.707106781186547f * (x2ee + x2e5);
            float x29b = 0.707106781186547f * (x2ec + x2f5);
            float x29c = 0.707106781186547f * (x2ec - x2f5);
            float x29d = 0.707106781186547f * (x2ef - x2f3);
            float x29e = 0.707106781186547f * (x2ef + x2f3);
            float x2f6 = 1.4142135623731f*x26d;
            float x2f7 = x26c + x26e;
            float x2f8 = x26b + x26f;
            float x2f9 = x26a + x270;
            float x2fa = x269 + x271;
            float x2fb = x268 + x272;
            float x2fc = x267 + x273;
            float x2fd = x266 + x274;
            float x2fe = x266 - x274;
            float x2ff = x267 - x273;
            float x300 = x268 - x272;
            float x301 = x269 - x271;
            float x302 = x26a - x270;
            float x303 = x26b - x26f;
            float x304 = x26c - x26e;
            float x30d = 1.4142135623731f*x2f6;
            float x30e = 1.38703984532215f*x2f7 + 0.275899379282943f*x2fd;
            float x30f = 1.30656296487638f*x2f8 + 0.541196100146197f*x2fc;
            float x310 = 1.17587560241936f*x2f9 + 0.785694958387102f*x2fb;
            float x311 = 1.4142135623731f*x2fa;
            float x312 = -0.785694958387102f*x2f9 + 1.17587560241936f*x2fb;
            float x313 = 0.541196100146197f*x2f8 - 1.30656296487638f*x2fc;
            float x314 = -0.275899379282943f*x2f7 + 1.38703984532215f*x2fd;
            float x316 = x30d + x311;
            float x317 = x30e + x310;
            float x318 = 1.4142135623731f*x30f;
            float x319 = x30d - x311;
            float x31a = x30e - x310;
            float x31b = 0.0625f * (x316 + x318) + 0.0883883476483184f*x317;
            float x31c = 0.0883883476483184f * (x316 - x318);
            float x31d = 0.0625f * (x316 + x318) - 0.0883883476483184f*x317;
            float x31e = 0.0883883476483184f * (x319 + x31a);
            float x31f = 0.0883883476483184f * (x319 - x31a);
            float x320 = 1.4142135623731f*x313;
            float x321 = x312 + x314;
            float x322 = x312 - x314;
            float x323 = 0.0883883476483184f * (x320 + x321);
            float x324 = 0.0883883476483184f * (x320 - x321);
            float x325 = 0.125f*x322;
            float x315 = -x324;
            float x305 = 0.707106781186547f * (x31e - x315);
            float x306 = 0.707106781186547f * (x31e + x315);
            float x307 = 0.707106781186547f * (x31c + x325);
            float x308 = 0.707106781186547f * (x31c - x325);
            float x309 = 0.707106781186547f * (x31f - x323);
            float x30a = 0.707106781186547f * (x31f + x323);
            float x334 = 1.4142135623731f*x301;
            float x335 = x300 + x302;
            float x336 = x2ff + x303;
            float x337 = x2fe + x304;
            float x338 = x2fe - x304;
            float x339 = x2ff - x303;
            float x33a = x300 - x302;
            float x33e = 1.4142135623731f*x334;
            float x33f = 1.30656296487638f*x335 + 0.541196100146197f*x337;
            float x340 = 1.4142135623731f*x336;
            float x341 = -0.541196100146197f*x335 + 1.30656296487638f*x337;
            float x342 = 0.0625f * (x33e + x340) + 0.0883883476483184f*x33f;
            float x343 = 0.0883883476483184f * (x33e - x340);
            float x344 = 0.0625f * (x33e + x340) - 0.0883883476483184f*x33f;
            float x345 = 0.125f*x341;
            float x33b = 0.707106781186547f * (x343 - x345);
            float x33c = 0.707106781186547f * (x343 + x345);
            float x346 = 1.4142135623731f*x339;
            float x347 = x338 + x33a;
            float x348 = x338 - x33a;
            float x349 = 0.0883883476483184f * (x346 + x347);
            float x34a = 0.0883883476483184f * (x346 - x347);
            float x34b = 0.125f*x348;
            float x33d = -x34a;
            float x30b = -x33b;
            float x30c = -x344;
            float x284 = -x305;
            float x285 = -x307;
            float x286 = -x309;
            float x287 = -x31d;
            float x24d = -0.707106781186547f*x287 + 0.707106781186547f*x2eb;
            float x252 = 0.707106781186547f * (x287 + x2eb);
            float x257 = 0.707106781186547f * (x30c + x2d9);
            float x258 = -0.707106781186547f*x30c + 0.707106781186547f*x2d9;
            float x259 = -0.707106781186547f*x30a + 0.707106781186547f*x299;
            float x25a = 0.707106781186547f * (x30a + x299);
            float x25b = 0.707106781186547f * (x33d + x2b2);
            float x25c = -0.707106781186547f*x33d + 0.707106781186547f*x2b2;
            float x25d = -0.707106781186547f*x286 + 0.707106781186547f*x29a;
            float x25e = 0.707106781186547f * (x286 + x29a);
            float x25f = 0.707106781186547f * (x33c + x2a8);
            float x260 = -0.707106781186547f*x33c + 0.707106781186547f*x2a8;
            float x261 = -0.707106781186547f*x308 + 0.707106781186547f*x29b;
            float x262 = 0.707106781186547f * (x308 + x29b);
            float x263 = 0.707106781186547f * (x34b + x2b0);
            float x23e = -0.707106781186547f*x34b + 0.707106781186547f*x2b0;
            float x23f = -0.707106781186547f*x285 + 0.707106781186547f*x29c;
            float x240 = 0.707106781186547f * (x285 + x29c);
            float x241 = 0.707106781186547f * (x30b + x2a9);
            float x242 = -0.707106781186547f*x30b + 0.707106781186547f*x2a9;
            float x243 = -0.707106781186547f*x306 + 0.707106781186547f*x29d;
            float x244 = 0.707106781186547f * (x306 + x29d);
            float x245 = 0.707106781186547f * (x349 + x2b3);
            float x246 = -0.707106781186547f*x349 + 0.707106781186547f*x2b3;
            float x247 = -0.707106781186547f*x284 + 0.707106781186547f*x29e;
            float x248 = 0.707106781186547f * (x284 + x29e);
            float x249 = 0.707106781186547f * (x342 + x2db);
            float x24a = -0.707106781186547f*x342 + 0.707106781186547f*x2db;
            float x24b = -0.707106781186547f*x31b + 0.707106781186547f*x2ed;
            float x24c = 0.707106781186547f * (x31b + x2ed);
            float x34c = 1.4142135623731f*x220;
            float x35c = x21f + x222;
            float x35d = x21e + x223;
            float x35e = x21d + x224;
            float x35f = x21c + x225;
            float x360 = x21b + x226;
            float x361 = x21a + x227;
            float x362 = x219 + x228;
            float x363 = x218 + x229;
            float x364 = x217 + x22a;
            float x365 = x216 + x22b;
            float x366 = x215 + x22c;
            float x367 = x214 + x22d;
            float x368 = x213 + x22e;
            float x369 = x212 + x22f;
            float x36a = x211 + x230;
            float x34d = x211 - x230;
            float x34e = x212 - x22f;
            float x34f = x213 - x22e;
            float x350 = x214 - x22d;
            float x351 = x215 - x22c;
            float x352 = x216 - x22b;
            float x353 = x217 - x22a;
            float x354 = x218 - x229;
            float x355 = x219 - x228;
            float x356 = x21a - x227;
            float x357 = x21b - x226;
            float x358 = x21c - x225;
            float x359 = x21d - x224;
            float x35a = x21e - x223;
            float x35b = x21f - x222;
            float x37d = 1.4142135623731f*x34c;
            float x37e = 1.40740373752638f*x35c + 0.138617169199091f*x36a;
            float x37f = 1.38703984532215f*x35d + 0.275899379282943f*x369;
            float x380 = 1.35331800117435f*x35e + 0.410524527522357f*x368;
            float x381 = 1.30656296487638f*x35f + 0.541196100146197f*x367;
            float x382 = 1.24722501298667f*x360 + 0.666655658477747f*x366;
            float x383 = 1.17587560241936f*x361 + 0.785694958387102f*x365;
            float x384 = 1.09320186700176f*x362 + 0.897167586342636f*x364;
            float x385 = 1.4142135623731f*x363;
            float x386 = -0.897167586342636f*x362 + 1.09320186700176f*x364;
            float x387 = 0.785694958387102f*x361 - 1.17587560241936f*x365;
            float x388 = -0.666655658477747f*x360 + 1.24722501298667f*x366;
            float x389 = 0.541196100146197f*x35f - 1.30656296487638f*x367;
            float x38a = -0.410524527522357f*x35e + 1.35331800117435f*x368;
            float x38b = 0.275899379282943f*x35d - 1.38703984532215f*x369;
            float x38c = -0.138617169199091f*x35c + 1.40740373752638f*x36a;
            float x38f = x37d + x385;
            float x390 = x37e + x384;
            float x391 = x37f + x383;
            float x392 = x380 + x382;
            float x393 = 1.4142135623731f*x381;
            float x394 = x37d - x385;
            float x395 = x37e - x384;
            float x396 = x37f - x383;
            float x397 = x380 - x382;
            float x39a = x38f + x393;
            float x39b = x390 + x392;
            float x39c = 1.4142135623731f*x391;
            float x39d = x38f - x393;
            float x39e = x390 - x392;
            float x39f = 0.0625f * (x39a + x39c) + 0.0883883476483184f*x39b;
            float x3a0 = 0.0883883476483184f * (x39a - x39c);
            float x3a1 = 0.0625f * (x39a + x39c) - 0.0883883476483184f*x39b;
            float x3a2 = 0.0883883476483184f * (x39d + x39e);
            float x3a3 = 0.0883883476483184f * (x39d - x39e);
            float x3a4 = 1.4142135623731f*x394;
            float x3a5 = 1.30656296487638f*x395 + 0.541196100146197f*x397;
            float x3a6 = 1.4142135623731f*x396;
            float x3a7 = -0.541196100146197f*x395 + 1.30656296487638f*x397;
            float x3a8 = 0.0625f * (x3a4 + x3a6) + 0.0883883476483184f*x3a5;
            float x3a9 = 0.0883883476483184f * (x3a4 - x3a6);
            float x3aa = 0.0625f * (x3a4 + x3a6) - 0.0883883476483184f*x3a5;
            float x3ab = 0.125f*x3a7;
            float x398 = 0.707106781186547f * (x3a9 - x3ab);
            float x399 = 0.707106781186547f * (x3a9 + x3ab);
            float x3bd = 1.4142135623731f*x389;
            float x3be = x388 + x38a;
            float x3bf = x387 + x38b;
            float x3c0 = x386 + x38c;
            float x3c1 = x386 - x38c;
            float x3c2 = x387 - x38b;
            float x3c3 = x388 - x38a;
            float x3c7 = 1.4142135623731f*x3bd;
            float x3c8 = 1.30656296487638f*x3be + 0.541196100146197f*x3c0;
            float x3c9 = 1.4142135623731f*x3bf;
            float x3ca = -0.541196100146197f*x3be + 1.30656296487638f*x3c0;
            float x3cb = 0.0625f * (x3c7 + x3c9) + 0.0883883476483184f*x3c8;
            float x3cc = 0.0883883476483184f * (x3c7 - x3c9);
            float x3cd = 0.0625f * (x3c7 + x3c9) - 0.0883883476483184f*x3c8;
            float x3ce = 0.125f*x3ca;
            float x3c4 = 0.707106781186547f * (x3cc - x3ce);
            float x3c5 = 0.707106781186547f * (x3cc + x3ce);
            float x3cf = 1.4142135623731f*x3c2;
            float x3d0 = x3c1 + x3c3;
            float x3d1 = x3c1 - x3c3;
            float x3d2 = 0.0883883476483184f * (x3cf + x3d0);
            float x3d3 = 0.0883883476483184f * (x3cf - x3d0);
            float x3d4 = 0.125f*x3d1;
            float x3c6 = -x3d3;
            float x38d = -x3c4;
            float x38e = -x3cd;
            float x36f = 0.707106781186547f * (x3a8 - x38e);
            float x370 = 0.707106781186547f * (x3a8 + x38e);
            float x371 = 0.707106781186547f * (x3a2 + x3c6);
            float x372 = 0.707106781186547f * (x3a2 - x3c6);
            float x373 = 0.707106781186547f * (x398 - x3c5);
            float x374 = 0.707106781186547f * (x398 + x3c5);
            float x375 = 0.707106781186547f * (x3a0 + x3d4);
            float x376 = 0.707106781186547f * (x3a0 - x3d4);
            float x377 = 0.707106781186547f * (x399 - x38d);
            float x378 = 0.707106781186547f * (x399 + x38d);
            float x379 = 0.707106781186547f * (x3a3 + x3d2);
            float x37a = 0.707106781186547f * (x3a3 - x3d2);
            float x37b = 0.707106781186547f * (x3aa - x3cb);
            float x37c = 0.707106781186547f * (x3aa + x3cb);
            float x3d5 = 1.4142135623731f*x354;
            float x3d6 = x353 + x355;
            float x3d7 = x352 + x356;
            float x3d8 = x351 + x357;
            float x3d9 = x350 + x358;
            float x3da = x34f + x359;
            float x3db = x34e + x35a;
            float x3dc = x34d + x35b;
            float x3dd = x34d - x35b;
            float x3de = x34e - x35a;
            float x3df = x34f - x359;
            float x3e0 = x350 - x358;
            float x3e1 = x351 - x357;
            float x3e2 = x352 - x356;
            float x3e3 = x353 - x355;
            float x3ec = 1.4142135623731f*x3d5;
            float x3ed = 1.38703984532215f*x3d6 + 0.275899379282943f*x3dc;
            float x3ee = 1.30656296487638f*x3d7 + 0.541196100146197f*x3db;
            float x3ef = 1.17587560241936f*x3d8 + 0.785694958387102f*x3da;
            float x3f0 = 1.4142135623731f*x3d9;
            float x3f1 = -0.785694958387102f*x3d8 + 1.17587560241936f*x3da;
            float x3f2 = 0.541196100146197f*x3d7 - 1.30656296487638f*x3db;
            float x3f3 = -0.275899379282943f*x3d6 + 1.38703984532215f*x3dc;
            float x3f5 = x3ec + x3f0;
            float x3f6 = x3ed + x3ef;
            float x3f7 = 1.4142135623731f*x3ee;
            float x3f8 = x3ec - x3f0;
            float x3f9 = x3ed - x3ef;
            float x3fa = 0.0625f * (x3f5 + x3f7) + 0.0883883476483184f*x3f6;
            float x3fb = 0.0883883476483184f * (x3f5 - x3f7);
            float x3fc = 0.0625f * (x3f5 + x3f7) - 0.0883883476483184f*x3f6;
            float x3fd = 0.0883883476483184f * (x3f8 + x3f9);
            float x3fe = 0.0883883476483184f * (x3f8 - x3f9);
            float x3ff = 1.4142135623731f*x3f2;
            float x400 = x3f1 + x3f3;
            float x401 = x3f1 - x3f3;
            float x402 = 0.0883883476483184f * (x3ff + x400);
            float x403 = 0.0883883476483184f * (x3ff - x400);
            float x404 = 0.125f*x401;
            float x3f4 = -x403;
            float x3e4 = 0.707106781186547f * (x3fd - x3f4);
            float x3e5 = 0.707106781186547f * (x3fd + x3f4);
            float x3e6 = 0.707106781186547f * (x3fb + x404);
            float x3e7 = 0.707106781186547f * (x3fb - x404);
            float x3e8 = 0.707106781186547f * (x3fe - x402);
            float x3e9 = 0.707106781186547f * (x3fe + x402);
            float x405 = 1.4142135623731f*x3e0;
            float x406 = x3df + x3e1;
            float x407 = x3de + x3e2;
            float x408 = x3dd + x3e3;
            float x409 = x3dd - x3e3;
            float x40a = x3de - x3e2;
            float x40b = x3df - x3e1;
            float x415 = 1.4142135623731f*x405;
            float x416 = 1.30656296487638f*x406 + 0.541196100146197f*x408;
            float x417 = 1.4142135623731f*x407;
            float x418 = -0.541196100146197f*x406 + 1.30656296487638f*x408;
            float x419 = 0.0625f * (x415 + x417) + 0.0883883476483184f*x416;
            float x41a = 0.0883883476483184f * (x415 - x417);
            float x41b = 0.0625f * (x415 + x417) - 0.0883883476483184f*x416;
            float x41c = 0.125f*x418;
            float x40c = 0.707106781186547f * (x41a - x41c);
            float x40d = 0.707106781186547f * (x41a + x41c);
            float x41d = 1.4142135623731f*x40a;
            float x41e = x409 + x40b;
            float x41f = x409 - x40b;
            float x420 = 0.0883883476483184f * (x41d + x41e);
            float x421 = 0.0883883476483184f * (x41d - x41e);
            float x422 = 0.125f*x41f;
            float x40e = -x421;
            float x3ea = -x40c;
            float x3eb = -x41b;
            float x36b = -x3e4;
            float x36c = -x3e6;
            float x36d = -x3e8;
            float x36e = -x3fc;
            float x24e = -x36f;
            float x24f = -x371;
            float x250 = -x373;
            float x251 = -x375;
            float x253 = -x377;
            float x254 = -x379;
            float x255 = -x37b;
            float x256 = -x3a1;
            float x0b7 = -x24d;
            float x0b8 = -x257;
            float x0b9 = -x259;
            float x0ba = -x25b;
            float x0bb = -x25d;
            float x0bc = -x25f;
            float x0bd = -x261;
            float x0be = -x263;
            float x0bf = -x23f;
            float x0c0 = -x241;
            float x0c1 = -x243;
            float x0c2 = -x245;
            float x0c3 = -x247;
            float x0c4 = -x249;
            float x0c5 = -x24b;
            float x0c6 = -x2b1;
            dst[  0 * dst_stridea] = 0.0625f * (x42e + x430) + 0.0883883476483184f*x42f;
            dst[  1 * dst_stridea] = 0.707106781186547f * (x132 - x0c6);
            dst[  2 * dst_stridea] = 0.707106781186547f * (x132 + x0c6);
            dst[  3 * dst_stridea] = 0.707106781186547f * (x0b2 + x256);
            dst[  4 * dst_stridea] = 0.707106781186547f * (x0b2 - x256);
            dst[  5 * dst_stridea] = 0.707106781186547f * (x1c9 - x24c);
            dst[  6 * dst_stridea] = 0.707106781186547f * (x1c9 + x24c);
            dst[  7 * dst_stridea] = 0.707106781186547f * (x085 + x36e);
            dst[  8 * dst_stridea] = 0.707106781186547f * (x085 - x36e);
            dst[  9 * dst_stridea] = 0.707106781186547f * (x1ca - x0c5);
            dst[ 10 * dst_stridea] = 0.707106781186547f * (x1ca + x0c5);
            dst[ 11 * dst_stridea] = 0.707106781186547f * (x326 + x37c);
            dst[ 12 * dst_stridea] = 0.707106781186547f * (x326 - x37c);
            dst[ 13 * dst_stridea] = -0.707106781186547f*x24a + 0.707106781186547f*x1cb;
            dst[ 14 * dst_stridea] = 0.707106781186547f * (x24a + x1cb);
            dst[ 15 * dst_stridea] = 0.707106781186547f * (x3eb + x43a);
            dst[ 16 * dst_stridea] = -0.707106781186547f*x3eb + 0.707106781186547f*x43a;
            dst[ 17 * dst_stridea] = -0.707106781186547f*x0c4 + 0.707106781186547f*x1cc;
            dst[ 18 * dst_stridea] = 0.707106781186547f * (x0c4 + x1cc);
            dst[ 19 * dst_stridea] = 0.707106781186547f * (x255 + x327);
            dst[ 20 * dst_stridea] = -0.707106781186547f*x255 + 0.707106781186547f*x327;
            dst[ 21 * dst_stridea] = -0.707106781186547f*x248 + 0.707106781186547f*x1cd;
            dst[ 22 * dst_stridea] = 0.707106781186547f * (x248 + x1cd);
            dst[ 23 * dst_stridea] = 0.707106781186547f * (x3e9 + x40f);
            dst[ 24 * dst_stridea] = -0.707106781186547f*x3e9 + 0.707106781186547f*x40f;
            dst[ 25 * dst_stridea] = -0.707106781186547f*x0c3 + 0.707106781186547f*x1ce;
            dst[ 26 * dst_stridea] = 0.707106781186547f * (x0c3 + x1ce);
            dst[ 27 * dst_stridea] = 0.707106781186547f * (x37a + x328);
            dst[ 28 * dst_stridea] = -0.707106781186547f*x37a + 0.707106781186547f*x328;
            dst[ 29 * dst_stridea] = -0.707106781186547f*x246 + 0.707106781186547f*x1cf;
            dst[ 30 * dst_stridea] = 0.707106781186547f * (x246 + x1cf);
            dst[ 31 * dst_stridea] = 0.707106781186547f * (x434 + x40e);
            dst[ 32 * dst_stridea] = 0.707106781186547f * (x434 - x40e);
            dst[ 33 * dst_stridea] = 0.707106781186547f * (x1d0 - x0c2);
            dst[ 34 * dst_stridea] = 0.707106781186547f * (x1d0 + x0c2);
            dst[ 35 * dst_stridea] = 0.707106781186547f * (x329 + x254);
            dst[ 36 * dst_stridea] = 0.707106781186547f * (x329 - x254);
            dst[ 37 * dst_stridea] = 0.707106781186547f * (x1d1 - x244);
            dst[ 38 * dst_stridea] = 0.707106781186547f * (x1d1 + x244);
            dst[ 39 * dst_stridea] = 0.707106781186547f * (x410 + x36d);
            dst[ 40 * dst_stridea] = 0.707106781186547f * (x410 - x36d);
            dst[ 41 * dst_stridea] = 0.707106781186547f * (x1d2 - x0c1);
            dst[ 42 * dst_stridea] = 0.707106781186547f * (x1d2 + x0c1);
            dst[ 43 * dst_stridea] = 0.707106781186547f * (x32a + x378);
            dst[ 44 * dst_stridea] = 0.707106781186547f * (x32a - x378);
            dst[ 45 * dst_stridea] = 0.707106781186547f * (x1d3 - x242);
            dst[ 46 * dst_stridea] = 0.707106781186547f * (x1d3 + x242);
            dst[ 47 * dst_stridea] = 0.707106781186547f * (x42c + x40d);
            dst[ 48 * dst_stridea] = 0.707106781186547f * (x42c - x40d);
            dst[ 49 * dst_stridea] = 0.707106781186547f * (x1d4 - x0c0);
            dst[ 50 * dst_stridea] = 0.707106781186547f * (x1d4 + x0c0);
            dst[ 51 * dst_stridea] = 0.707106781186547f * (x32b + x253);
            dst[ 52 * dst_stridea] = 0.707106781186547f * (x32b - x253);
            dst[ 53 * dst_stridea] = 0.707106781186547f * (x1d5 - x240);
            dst[ 54 * dst_stridea] = 0.707106781186547f * (x1d5 + x240);
            dst[ 55 * dst_stridea] = 0.707106781186547f * (x411 + x3e7);
            dst[ 56 * dst_stridea] = 0.707106781186547f * (x411 - x3e7);
            dst[ 57 * dst_stridea] = 0.707106781186547f * (x1d6 - x0bf);
            dst[ 58 * dst_stridea] = 0.707106781186547f * (x1d6 + x0bf);
            dst[ 59 * dst_stridea] = 0.707106781186547f * (x32c + x376);
            dst[ 60 * dst_stridea] = 0.707106781186547f * (x32c - x376);
            dst[ 61 * dst_stridea] = 0.707106781186547f * (x1d7 - x23e);
            dst[ 62 * dst_stridea] = 0.707106781186547f * (x1d7 + x23e);
            dst[ 63 * dst_stridea] = 0.707106781186547f * (x433 + x422);
            dst[ 64 * dst_stridea] = 0.707106781186547f * (x433 - x422);
            dst[ 65 * dst_stridea] = 0.707106781186547f * (x1d8 - x0be);
            dst[ 66 * dst_stridea] = 0.707106781186547f * (x1d8 + x0be);
            dst[ 67 * dst_stridea] = 0.707106781186547f * (x32d + x251);
            dst[ 68 * dst_stridea] = 0.707106781186547f * (x32d - x251);
            dst[ 69 * dst_stridea] = 0.707106781186547f * (x1d9 - x262);
            dst[ 70 * dst_stridea] = 0.707106781186547f * (x1d9 + x262);
            dst[ 71 * dst_stridea] = 0.707106781186547f * (x412 + x36c);
            dst[ 72 * dst_stridea] = 0.707106781186547f * (x412 - x36c);
            dst[ 73 * dst_stridea] = 0.707106781186547f * (x1da - x0bd);
            dst[ 74 * dst_stridea] = 0.707106781186547f * (x1da + x0bd);
            dst[ 75 * dst_stridea] = 0.707106781186547f * (x32e + x374);
            dst[ 76 * dst_stridea] = 0.707106781186547f * (x32e - x374);
            dst[ 77 * dst_stridea] = 0.707106781186547f * (x1db - x260);
            dst[ 78 * dst_stridea] = 0.707106781186547f * (x1db + x260);
            dst[ 79 * dst_stridea] = 0.707106781186547f * (x42d + x3ea);
            dst[ 80 * dst_stridea] = 0.707106781186547f * (x42d - x3ea);
            dst[ 81 * dst_stridea] = 0.707106781186547f * (x1dc - x0bc);
            dst[ 82 * dst_stridea] = 0.707106781186547f * (x1dc + x0bc);
            dst[ 83 * dst_stridea] = 0.707106781186547f * (x32f + x250);
            dst[ 84 * dst_stridea] = 0.707106781186547f * (x32f - x250);
            dst[ 85 * dst_stridea] = 0.707106781186547f * (x1dd - x25e);
            dst[ 86 * dst_stridea] = 0.707106781186547f * (x1dd + x25e);
            dst[ 87 * dst_stridea] = 0.707106781186547f * (x413 + x3e5);
            dst[ 88 * dst_stridea] = 0.707106781186547f * (x413 - x3e5);
            dst[ 89 * dst_stridea] = 0.707106781186547f * (x1de - x0bb);
            dst[ 90 * dst_stridea] = 0.707106781186547f * (x1de + x0bb);
            dst[ 91 * dst_stridea] = 0.707106781186547f * (x330 + x372);
            dst[ 92 * dst_stridea] = 0.707106781186547f * (x330 - x372);
            dst[ 93 * dst_stridea] = 0.707106781186547f * (x1df - x25c);
            dst[ 94 * dst_stridea] = 0.707106781186547f * (x1df + x25c);
            dst[ 95 * dst_stridea] = 0.707106781186547f * (x435 + x420);
            dst[ 96 * dst_stridea] = 0.707106781186547f * (x435 - x420);
            dst[ 97 * dst_stridea] = 0.707106781186547f * (x1e0 - x0ba);
            dst[ 98 * dst_stridea] = 0.707106781186547f * (x1e0 + x0ba);
            dst[ 99 * dst_stridea] = 0.707106781186547f * (x331 + x24f);
            dst[100 * dst_stridea] = 0.707106781186547f * (x331 - x24f);
            dst[101 * dst_stridea] = 0.707106781186547f * (x1e1 - x25a);
            dst[102 * dst_stridea] = 0.707106781186547f * (x1e1 + x25a);
            dst[103 * dst_stridea] = 0.707106781186547f * (x414 + x36b);
            dst[104 * dst_stridea] = 0.707106781186547f * (x414 - x36b);
            dst[105 * dst_stridea] = 0.707106781186547f * (x1e2 - x0b9);
            dst[106 * dst_stridea] = 0.707106781186547f * (x1e2 + x0b9);
            dst[107 * dst_stridea] = 0.707106781186547f * (x332 + x370);
            dst[108 * dst_stridea] = 0.707106781186547f * (x332 - x370);
            dst[109 * dst_stridea] = 0.707106781186547f * (x1e3 - x258);
            dst[110 * dst_stridea] = 0.707106781186547f * (x1e3 + x258);
            dst[111 * dst_stridea] = 0.707106781186547f * (x43c + x419);
            dst[112 * dst_stridea] = 0.707106781186547f * (x43c - x419);
            dst[113 * dst_stridea] = 0.707106781186547f * (x1e4 - x0b8);
            dst[114 * dst_stridea] = 0.707106781186547f * (x1e4 + x0b8);
            dst[115 * dst_stridea] = 0.707106781186547f * (x333 + x24e);
            dst[116 * dst_stridea] = 0.707106781186547f * (x333 - x24e);
            dst[117 * dst_stridea] = 0.707106781186547f * (x1e5 - x252);
            dst[118 * dst_stridea] = 0.707106781186547f * (x1e5 + x252);
            dst[119 * dst_stridea] = 0.707106781186547f * (x087 + x3fa);
            dst[120 * dst_stridea] = 0.707106781186547f * (x087 - x3fa);
            dst[121 * dst_stridea] = 0.707106781186547f * (x1e6 - x0b7);
            dst[122 * dst_stridea] = 0.707106781186547f * (x1e6 + x0b7);
            dst[123 * dst_stridea] = 0.707106781186547f * (x0b4 + x39f);
            dst[124 * dst_stridea] = 0.707106781186547f * (x0b4 - x39f);
            dst[125 * dst_stridea] = 0.707106781186547f * (x134 - x2af);
            dst[126 * dst_stridea] = 0.707106781186547f * (x134 + x2af);
            dst[127 * dst_stridea] = 0.0625f * (x42e + x430) - 0.0883883476483184f*x42f;
            dst += dst_strideb;
            src += src_strideb;
        }
    }
}