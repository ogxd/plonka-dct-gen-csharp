using System.Runtime.CompilerServices;

namespace PlonkaDct;

public static unsafe class Dct64 {

    private const int N = 64;

    public static void ForwardDct(ReadOnlySpan<float> source, Span<float> destination)
    {
        fixed (float* dst = destination)
        fixed (float* src = source)
        {
            float* tmp = stackalloc float[N*N];
            ForwardDct1d(tmp, src, 1, N, 1, N);
            ForwardDct1d(dst, tmp, N, 1, N, 1);
        }
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    private static void ForwardDct1d(
        float* dst, float* src,
        int dst_stridea, int dst_strideb,
        int src_stridea, int src_strideb)
    {
        int i;

        for (i = 0; i < N; i++) {
            float x000 = src[ 0 * src_stridea] + src[63 * src_stridea];
            float x011 = src[ 1 * src_stridea] + src[62 * src_stridea];
            float x022 = src[ 2 * src_stridea] + src[61 * src_stridea];
            float x033 = src[ 3 * src_stridea] + src[60 * src_stridea];
            float x034 = src[ 4 * src_stridea] + src[59 * src_stridea];
            float x035 = src[ 5 * src_stridea] + src[58 * src_stridea];
            float x036 = src[ 6 * src_stridea] + src[57 * src_stridea];
            float x037 = src[ 7 * src_stridea] + src[56 * src_stridea];
            float x038 = src[ 8 * src_stridea] + src[55 * src_stridea];
            float x039 = src[ 9 * src_stridea] + src[54 * src_stridea];
            float x03a = src[10 * src_stridea] + src[53 * src_stridea];
            float x03b = src[11 * src_stridea] + src[52 * src_stridea];
            float x03c = src[12 * src_stridea] + src[51 * src_stridea];
            float x03d = src[13 * src_stridea] + src[50 * src_stridea];
            float x03e = src[14 * src_stridea] + src[49 * src_stridea];
            float x03f = src[15 * src_stridea] + src[48 * src_stridea];
            float x001 = src[16 * src_stridea] + src[47 * src_stridea];
            float x002 = src[17 * src_stridea] + src[46 * src_stridea];
            float x003 = src[18 * src_stridea] + src[45 * src_stridea];
            float x004 = src[19 * src_stridea] + src[44 * src_stridea];
            float x005 = src[20 * src_stridea] + src[43 * src_stridea];
            float x006 = src[21 * src_stridea] + src[42 * src_stridea];
            float x007 = src[22 * src_stridea] + src[41 * src_stridea];
            float x008 = src[23 * src_stridea] + src[40 * src_stridea];
            float x009 = src[24 * src_stridea] + src[39 * src_stridea];
            float x00a = src[25 * src_stridea] + src[38 * src_stridea];
            float x00b = src[26 * src_stridea] + src[37 * src_stridea];
            float x00c = src[27 * src_stridea] + src[36 * src_stridea];
            float x00d = src[28 * src_stridea] + src[35 * src_stridea];
            float x00e = src[29 * src_stridea] + src[34 * src_stridea];
            float x00f = src[30 * src_stridea] + src[33 * src_stridea];
            float x010 = src[31 * src_stridea] + src[32 * src_stridea];
            float x012 = src[ 0 * src_stridea] - src[63 * src_stridea];
            float x013 = src[ 1 * src_stridea] - src[62 * src_stridea];
            float x014 = src[ 2 * src_stridea] - src[61 * src_stridea];
            float x015 = src[ 3 * src_stridea] - src[60 * src_stridea];
            float x016 = src[ 4 * src_stridea] - src[59 * src_stridea];
            float x017 = src[ 5 * src_stridea] - src[58 * src_stridea];
            float x018 = src[ 6 * src_stridea] - src[57 * src_stridea];
            float x019 = src[ 7 * src_stridea] - src[56 * src_stridea];
            float x01a = src[ 8 * src_stridea] - src[55 * src_stridea];
            float x01b = src[ 9 * src_stridea] - src[54 * src_stridea];
            float x01c = src[10 * src_stridea] - src[53 * src_stridea];
            float x01d = src[11 * src_stridea] - src[52 * src_stridea];
            float x01e = src[12 * src_stridea] - src[51 * src_stridea];
            float x01f = src[13 * src_stridea] - src[50 * src_stridea];
            float x020 = src[14 * src_stridea] - src[49 * src_stridea];
            float x021 = src[15 * src_stridea] - src[48 * src_stridea];
            float x023 = src[16 * src_stridea] - src[47 * src_stridea];
            float x024 = src[17 * src_stridea] - src[46 * src_stridea];
            float x025 = src[18 * src_stridea] - src[45 * src_stridea];
            float x026 = src[19 * src_stridea] - src[44 * src_stridea];
            float x027 = src[20 * src_stridea] - src[43 * src_stridea];
            float x028 = src[21 * src_stridea] - src[42 * src_stridea];
            float x029 = src[22 * src_stridea] - src[41 * src_stridea];
            float x02a = src[23 * src_stridea] - src[40 * src_stridea];
            float x02b = src[24 * src_stridea] - src[39 * src_stridea];
            float x02c = src[25 * src_stridea] - src[38 * src_stridea];
            float x02d = src[26 * src_stridea] - src[37 * src_stridea];
            float x02e = src[27 * src_stridea] - src[36 * src_stridea];
            float x02f = src[28 * src_stridea] - src[35 * src_stridea];
            float x030 = src[29 * src_stridea] - src[34 * src_stridea];
            float x031 = src[30 * src_stridea] - src[33 * src_stridea];
            float x032 = src[31 * src_stridea] - src[32 * src_stridea];
            float x0d8 = x000 + x010;
            float x0e9 = x00f + x011;
            float x0ea = x00e + x022;
            float x0eb = x00d + x033;
            float x0ec = x00c + x034;
            float x0ed = x00b + x035;
            float x0ee = x00a + x036;
            float x0ef = x009 + x037;
            float x0f0 = x008 + x038;
            float x0f1 = x007 + x039;
            float x0f2 = x006 + x03a;
            float x0f3 = x005 + x03b;
            float x0f4 = x004 + x03c;
            float x0f5 = x003 + x03d;
            float x0f6 = x002 + x03e;
            float x0f7 = x001 + x03f;
            float x0d9 = x000 - x010;
            float x0da = -x00f + x011;
            float x0db = -x00e + x022;
            float x0dc = -x00d + x033;
            float x0dd = -x00c + x034;
            float x0de = -x00b + x035;
            float x0df = -x00a + x036;
            float x0e0 = -x009 + x037;
            float x0e1 = -x008 + x038;
            float x0e2 = -x007 + x039;
            float x0e3 = -x006 + x03a;
            float x0e4 = -x005 + x03b;
            float x0e5 = -x004 + x03c;
            float x0e6 = -x003 + x03d;
            float x0e7 = -x002 + x03e;
            float x0e8 = -x001 + x03f;
            float x157 = x0d8 + x0f7;
            float x158 = x0e9 + x0f6;
            float x159 = x0ea + x0f5;
            float x15a = x0eb + x0f4;
            float x15b = x0ec + x0f3;
            float x15c = x0ed + x0f2;
            float x15d = x0ee + x0f1;
            float x15e = x0ef + x0f0;
            float x15f = x0d8 - x0f7;
            float x160 = x0e9 - x0f6;
            float x161 = x0ea - x0f5;
            float x162 = x0eb - x0f4;
            float x163 = x0ec - x0f3;
            float x164 = x0ed - x0f2;
            float x165 = x0ee - x0f1;
            float x166 = x0ef - x0f0;
            float x167 = x157 + x15e;
            float x168 = x158 + x15d;
            float x169 = x159 + x15c;
            float x16a = x15a + x15b;
            float x16b = x157 - x15e;
            float x16c = x158 - x15d;
            float x16d = x159 - x15c;
            float x16e = x15a - x15b;
            float x16f = x167 + x16a;
            float x170 = x168 + x169;
            float x171 = x167 - x16a;
            float x172 = x168 - x169;
            float x173 = 1.38703984532215f*x16b + 0.275899379282943f*x16e;
            float x174 = 1.17587560241936f*x16c + 0.785694958387102f*x16d;
            float x175 = -0.785694958387102f*x16c + 1.17587560241936f*x16d;
            float x176 = 0.275899379282943f*x16b - 1.38703984532215f*x16e;
            float x177 = 0.125f * (x173 - x174);
            float x178 = 0.125f * (x175 - x176);
            float x179 = 1.40740373752638f*x15f + 0.138617169199091f*x166;
            float x17a = 1.35331800117435f*x160 + 0.410524527522357f*x165;
            float x17b = 1.24722501298667f*x161 + 0.666655658477747f*x164;
            float x17c = 1.09320186700176f*x162 + 0.897167586342636f*x163;
            float x17d = -0.897167586342636f*x162 + 1.09320186700176f*x163;
            float x17e = 0.666655658477747f*x161 - 1.24722501298667f*x164;
            float x17f = -0.410524527522357f*x160 + 1.35331800117435f*x165;
            float x180 = 0.138617169199091f*x15f - 1.40740373752638f*x166;
            float x181 = x179 + x17c;
            float x182 = x17a + x17b;
            float x183 = x179 - x17c;
            float x184 = x17a - x17b;
            float x185 = 0.125f * (x181 - x182);
            float x186 = 0.163320370609547f*x183 + 0.0676495125182746f*x184;
            float x187 = 0.0676495125182746f*x183 - 0.163320370609547f*x184;
            float x040 = x17d + x180;
            float x041 = x17e + x17f;
            float x042 = x17d - x180;
            float x043 = x17e - x17f;
            float x044 = 0.125f * (x040 - x041);
            float x045 = 0.163320370609547f*x042 + 0.0676495125182746f*x043;
            float x046 = 0.0676495125182746f*x042 - 0.163320370609547f*x043;
            float x047 = 1.41251008020198f*x0d9 + 0.0693921705079407f*x0e8;
            float x048 = 1.39890683597308f*x0da + 0.207508226988212f*x0e7;
            float x049 = 1.37183135419349f*x0db + 0.34362586580705f*x0e6;
            float x04a = 1.33154438655373f*x0dc + 0.476434199693161f*x0e5;
            float x04b = 1.27843391857524f*x0dd + 0.604654211790801f*x0e4;
            float x04c = 1.21301143309781f*x0de + 0.72705107329128f*x0e3;
            float x04d = 1.13590698442014f*x0df + 0.842446035509419f*x0e2;
            float x04e = 1.04786313053259f*x0e0 + 0.949727781877754f*x0e1;
            float x04f = -0.949727781877754f*x0e0 + 1.04786313053259f*x0e1;
            float x050 = 0.842446035509419f*x0df - 1.13590698442014f*x0e2;
            float x051 = -0.72705107329128f*x0de + 1.21301143309781f*x0e3;
            float x052 = 0.604654211790801f*x0dd - 1.27843391857524f*x0e4;
            float x053 = -0.476434199693161f*x0dc + 1.33154438655373f*x0e5;
            float x054 = 0.34362586580705f*x0db - 1.37183135419349f*x0e6;
            float x055 = -0.207508226988212f*x0da + 1.39890683597308f*x0e7;
            float x056 = 0.0693921705079407f*x0d9 - 1.41251008020198f*x0e8;
            float x057 = x047 + x04e;
            float x058 = x048 + x04d;
            float x059 = x049 + x04c;
            float x05a = x04a + x04b;
            float x05b = x047 - x04e;
            float x05c = x048 - x04d;
            float x05d = x049 - x04c;
            float x05e = x04a - x04b;
            float x061 = x057 + x05a;
            float x062 = x058 + x059;
            float x063 = x057 - x05a;
            float x064 = x058 - x059;
            float x065 = 0.125f * (x061 - x062);
            float x066 = 0.163320370609547f*x063 + 0.0676495125182746f*x064;
            float x067 = 0.0676495125182746f*x063 - 0.163320370609547f*x064;
            float x068 = 1.38703984532215f*x05b + 0.275899379282943f*x05e;
            float x069 = 1.17587560241936f*x05c + 0.785694958387102f*x05d;
            float x06a = -0.785694958387102f*x05c + 1.17587560241936f*x05d;
            float x06b = 0.275899379282943f*x05b - 1.38703984532215f*x05e;
            float x06c = 0.125f * (x068 + x069);
            float x06d = 0.125f * (x068 - x069);
            float x06e = 0.125f * (x06a + x06b);
            float x06f = 0.125f * (x06a - x06b);
            float x05f = 0.707106781186547f * (x06d - x06f);
            float x060 = 0.707106781186547f * (x06d + x06f);
            float x070 = x04f + x056;
            float x071 = x050 + x055;
            float x072 = x051 + x054;
            float x073 = x052 + x053;
            float x074 = x04f - x056;
            float x075 = x050 - x055;
            float x076 = x051 - x054;
            float x077 = x052 - x053;
            float x07a = x070 + x073;
            float x07b = x071 + x072;
            float x07c = x070 - x073;
            float x07d = x071 - x072;
            float x07e = 0.125f * (x07a - x07b);
            float x07f = 0.163320370609547f*x07c + 0.0676495125182746f*x07d;
            float x080 = 0.0676495125182746f*x07c - 0.163320370609547f*x07d;
            float x081 = 1.38703984532215f*x074 + 0.275899379282943f*x077;
            float x082 = 1.17587560241936f*x075 + 0.785694958387102f*x076;
            float x083 = -0.785694958387102f*x075 + 1.17587560241936f*x076;
            float x084 = 0.275899379282943f*x074 - 1.38703984532215f*x077;
            float x085 = 0.125f * (x081 + x082);
            float x086 = 0.125f * (x081 - x082);
            float x087 = 0.125f * (x083 + x084);
            float x088 = 0.125f * (x083 - x084);
            float x078 = 0.707106781186547f * (x086 - x088);
            float x079 = 0.707106781186547f * (x086 + x088);
            float x089 = 1.41378762768853f*x012 + 0.0347065382144f*x032;
            float x09a = 1.41038168946026f*x013 + 0.104036003552708f*x031;
            float x09b = 1.40357801820723f*x014 + 0.173114837045979f*x030;
            float x09c = 1.39339300456943f*x015 + 0.241776621733738f*x02f;
            float x09d = 1.3798511851368f*x016 + 0.30985594536261f*x02e;
            float x09e = 1.3629851833385f*x017 + 0.377188798878927f*x02d;
            float x09f = 1.34283563085012f*x018 + 0.443612971540909f*x02c;
            float x0a0 = 1.31945106970852f*x019 + 0.508968441698541f*x02b;
            float x0a1 = 1.29288783536973f*x01a + 0.573097762299751f*x02a;
            float x0a2 = 1.26320992099193f*x01b + 0.635846440194145f*x029;
            float x0a3 = 1.23048882327034f*x01c + 0.697063308320542f*x028;
            float x0a4 = 1.1948033701954f*x01d + 0.756600889881659f*x027;
            float x0a5 = 1.15623953114924f*x01e + 0.81431575362864f*x026;
            float x0a6 = 1.11489020979793f*x01f + 0.870068859399494f*x025;
            float x0a7 = 1.07085502027836f*x020 + 0.923725893079023f*x024;
            float x0a8 = 1.02424004721912f*x021 + 0.975157590173292f*x023;
            float x08a = -0.975157590173292f*x021 + 1.02424004721912f*x023;
            float x08b = 0.923725893079023f*x020 - 1.07085502027836f*x024;
            float x08c = -0.870068859399494f*x01f + 1.11489020979793f*x025;
            float x08d = 0.81431575362864f*x01e - 1.15623953114924f*x026;
            float x08e = -0.756600889881659f*x01d + 1.1948033701954f*x027;
            float x08f = 0.697063308320542f*x01c - 1.23048882327034f*x028;
            float x090 = -0.635846440194145f*x01b + 1.26320992099193f*x029;
            float x091 = 0.573097762299751f*x01a - 1.29288783536973f*x02a;
            float x092 = -0.508968441698541f*x019 + 1.31945106970852f*x02b;
            float x093 = 0.443612971540909f*x018 - 1.34283563085012f*x02c;
            float x094 = -0.377188798878927f*x017 + 1.3629851833385f*x02d;
            float x095 = 0.30985594536261f*x016 - 1.3798511851368f*x02e;
            float x096 = -0.241776621733738f*x015 + 1.39339300456943f*x02f;
            float x097 = 0.173114837045979f*x014 - 1.40357801820723f*x030;
            float x098 = -0.104036003552708f*x013 + 1.41038168946026f*x031;
            float x099 = 0.0347065382144f*x012 - 1.41378762768853f*x032;
            float x0a9 = x089 + x0a8;
            float x0aa = x09a + x0a7;
            float x0ab = x09b + x0a6;
            float x0ac = x09c + x0a5;
            float x0ad = x09d + x0a4;
            float x0ae = x09e + x0a3;
            float x0af = x09f + x0a2;
            float x0b0 = x0a0 + x0a1;
            float x0b1 = x089 - x0a8;
            float x0b2 = x09a - x0a7;
            float x0b3 = x09b - x0a6;
            float x0b4 = x09c - x0a5;
            float x0b5 = x09d - x0a4;
            float x0b6 = x09e - x0a3;
            float x0b7 = x09f - x0a2;
            float x0b8 = x0a0 - x0a1;
            float x0bf = x0a9 + x0b0;
            float x0c0 = x0aa + x0af;
            float x0c1 = x0ab + x0ae;
            float x0c2 = x0ac + x0ad;
            float x0c3 = x0a9 - x0b0;
            float x0c4 = x0aa - x0af;
            float x0c5 = x0ab - x0ae;
            float x0c6 = x0ac - x0ad;
            float x0c9 = x0bf + x0c2;
            float x0ca = x0c0 + x0c1;
            float x0cb = x0bf - x0c2;
            float x0cc = x0c0 - x0c1;
            float x0cd = 0.125f * (x0c9 - x0ca);
            float x0ce = 0.163320370609547f*x0cb + 0.0676495125182746f*x0cc;
            float x0cf = 0.0676495125182746f*x0cb - 0.163320370609547f*x0cc;
            float x0d0 = 1.38703984532215f*x0c3 + 0.275899379282943f*x0c6;
            float x0d1 = 1.17587560241936f*x0c4 + 0.785694958387102f*x0c5;
            float x0d2 = -0.785694958387102f*x0c4 + 1.17587560241936f*x0c5;
            float x0d3 = 0.275899379282943f*x0c3 - 1.38703984532215f*x0c6;
            float x0d4 = 0.125f * (x0d0 + x0d1);
            float x0d5 = 0.125f * (x0d0 - x0d1);
            float x0d6 = 0.125f * (x0d2 + x0d3);
            float x0d7 = 0.125f * (x0d2 - x0d3);
            float x0c7 = 0.707106781186547f * (x0d5 - x0d7);
            float x0c8 = 0.707106781186547f * (x0d5 + x0d7);
            float x0f8 = 1.40740373752638f*x0b1 + 0.138617169199091f*x0b8;
            float x0f9 = 1.35331800117435f*x0b2 + 0.410524527522357f*x0b7;
            float x0fa = 1.24722501298667f*x0b3 + 0.666655658477747f*x0b6;
            float x0fb = 1.09320186700176f*x0b4 + 0.897167586342636f*x0b5;
            float x0fc = -0.897167586342636f*x0b4 + 1.09320186700176f*x0b5;
            float x0fd = 0.666655658477747f*x0b3 - 1.24722501298667f*x0b6;
            float x0fe = -0.410524527522357f*x0b2 + 1.35331800117435f*x0b7;
            float x0ff = 0.138617169199091f*x0b1 - 1.40740373752638f*x0b8;
            float x100 = x0f8 + x0fb;
            float x101 = x0f9 + x0fa;
            float x102 = x0f8 - x0fb;
            float x103 = x0f9 - x0fa;
            float x104 = 0.125f * (x100 + x101);
            float x105 = 0.125f * (x100 - x101);
            float x106 = 0.163320370609547f*x102 + 0.0676495125182746f*x103;
            float x107 = 0.0676495125182746f*x102 - 0.163320370609547f*x103;
            float x108 = x0fc + x0ff;
            float x109 = x0fd + x0fe;
            float x10a = x0fc - x0ff;
            float x10b = x0fd - x0fe;
            float x10c = 0.125f * (x108 + x109);
            float x10d = 0.125f * (x108 - x109);
            float x10e = 0.163320370609547f*x10a + 0.0676495125182746f*x10b;
            float x10f = 0.0676495125182746f*x10a - 0.163320370609547f*x10b;
            float x0b9 = 0.707106781186547f * (x106 - x10f);
            float x0ba = 0.707106781186547f * (x106 + x10f);
            float x0bb = 0.707106781186547f * (x105 + x10d);
            float x0bc = 0.707106781186547f * (x105 - x10d);
            float x0bd = 0.707106781186547f * (x107 - x10e);
            float x0be = 0.707106781186547f * (x107 + x10e);
            float x110 = x08a + x099;
            float x111 = x08b + x098;
            float x112 = x08c + x097;
            float x113 = x08d + x096;
            float x114 = x08e + x095;
            float x115 = x08f + x094;
            float x116 = x090 + x093;
            float x117 = x091 + x092;
            float x118 = x08a - x099;
            float x119 = x08b - x098;
            float x11a = x08c - x097;
            float x11b = x08d - x096;
            float x11c = x08e - x095;
            float x11d = x08f - x094;
            float x11e = x090 - x093;
            float x11f = x091 - x092;
            float x126 = x110 + x117;
            float x127 = x111 + x116;
            float x128 = x112 + x115;
            float x129 = x113 + x114;
            float x12a = x110 - x117;
            float x12b = x111 - x116;
            float x12c = x112 - x115;
            float x12d = x113 - x114;
            float x130 = x126 + x129;
            float x131 = x127 + x128;
            float x132 = x126 - x129;
            float x133 = x127 - x128;
            float x134 = 0.125f * (x130 - x131);
            float x135 = 0.163320370609547f*x132 + 0.0676495125182746f*x133;
            float x136 = 0.0676495125182746f*x132 - 0.163320370609547f*x133;
            float x137 = 1.38703984532215f*x12a + 0.275899379282943f*x12d;
            float x138 = 1.17587560241936f*x12b + 0.785694958387102f*x12c;
            float x139 = -0.785694958387102f*x12b + 1.17587560241936f*x12c;
            float x13a = 0.275899379282943f*x12a - 1.38703984532215f*x12d;
            float x13b = 0.125f * (x137 + x138);
            float x13c = 0.125f * (x137 - x138);
            float x13d = 0.125f * (x139 + x13a);
            float x13e = 0.125f * (x139 - x13a);
            float x12e = 0.707106781186547f * (x13c - x13e);
            float x12f = 0.707106781186547f * (x13c + x13e);
            float x13f = 1.40740373752638f*x118 + 0.138617169199091f*x11f;
            float x140 = 1.35331800117435f*x119 + 0.410524527522357f*x11e;
            float x141 = 1.24722501298667f*x11a + 0.666655658477747f*x11d;
            float x142 = 1.09320186700176f*x11b + 0.897167586342636f*x11c;
            float x143 = -0.897167586342636f*x11b + 1.09320186700176f*x11c;
            float x144 = 0.666655658477747f*x11a - 1.24722501298667f*x11d;
            float x145 = -0.410524527522357f*x119 + 1.35331800117435f*x11e;
            float x146 = 0.138617169199091f*x118 - 1.40740373752638f*x11f;
            float x147 = x13f + x142;
            float x148 = x140 + x141;
            float x149 = x13f - x142;
            float x14a = x140 - x141;
            float x14b = 0.125f * (x147 + x148);
            float x14c = 0.125f * (x147 - x148);
            float x14d = 0.163320370609547f*x149 + 0.0676495125182746f*x14a;
            float x14e = 0.0676495125182746f*x149 - 0.163320370609547f*x14a;
            float x14f = x143 + x146;
            float x150 = x144 + x145;
            float x151 = x143 - x146;
            float x152 = x144 - x145;
            float x153 = 0.125f * (x14f + x150);
            float x154 = 0.125f * (x14f - x150);
            float x155 = 0.163320370609547f*x151 + 0.0676495125182746f*x152;
            float x156 = 0.0676495125182746f*x151 - 0.163320370609547f*x152;
            float x120 = 0.707106781186547f * (x14d - x156);
            float x121 = 0.707106781186547f * (x14d + x156);
            float x122 = 0.707106781186547f * (x14c + x154);
            float x123 = 0.707106781186547f * (x14c - x154);
            float x124 = 0.707106781186547f * (x14e - x155);
            float x125 = 0.707106781186547f * (x14e + x155);
            dst[ 0 * dst_stridea] = 0.125f * (x16f + x170);
            dst[ 1 * dst_stridea] = 0.125f * (x0c9 + x0ca);
            dst[ 2 * dst_stridea] = 0.125f * (x061 + x062);
            dst[ 3 * dst_stridea] = -0.707106781186547f*x153 + 0.707106781186547f*x104;
            dst[ 4 * dst_stridea] = 0.125f * (x181 + x182);
            dst[ 5 * dst_stridea] = 0.707106781186547f * (x153 + x104);
            dst[ 6 * dst_stridea] = 0.707106781186547f * (x06c - x087);
            dst[ 7 * dst_stridea] = 0.707106781186547f * (x13d + x0d4);
            dst[ 8 * dst_stridea] = 0.125f * (x173 + x174);
            dst[ 9 * dst_stridea] = -0.707106781186547f*x13d + 0.707106781186547f*x0d4;
            dst[10 * dst_stridea] = 0.707106781186547f * (x06c + x087);
            dst[11 * dst_stridea] = -0.707106781186547f*x125 + 0.707106781186547f*x0b9;
            dst[12 * dst_stridea] = 0.707106781186547f * (x186 - x046);
            dst[13 * dst_stridea] = 0.707106781186547f * (x125 + x0b9);
            dst[14 * dst_stridea] = 0.707106781186547f * (x066 + x080);
            dst[15 * dst_stridea] = 0.707106781186547f * (x136 + x0ce);
            dst[16 * dst_stridea] = 0.163320370609547f*x171 + 0.0676495125182746f*x172;
            dst[17 * dst_stridea] = -0.707106781186547f*x136 + 0.707106781186547f*x0ce;
            dst[18 * dst_stridea] = 0.707106781186547f * (x066 - x080);
            dst[19 * dst_stridea] = -0.707106781186547f*x124 + 0.707106781186547f*x0ba;
            dst[20 * dst_stridea] = 0.707106781186547f * (x186 + x046);
            dst[21 * dst_stridea] = 0.707106781186547f * (x124 + x0ba);
            dst[22 * dst_stridea] = 0.707106781186547f * (x05f - x079);
            dst[23 * dst_stridea] = 0.707106781186547f * (x12f + x0c7);
            dst[24 * dst_stridea] = 0.707106781186547f * (x177 - x178);
            dst[25 * dst_stridea] = -0.707106781186547f*x12f + 0.707106781186547f*x0c7;
            dst[26 * dst_stridea] = 0.707106781186547f * (x05f + x079);
            dst[27 * dst_stridea] = -0.707106781186547f*x123 + 0.707106781186547f*x0bb;
            dst[28 * dst_stridea] = 0.707106781186547f * (x185 + x044);
            dst[29 * dst_stridea] = 0.707106781186547f * (x123 + x0bb);
            dst[30 * dst_stridea] = 0.707106781186547f * (x065 + x07e);
            dst[31 * dst_stridea] = 0.707106781186547f * (x134 + x0cd);
            dst[32 * dst_stridea] = 0.125f * (x16f - x170);
            dst[33 * dst_stridea] = -0.707106781186547f*x134 + 0.707106781186547f*x0cd;
            dst[34 * dst_stridea] = 0.707106781186547f * (x065 - x07e);
            dst[35 * dst_stridea] = -0.707106781186547f*x122 + 0.707106781186547f*x0bc;
            dst[36 * dst_stridea] = 0.707106781186547f * (x185 - x044);
            dst[37 * dst_stridea] = 0.707106781186547f * (x122 + x0bc);
            dst[38 * dst_stridea] = 0.707106781186547f * (x060 - x078);
            dst[39 * dst_stridea] = 0.707106781186547f * (x12e + x0c8);
            dst[40 * dst_stridea] = 0.707106781186547f * (x177 + x178);
            dst[41 * dst_stridea] = -0.707106781186547f*x12e + 0.707106781186547f*x0c8;
            dst[42 * dst_stridea] = 0.707106781186547f * (x060 + x078);
            dst[43 * dst_stridea] = -0.707106781186547f*x121 + 0.707106781186547f*x0bd;
            dst[44 * dst_stridea] = 0.707106781186547f * (x187 - x045);
            dst[45 * dst_stridea] = 0.707106781186547f * (x121 + x0bd);
            dst[46 * dst_stridea] = 0.707106781186547f * (x067 + x07f);
            dst[47 * dst_stridea] = 0.707106781186547f * (x135 + x0cf);
            dst[48 * dst_stridea] = 0.0676495125182746f*x171 - 0.163320370609547f*x172;
            dst[49 * dst_stridea] = -0.707106781186547f*x135 + 0.707106781186547f*x0cf;
            dst[50 * dst_stridea] = 0.707106781186547f * (x067 - x07f);
            dst[51 * dst_stridea] = -0.707106781186547f*x120 + 0.707106781186547f*x0be;
            dst[52 * dst_stridea] = 0.707106781186547f * (x187 + x045);
            dst[53 * dst_stridea] = 0.707106781186547f * (x120 + x0be);
            dst[54 * dst_stridea] = 0.707106781186547f * (x06e - x085);
            dst[55 * dst_stridea] = 0.707106781186547f * (x13b + x0d6);
            dst[56 * dst_stridea] = 0.125f * (x175 + x176);
            dst[57 * dst_stridea] = -0.707106781186547f*x13b + 0.707106781186547f*x0d6;
            dst[58 * dst_stridea] = 0.707106781186547f * (x06e + x085);
            dst[59 * dst_stridea] = -0.707106781186547f*x14b + 0.707106781186547f*x10c;
            dst[60 * dst_stridea] = 0.125f * (x040 + x041);
            dst[61 * dst_stridea] = 0.707106781186547f * (x14b + x10c);
            dst[62 * dst_stridea] = 0.125f * (x07a + x07b);
            dst[63 * dst_stridea] = 0.125f * (x130 + x131);
            dst += dst_strideb;
            src += src_strideb;
        }
    }

    public static void InverseDct(ReadOnlySpan<float> source, Span<float> destination)
    {
        fixed (float* dst = destination)
        fixed (float* src = source)
        {
            float* tmp = stackalloc float[N*N];
            InverseDct1d(tmp, src, 1, N, 1, N);
            InverseDct1d(dst, tmp, N, 1, N, 1);
        }
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    private static void InverseDct1d(
        float* dst, float* src,
        int dst_stridea, int dst_strideb,
        int src_stridea, int src_strideb)
    {
        int i;

        for (i = 0; i < N; i++) {
            float x000 = 1.4142135623731f*src[ 0 * src_stridea];
            float x011 = 1.41378762768853f*src[ 1 * src_stridea] + 0.0347065382144f*src[63 * src_stridea];
            float x022 = 1.41251008020198f*src[ 2 * src_stridea] + 0.0693921705079407f*src[62 * src_stridea];
            float x033 = 1.41038168946026f*src[ 3 * src_stridea] + 0.104036003552708f*src[61 * src_stridea];
            float x034 = 1.40740373752638f*src[ 4 * src_stridea] + 0.138617169199091f*src[60 * src_stridea];
            float x035 = 1.40357801820723f*src[ 5 * src_stridea] + 0.173114837045979f*src[59 * src_stridea];
            float x036 = 1.39890683597308f*src[ 6 * src_stridea] + 0.207508226988212f*src[58 * src_stridea];
            float x037 = 1.39339300456943f*src[ 7 * src_stridea] + 0.241776621733738f*src[57 * src_stridea];
            float x038 = 1.38703984532215f*src[ 8 * src_stridea] + 0.275899379282943f*src[56 * src_stridea];
            float x039 = 1.3798511851368f*src[ 9 * src_stridea] + 0.30985594536261f*src[55 * src_stridea];
            float x03a = 1.37183135419349f*src[10 * src_stridea] + 0.34362586580705f*src[54 * src_stridea];
            float x03b = 1.3629851833385f*src[11 * src_stridea] + 0.377188798878927f*src[53 * src_stridea];
            float x03c = 1.35331800117435f*src[12 * src_stridea] + 0.410524527522357f*src[52 * src_stridea];
            float x03d = 1.34283563085012f*src[13 * src_stridea] + 0.443612971540909f*src[51 * src_stridea];
            float x03e = 1.33154438655373f*src[14 * src_stridea] + 0.476434199693161f*src[50 * src_stridea];
            float x03f = 1.31945106970852f*src[15 * src_stridea] + 0.508968441698541f*src[49 * src_stridea];
            float x001 = 1.30656296487638f*src[16 * src_stridea] + 0.541196100146197f*src[48 * src_stridea];
            float x002 = 1.29288783536973f*src[17 * src_stridea] + 0.573097762299751f*src[47 * src_stridea];
            float x003 = 1.27843391857524f*src[18 * src_stridea] + 0.604654211790801f*src[46 * src_stridea];
            float x004 = 1.26320992099193f*src[19 * src_stridea] + 0.635846440194145f*src[45 * src_stridea];
            float x005 = 1.24722501298667f*src[20 * src_stridea] + 0.666655658477747f*src[44 * src_stridea];
            float x006 = 1.23048882327034f*src[21 * src_stridea] + 0.697063308320542f*src[43 * src_stridea];
            float x007 = 1.21301143309781f*src[22 * src_stridea] + 0.72705107329128f*src[42 * src_stridea];
            float x008 = 1.1948033701954f*src[23 * src_stridea] + 0.756600889881659f*src[41 * src_stridea];
            float x009 = 1.17587560241936f*src[24 * src_stridea] + 0.785694958387102f*src[40 * src_stridea];
            float x00a = 1.15623953114924f*src[25 * src_stridea] + 0.81431575362864f*src[39 * src_stridea];
            float x00b = 1.13590698442014f*src[26 * src_stridea] + 0.842446035509419f*src[38 * src_stridea];
            float x00c = 1.11489020979793f*src[27 * src_stridea] + 0.870068859399494f*src[37 * src_stridea];
            float x00d = 1.09320186700176f*src[28 * src_stridea] + 0.897167586342636f*src[36 * src_stridea];
            float x00e = 1.07085502027836f*src[29 * src_stridea] + 0.923725893079023f*src[35 * src_stridea];
            float x00f = 1.04786313053259f*src[30 * src_stridea] + 0.949727781877754f*src[34 * src_stridea];
            float x010 = 1.02424004721912f*src[31 * src_stridea] + 0.975157590173292f*src[33 * src_stridea];
            float x012 = 1.4142135623731f*src[32 * src_stridea];
            float x013 = -0.975157590173292f*src[31 * src_stridea] + 1.02424004721912f*src[33 * src_stridea];
            float x014 = 0.949727781877754f*src[30 * src_stridea] - 1.04786313053259f*src[34 * src_stridea];
            float x015 = -0.923725893079023f*src[29 * src_stridea] + 1.07085502027836f*src[35 * src_stridea];
            float x016 = 0.897167586342636f*src[28 * src_stridea] - 1.09320186700176f*src[36 * src_stridea];
            float x017 = -0.870068859399494f*src[27 * src_stridea] + 1.11489020979793f*src[37 * src_stridea];
            float x018 = 0.842446035509419f*src[26 * src_stridea] - 1.13590698442014f*src[38 * src_stridea];
            float x019 = -0.81431575362864f*src[25 * src_stridea] + 1.15623953114924f*src[39 * src_stridea];
            float x01a = 0.785694958387102f*src[24 * src_stridea] - 1.17587560241936f*src[40 * src_stridea];
            float x01b = -0.756600889881659f*src[23 * src_stridea] + 1.1948033701954f*src[41 * src_stridea];
            float x01c = 0.72705107329128f*src[22 * src_stridea] - 1.21301143309781f*src[42 * src_stridea];
            float x01d = -0.697063308320542f*src[21 * src_stridea] + 1.23048882327034f*src[43 * src_stridea];
            float x01e = 0.666655658477747f*src[20 * src_stridea] - 1.24722501298667f*src[44 * src_stridea];
            float x01f = -0.635846440194145f*src[19 * src_stridea] + 1.26320992099193f*src[45 * src_stridea];
            float x020 = 0.604654211790801f*src[18 * src_stridea] - 1.27843391857524f*src[46 * src_stridea];
            float x021 = -0.573097762299751f*src[17 * src_stridea] + 1.29288783536973f*src[47 * src_stridea];
            float x023 = 0.541196100146197f*src[16 * src_stridea] - 1.30656296487638f*src[48 * src_stridea];
            float x024 = -0.508968441698541f*src[15 * src_stridea] + 1.31945106970852f*src[49 * src_stridea];
            float x025 = 0.476434199693161f*src[14 * src_stridea] - 1.33154438655373f*src[50 * src_stridea];
            float x026 = -0.443612971540909f*src[13 * src_stridea] + 1.34283563085012f*src[51 * src_stridea];
            float x027 = 0.410524527522357f*src[12 * src_stridea] - 1.35331800117435f*src[52 * src_stridea];
            float x028 = -0.377188798878927f*src[11 * src_stridea] + 1.3629851833385f*src[53 * src_stridea];
            float x029 = 0.34362586580705f*src[10 * src_stridea] - 1.37183135419349f*src[54 * src_stridea];
            float x02a = -0.30985594536261f*src[ 9 * src_stridea] + 1.3798511851368f*src[55 * src_stridea];
            float x02b = 0.275899379282943f*src[ 8 * src_stridea] - 1.38703984532215f*src[56 * src_stridea];
            float x02c = -0.241776621733738f*src[ 7 * src_stridea] + 1.39339300456943f*src[57 * src_stridea];
            float x02d = 0.207508226988212f*src[ 6 * src_stridea] - 1.39890683597308f*src[58 * src_stridea];
            float x02e = -0.173114837045979f*src[ 5 * src_stridea] + 1.40357801820723f*src[59 * src_stridea];
            float x02f = 0.138617169199091f*src[ 4 * src_stridea] - 1.40740373752638f*src[60 * src_stridea];
            float x030 = -0.104036003552708f*src[ 3 * src_stridea] + 1.41038168946026f*src[61 * src_stridea];
            float x031 = 0.0693921705079407f*src[ 2 * src_stridea] - 1.41251008020198f*src[62 * src_stridea];
            float x032 = -0.0347065382144f*src[ 1 * src_stridea] + 1.41378762768853f*src[63 * src_stridea];
            float x0f5 = x000 + x012;
            float x106 = x010 + x011;
            float x108 = x00f + x022;
            float x109 = x00e + x033;
            float x10a = x00d + x034;
            float x10b = x00c + x035;
            float x10c = x00b + x036;
            float x10d = x00a + x037;
            float x10e = x009 + x038;
            float x10f = x008 + x039;
            float x110 = x007 + x03a;
            float x111 = x006 + x03b;
            float x112 = x005 + x03c;
            float x113 = x004 + x03d;
            float x114 = x003 + x03e;
            float x115 = x002 + x03f;
            float x0f6 = 1.4142135623731f*x001;
            float x0f7 = x000 - x012;
            float x0f8 = -x010 + x011;
            float x0f9 = -x00f + x022;
            float x0fa = -x00e + x033;
            float x0fb = -x00d + x034;
            float x0fc = -x00c + x035;
            float x0fd = -x00b + x036;
            float x0fe = -x00a + x037;
            float x0ff = -x009 + x038;
            float x100 = -x008 + x039;
            float x101 = -x007 + x03a;
            float x102 = -x006 + x03b;
            float x103 = -x005 + x03c;
            float x104 = -x004 + x03d;
            float x105 = -x003 + x03e;
            float x107 = -x002 + x03f;
            float x184 = x0f5 + x0f6;
            float x186 = x106 + x115;
            float x187 = x108 + x114;
            float x188 = x109 + x113;
            float x189 = x10a + x112;
            float x18a = x10b + x111;
            float x18b = x10c + x110;
            float x18c = x10d + x10f;
            float x18d = 1.4142135623731f*x10e;
            float x18e = x0f5 - x0f6;
            float x18f = x106 - x115;
            float x190 = x108 - x114;
            float x191 = x109 - x113;
            float x192 = x10a - x112;
            float x193 = x10b - x111;
            float x194 = x10c - x110;
            float x185 = x10d - x10f;
            float x19b = x184 + x18d;
            float x19c = x186 + x18c;
            float x19d = x187 + x18b;
            float x19e = x188 + x18a;
            float x19f = 1.4142135623731f*x189;
            float x1a0 = x184 - x18d;
            float x1a1 = x186 - x18c;
            float x1a2 = x187 - x18b;
            float x1a3 = x188 - x18a;
            float x1a6 = x19b + x19f;
            float x1a7 = x19c + x19e;
            float x1a8 = 1.4142135623731f*x19d;
            float x1a9 = x19b - x19f;
            float x1aa = x19c - x19e;
            float x1ab = 0.125f * (x1a6 - x1a8);
            float x1ac = 0.125f * (x1a9 + x1aa);
            float x1ad = 0.125f * (x1a9 - x1aa);
            float x1ae = 1.4142135623731f*x1a0;
            float x1af = 1.30656296487638f*x1a1 + 0.541196100146197f*x1a3;
            float x1b0 = 1.4142135623731f*x1a2;
            float x1b1 = -0.541196100146197f*x1a1 + 1.30656296487638f*x1a3;
            float x1b2 = 0.0883883476483184f * (x1ae + x1b0) + 0.125f*x1af;
            float x1b3 = 0.125f * (x1ae - x1b0);
            float x1b4 = 0.0883883476483184f * (x1ae + x1b0) - 0.125f*x1af;
            float x1b5 = 0.176776695296637f*x1b1;
            float x1a4 = 0.707106781186547f * (x1b3 - x1b5);
            float x1a5 = 0.707106781186547f * (x1b3 + x1b5);
            float x1b6 = 1.4142135623731f*x18e;
            float x1b7 = 0.275899379282943f*x185 + 1.38703984532215f*x18f;
            float x1b8 = 1.30656296487638f*x190 + 0.541196100146197f*x194;
            float x1b9 = 1.17587560241936f*x191 + 0.785694958387102f*x193;
            float x1ba = 1.4142135623731f*x192;
            float x1bb = -0.785694958387102f*x191 + 1.17587560241936f*x193;
            float x1bc = 0.541196100146197f*x190 - 1.30656296487638f*x194;
            float x1bd = 1.38703984532215f*x185 - 0.275899379282943f*x18f;
            float x1bf = x1b6 + x1ba;
            float x1c0 = x1b7 + x1b9;
            float x1c1 = 1.4142135623731f*x1b8;
            float x1c2 = x1b6 - x1ba;
            float x1c3 = x1b7 - x1b9;
            float x1c4 = 0.0883883476483184f * (x1bf + x1c1) + 0.125f*x1c0;
            float x1c5 = 0.125f * (x1bf - x1c1);
            float x1c6 = 0.0883883476483184f * (x1bf + x1c1) - 0.125f*x1c0;
            float x1c7 = 0.125f * (x1c2 + x1c3);
            float x1c8 = 0.125f * (x1c2 - x1c3);
            float x040 = 1.4142135623731f*x1bc;
            float x041 = x1bb + x1bd;
            float x042 = x1bb - x1bd;
            float x043 = 0.125f * (x040 + x041);
            float x044 = 0.125f * (x040 - x041);
            float x045 = 0.176776695296637f*x042;
            float x1be = -x044;
            float x195 = 0.707106781186547f * (x1c7 - x1be);
            float x196 = 0.707106781186547f * (x1c7 + x1be);
            float x197 = 0.707106781186547f * (x1c5 + x045);
            float x198 = 0.707106781186547f * (x1c5 - x045);
            float x199 = 0.707106781186547f * (x1c8 - x043);
            float x19a = 0.707106781186547f * (x1c8 + x043);
            float x046 = 1.4142135623731f*x0f7;
            float x047 = 1.40740373752638f*x0f8 + 0.138617169199091f*x107;
            float x048 = 1.38703984532215f*x0f9 + 0.275899379282943f*x105;
            float x049 = 1.35331800117435f*x0fa + 0.410524527522357f*x104;
            float x04a = 1.30656296487638f*x0fb + 0.541196100146197f*x103;
            float x04b = 1.24722501298667f*x0fc + 0.666655658477747f*x102;
            float x04c = 1.17587560241936f*x0fd + 0.785694958387102f*x101;
            float x04d = 1.09320186700176f*x0fe + 0.897167586342636f*x100;
            float x04e = 1.4142135623731f*x0ff;
            float x04f = -0.897167586342636f*x0fe + 1.09320186700176f*x100;
            float x050 = 0.785694958387102f*x0fd - 1.17587560241936f*x101;
            float x051 = -0.666655658477747f*x0fc + 1.24722501298667f*x102;
            float x052 = 0.541196100146197f*x0fb - 1.30656296487638f*x103;
            float x053 = -0.410524527522357f*x0fa + 1.35331800117435f*x104;
            float x054 = 0.275899379282943f*x0f9 - 1.38703984532215f*x105;
            float x055 = -0.138617169199091f*x0f8 + 1.40740373752638f*x107;
            float x058 = x046 + x04e;
            float x059 = x047 + x04d;
            float x05a = x048 + x04c;
            float x05b = x049 + x04b;
            float x05c = 1.4142135623731f*x04a;
            float x05d = x046 - x04e;
            float x05e = x047 - x04d;
            float x05f = x048 - x04c;
            float x060 = x049 - x04b;
            float x063 = x058 + x05c;
            float x064 = x059 + x05b;
            float x065 = 1.4142135623731f*x05a;
            float x066 = x058 - x05c;
            float x067 = x059 - x05b;
            float x068 = 0.0883883476483184f * (x063 + x065) + 0.125f*x064;
            float x069 = 0.125f * (x063 - x065);
            float x06a = 0.0883883476483184f * (x063 + x065) - 0.125f*x064;
            float x06b = 0.125f * (x066 + x067);
            float x06c = 0.125f * (x066 - x067);
            float x06d = 1.4142135623731f*x05d;
            float x06e = 1.30656296487638f*x05e + 0.541196100146197f*x060;
            float x06f = 1.4142135623731f*x05f;
            float x070 = -0.541196100146197f*x05e + 1.30656296487638f*x060;
            float x071 = 0.0883883476483184f * (x06d + x06f) + 0.125f*x06e;
            float x072 = 0.125f * (x06d - x06f);
            float x073 = 0.0883883476483184f * (x06d + x06f) - 0.125f*x06e;
            float x074 = 0.176776695296637f*x070;
            float x061 = 0.707106781186547f * (x072 - x074);
            float x062 = 0.707106781186547f * (x072 + x074);
            float x07d = 1.4142135623731f*x052;
            float x07e = x051 + x053;
            float x07f = x050 + x054;
            float x080 = x04f + x055;
            float x081 = x04f - x055;
            float x082 = x050 - x054;
            float x083 = x051 - x053;
            float x087 = 1.4142135623731f*x07d;
            float x088 = 1.30656296487638f*x07e + 0.541196100146197f*x080;
            float x089 = 1.4142135623731f*x07f;
            float x08a = -0.541196100146197f*x07e + 1.30656296487638f*x080;
            float x08b = 0.0883883476483184f * (x087 + x089) + 0.125f*x088;
            float x08c = 0.125f * (x087 - x089);
            float x08d = 0.0883883476483184f * (x087 + x089) - 0.125f*x088;
            float x08e = 0.176776695296637f*x08a;
            float x084 = 0.707106781186547f * (x08c - x08e);
            float x085 = 0.707106781186547f * (x08c + x08e);
            float x08f = 1.4142135623731f*x082;
            float x090 = x081 + x083;
            float x091 = x081 - x083;
            float x092 = 0.125f * (x08f + x090);
            float x093 = 0.125f * (x08f - x090);
            float x094 = 0.176776695296637f*x091;
            float x086 = -x093;
            float x056 = -x084;
            float x057 = -x08d;
            float x168 = 0.707106781186547f * (x071 - x057);
            float x169 = 0.707106781186547f * (x071 + x057);
            float x16a = 0.707106781186547f * (x06b + x086);
            float x16b = 0.707106781186547f * (x06b - x086);
            float x16c = 0.707106781186547f * (x061 - x085);
            float x16d = 0.707106781186547f * (x061 + x085);
            float x16e = 0.707106781186547f * (x069 + x094);
            float x16f = 0.707106781186547f * (x069 - x094);
            float x170 = 0.707106781186547f * (x062 - x056);
            float x171 = 0.707106781186547f * (x062 + x056);
            float x172 = 0.707106781186547f * (x06c + x092);
            float x173 = 0.707106781186547f * (x06c - x092);
            float x174 = 0.707106781186547f * (x073 - x08b);
            float x175 = 0.707106781186547f * (x073 + x08b);
            float x095 = 1.4142135623731f*x023;
            float x0a5 = x021 + x024;
            float x0a6 = x020 + x025;
            float x0a7 = x01f + x026;
            float x0a8 = x01e + x027;
            float x0a9 = x01d + x028;
            float x0aa = x01c + x029;
            float x0ab = x01b + x02a;
            float x0ac = x01a + x02b;
            float x0ad = x019 + x02c;
            float x0ae = x018 + x02d;
            float x0af = x017 + x02e;
            float x0b0 = x016 + x02f;
            float x0b1 = x015 + x030;
            float x0b2 = x014 + x031;
            float x0b3 = x013 + x032;
            float x096 = x013 - x032;
            float x097 = x014 - x031;
            float x098 = x015 - x030;
            float x099 = x016 - x02f;
            float x09a = x017 - x02e;
            float x09b = x018 - x02d;
            float x09c = x019 - x02c;
            float x09d = x01a - x02b;
            float x09e = x01b - x02a;
            float x09f = x01c - x029;
            float x0a0 = x01d - x028;
            float x0a1 = x01e - x027;
            float x0a2 = x01f - x026;
            float x0a3 = x020 - x025;
            float x0a4 = x021 - x024;
            float x0c6 = 1.4142135623731f*x095;
            float x0c7 = 1.40740373752638f*x0a5 + 0.138617169199091f*x0b3;
            float x0c8 = 1.38703984532215f*x0a6 + 0.275899379282943f*x0b2;
            float x0c9 = 1.35331800117435f*x0a7 + 0.410524527522357f*x0b1;
            float x0ca = 1.30656296487638f*x0a8 + 0.541196100146197f*x0b0;
            float x0cb = 1.24722501298667f*x0a9 + 0.666655658477747f*x0af;
            float x0cc = 1.17587560241936f*x0aa + 0.785694958387102f*x0ae;
            float x0cd = 1.09320186700176f*x0ab + 0.897167586342636f*x0ad;
            float x0ce = 1.4142135623731f*x0ac;
            float x0cf = -0.897167586342636f*x0ab + 1.09320186700176f*x0ad;
            float x0d0 = 0.785694958387102f*x0aa - 1.17587560241936f*x0ae;
            float x0d1 = -0.666655658477747f*x0a9 + 1.24722501298667f*x0af;
            float x0d2 = 0.541196100146197f*x0a8 - 1.30656296487638f*x0b0;
            float x0d3 = -0.410524527522357f*x0a7 + 1.35331800117435f*x0b1;
            float x0d4 = 0.275899379282943f*x0a6 - 1.38703984532215f*x0b2;
            float x0d5 = -0.138617169199091f*x0a5 + 1.40740373752638f*x0b3;
            float x0d8 = x0c6 + x0ce;
            float x0d9 = x0c7 + x0cd;
            float x0da = x0c8 + x0cc;
            float x0db = x0c9 + x0cb;
            float x0dc = 1.4142135623731f*x0ca;
            float x0dd = x0c6 - x0ce;
            float x0de = x0c7 - x0cd;
            float x0df = x0c8 - x0cc;
            float x0e0 = x0c9 - x0cb;
            float x0e3 = x0d8 + x0dc;
            float x0e4 = x0d9 + x0db;
            float x0e5 = 1.4142135623731f*x0da;
            float x0e6 = x0d8 - x0dc;
            float x0e7 = x0d9 - x0db;
            float x0e8 = 0.0883883476483184f * (x0e3 + x0e5) + 0.125f*x0e4;
            float x0e9 = 0.125f * (x0e3 - x0e5);
            float x0ea = 0.0883883476483184f * (x0e3 + x0e5) - 0.125f*x0e4;
            float x0eb = 0.125f * (x0e6 + x0e7);
            float x0ec = 0.125f * (x0e6 - x0e7);
            float x0ed = 1.4142135623731f*x0dd;
            float x0ee = 1.30656296487638f*x0de + 0.541196100146197f*x0e0;
            float x0ef = 1.4142135623731f*x0df;
            float x0f0 = -0.541196100146197f*x0de + 1.30656296487638f*x0e0;
            float x0f1 = 0.0883883476483184f * (x0ed + x0ef) + 0.125f*x0ee;
            float x0f2 = 0.125f * (x0ed - x0ef);
            float x0f3 = 0.0883883476483184f * (x0ed + x0ef) - 0.125f*x0ee;
            float x0f4 = 0.176776695296637f*x0f0;
            float x0e1 = 0.707106781186547f * (x0f2 - x0f4);
            float x0e2 = 0.707106781186547f * (x0f2 + x0f4);
            float x116 = 1.4142135623731f*x0d2;
            float x117 = x0d1 + x0d3;
            float x118 = x0d0 + x0d4;
            float x119 = x0cf + x0d5;
            float x11a = x0cf - x0d5;
            float x11b = x0d0 - x0d4;
            float x11c = x0d1 - x0d3;
            float x120 = 1.4142135623731f*x116;
            float x121 = 1.30656296487638f*x117 + 0.541196100146197f*x119;
            float x122 = 1.4142135623731f*x118;
            float x123 = -0.541196100146197f*x117 + 1.30656296487638f*x119;
            float x124 = 0.0883883476483184f * (x120 + x122) + 0.125f*x121;
            float x125 = 0.125f * (x120 - x122);
            float x126 = 0.0883883476483184f * (x120 + x122) - 0.125f*x121;
            float x127 = 0.176776695296637f*x123;
            float x11d = 0.707106781186547f * (x125 - x127);
            float x11e = 0.707106781186547f * (x125 + x127);
            float x128 = 1.4142135623731f*x11b;
            float x129 = x11a + x11c;
            float x12a = x11a - x11c;
            float x12b = 0.125f * (x128 + x129);
            float x12c = 0.125f * (x128 - x129);
            float x12d = 0.176776695296637f*x12a;
            float x11f = -x12c;
            float x0d6 = -x11d;
            float x0d7 = -x126;
            float x0b8 = 0.707106781186547f * (x0f1 - x0d7);
            float x0b9 = 0.707106781186547f * (x0f1 + x0d7);
            float x0ba = 0.707106781186547f * (x0eb + x11f);
            float x0bb = 0.707106781186547f * (x0eb - x11f);
            float x0bc = 0.707106781186547f * (x0e1 - x11e);
            float x0bd = 0.707106781186547f * (x0e1 + x11e);
            float x0be = 0.707106781186547f * (x0e9 + x12d);
            float x0bf = 0.707106781186547f * (x0e9 - x12d);
            float x0c0 = 0.707106781186547f * (x0e2 - x0d6);
            float x0c1 = 0.707106781186547f * (x0e2 + x0d6);
            float x0c2 = 0.707106781186547f * (x0ec + x12b);
            float x0c3 = 0.707106781186547f * (x0ec - x12b);
            float x0c4 = 0.707106781186547f * (x0f3 - x124);
            float x0c5 = 0.707106781186547f * (x0f3 + x124);
            float x12e = 1.4142135623731f*x09d;
            float x12f = x09c + x09e;
            float x130 = x09b + x09f;
            float x131 = x09a + x0a0;
            float x132 = x099 + x0a1;
            float x133 = x098 + x0a2;
            float x134 = x097 + x0a3;
            float x135 = x096 + x0a4;
            float x136 = x096 - x0a4;
            float x137 = x097 - x0a3;
            float x138 = x098 - x0a2;
            float x139 = x099 - x0a1;
            float x13a = x09a - x0a0;
            float x13b = x09b - x09f;
            float x13c = x09c - x09e;
            float x145 = 1.4142135623731f*x12e;
            float x146 = 1.38703984532215f*x12f + 0.275899379282943f*x135;
            float x147 = 1.30656296487638f*x130 + 0.541196100146197f*x134;
            float x148 = 1.17587560241936f*x131 + 0.785694958387102f*x133;
            float x149 = 1.4142135623731f*x132;
            float x14a = -0.785694958387102f*x131 + 1.17587560241936f*x133;
            float x14b = 0.541196100146197f*x130 - 1.30656296487638f*x134;
            float x14c = -0.275899379282943f*x12f + 1.38703984532215f*x135;
            float x14e = x145 + x149;
            float x14f = x146 + x148;
            float x150 = 1.4142135623731f*x147;
            float x151 = x145 - x149;
            float x152 = x146 - x148;
            float x153 = 0.0883883476483184f * (x14e + x150) + 0.125f*x14f;
            float x154 = 0.125f * (x14e - x150);
            float x155 = 0.0883883476483184f * (x14e + x150) - 0.125f*x14f;
            float x156 = 0.125f * (x151 + x152);
            float x157 = 0.125f * (x151 - x152);
            float x158 = 1.4142135623731f*x14b;
            float x159 = x14a + x14c;
            float x15a = x14a - x14c;
            float x15b = 0.125f * (x158 + x159);
            float x15c = 0.125f * (x158 - x159);
            float x15d = 0.176776695296637f*x15a;
            float x14d = -x15c;
            float x13d = 0.707106781186547f * (x156 - x14d);
            float x13e = 0.707106781186547f * (x156 + x14d);
            float x13f = 0.707106781186547f * (x154 + x15d);
            float x140 = 0.707106781186547f * (x154 - x15d);
            float x141 = 0.707106781186547f * (x157 - x15b);
            float x142 = 0.707106781186547f * (x157 + x15b);
            float x15e = 1.4142135623731f*x139;
            float x15f = x138 + x13a;
            float x160 = x137 + x13b;
            float x161 = x136 + x13c;
            float x162 = x136 - x13c;
            float x163 = x137 - x13b;
            float x164 = x138 - x13a;
            float x176 = 1.4142135623731f*x15e;
            float x177 = 1.30656296487638f*x15f + 0.541196100146197f*x161;
            float x178 = 1.4142135623731f*x160;
            float x179 = -0.541196100146197f*x15f + 1.30656296487638f*x161;
            float x17a = 0.0883883476483184f * (x176 + x178) + 0.125f*x177;
            float x17b = 0.125f * (x176 - x178);
            float x17c = 0.0883883476483184f * (x176 + x178) - 0.125f*x177;
            float x17d = 0.176776695296637f*x179;
            float x165 = 0.707106781186547f * (x17b - x17d);
            float x166 = 0.707106781186547f * (x17b + x17d);
            float x17e = 1.4142135623731f*x163;
            float x17f = x162 + x164;
            float x180 = x162 - x164;
            float x181 = 0.125f * (x17e + x17f);
            float x182 = 0.125f * (x17e - x17f);
            float x183 = 0.176776695296637f*x180;
            float x167 = -x182;
            float x143 = -x165;
            float x144 = -x17c;
            float x0b4 = -x13d;
            float x0b5 = -x13f;
            float x0b6 = -x141;
            float x0b7 = -x155;
            float x075 = -x0b8;
            float x076 = -x0ba;
            float x077 = -x0bc;
            float x078 = -x0be;
            float x079 = -x0c0;
            float x07a = -x0c2;
            float x07b = -x0c4;
            float x07c = -x0ea;
            dst[ 0 * dst_stridea] = 0.0883883476483184f * (x1a6 + x1a8) + 0.125f*x1a7;
            dst[ 1 * dst_stridea] = 0.707106781186547f * (x068 - x07c);
            dst[ 2 * dst_stridea] = 0.707106781186547f * (x068 + x07c);
            dst[ 3 * dst_stridea] = 0.707106781186547f * (x1c4 + x0b7);
            dst[ 4 * dst_stridea] = 0.707106781186547f * (x1c4 - x0b7);
            dst[ 5 * dst_stridea] = -0.707106781186547f*x0c5 + 0.707106781186547f*x168;
            dst[ 6 * dst_stridea] = 0.707106781186547f * (x0c5 + x168);
            dst[ 7 * dst_stridea] = 0.707106781186547f * (x144 + x1b2);
            dst[ 8 * dst_stridea] = -0.707106781186547f*x144 + 0.707106781186547f*x1b2;
            dst[ 9 * dst_stridea] = -0.707106781186547f*x07b + 0.707106781186547f*x169;
            dst[10 * dst_stridea] = 0.707106781186547f * (x07b + x169);
            dst[11 * dst_stridea] = 0.707106781186547f * (x142 + x195);
            dst[12 * dst_stridea] = -0.707106781186547f*x142 + 0.707106781186547f*x195;
            dst[13 * dst_stridea] = -0.707106781186547f*x0c3 + 0.707106781186547f*x16a;
            dst[14 * dst_stridea] = 0.707106781186547f * (x0c3 + x16a);
            dst[15 * dst_stridea] = 0.707106781186547f * (x167 + x1ac);
            dst[16 * dst_stridea] = -0.707106781186547f*x167 + 0.707106781186547f*x1ac;
            dst[17 * dst_stridea] = -0.707106781186547f*x07a + 0.707106781186547f*x16b;
            dst[18 * dst_stridea] = 0.707106781186547f * (x07a + x16b);
            dst[19 * dst_stridea] = 0.707106781186547f * (x0b6 + x196);
            dst[20 * dst_stridea] = -0.707106781186547f*x0b6 + 0.707106781186547f*x196;
            dst[21 * dst_stridea] = -0.707106781186547f*x0c1 + 0.707106781186547f*x16c;
            dst[22 * dst_stridea] = 0.707106781186547f * (x0c1 + x16c);
            dst[23 * dst_stridea] = 0.707106781186547f * (x166 + x1a4);
            dst[24 * dst_stridea] = -0.707106781186547f*x166 + 0.707106781186547f*x1a4;
            dst[25 * dst_stridea] = -0.707106781186547f*x079 + 0.707106781186547f*x16d;
            dst[26 * dst_stridea] = 0.707106781186547f * (x079 + x16d);
            dst[27 * dst_stridea] = 0.707106781186547f * (x140 + x197);
            dst[28 * dst_stridea] = -0.707106781186547f*x140 + 0.707106781186547f*x197;
            dst[29 * dst_stridea] = -0.707106781186547f*x0bf + 0.707106781186547f*x16e;
            dst[30 * dst_stridea] = 0.707106781186547f * (x0bf + x16e);
            dst[31 * dst_stridea] = 0.707106781186547f * (x1ab + x183);
            dst[32 * dst_stridea] = 0.707106781186547f * (x1ab - x183);
            dst[33 * dst_stridea] = 0.707106781186547f * (x16f - x078);
            dst[34 * dst_stridea] = 0.707106781186547f * (x16f + x078);
            dst[35 * dst_stridea] = 0.707106781186547f * (x198 + x0b5);
            dst[36 * dst_stridea] = 0.707106781186547f * (x198 - x0b5);
            dst[37 * dst_stridea] = 0.707106781186547f * (x170 - x0bd);
            dst[38 * dst_stridea] = 0.707106781186547f * (x170 + x0bd);
            dst[39 * dst_stridea] = 0.707106781186547f * (x1a5 + x143);
            dst[40 * dst_stridea] = 0.707106781186547f * (x1a5 - x143);
            dst[41 * dst_stridea] = 0.707106781186547f * (x171 - x077);
            dst[42 * dst_stridea] = 0.707106781186547f * (x171 + x077);
            dst[43 * dst_stridea] = 0.707106781186547f * (x199 + x13e);
            dst[44 * dst_stridea] = 0.707106781186547f * (x199 - x13e);
            dst[45 * dst_stridea] = 0.707106781186547f * (x172 - x0bb);
            dst[46 * dst_stridea] = 0.707106781186547f * (x172 + x0bb);
            dst[47 * dst_stridea] = 0.707106781186547f * (x1ad + x181);
            dst[48 * dst_stridea] = 0.707106781186547f * (x1ad - x181);
            dst[49 * dst_stridea] = 0.707106781186547f * (x173 - x076);
            dst[50 * dst_stridea] = 0.707106781186547f * (x173 + x076);
            dst[51 * dst_stridea] = 0.707106781186547f * (x19a + x0b4);
            dst[52 * dst_stridea] = 0.707106781186547f * (x19a - x0b4);
            dst[53 * dst_stridea] = 0.707106781186547f * (x174 - x0b9);
            dst[54 * dst_stridea] = 0.707106781186547f * (x174 + x0b9);
            dst[55 * dst_stridea] = 0.707106781186547f * (x1b4 + x17a);
            dst[56 * dst_stridea] = 0.707106781186547f * (x1b4 - x17a);
            dst[57 * dst_stridea] = 0.707106781186547f * (x175 - x075);
            dst[58 * dst_stridea] = 0.707106781186547f * (x175 + x075);
            dst[59 * dst_stridea] = 0.707106781186547f * (x1c6 + x153);
            dst[60 * dst_stridea] = 0.707106781186547f * (x1c6 - x153);
            dst[61 * dst_stridea] = 0.707106781186547f * (x06a - x0e8);
            dst[62 * dst_stridea] = 0.707106781186547f * (x06a + x0e8);
            dst[63 * dst_stridea] = 0.0883883476483184f * (x1a6 + x1a8) - 0.125f*x1a7;
            dst += dst_strideb;
            src += src_strideb;
        }
    }
}