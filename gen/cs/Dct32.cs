using System.Runtime.CompilerServices;

namespace PlonkaDct;

public static unsafe class Dct32 {

    private const int N = 32;

    public static void ForwardDct(ReadOnlySpan<float> source, Span<float> destination)
    {
        fixed (float* dst = destination)
        fixed (float* src = source)
        {
            float* tmp = stackalloc float[N*N];
            ForwardDct1d(tmp, src, 1, N, 1, N);
            ForwardDct1d(dst, tmp, N, 1, N, 1);
        }
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    private static void ForwardDct1d(
        float* dst, float* src,
        int dst_stridea, int dst_strideb,
        int src_stridea, int src_strideb)
    {
        int i;

        for (i = 0; i < N; i++) {
            float x00 = src[ 0 * src_stridea] + src[31 * src_stridea];
            float x11 = src[ 1 * src_stridea] + src[30 * src_stridea];
            float x12 = src[ 2 * src_stridea] + src[29 * src_stridea];
            float x13 = src[ 3 * src_stridea] + src[28 * src_stridea];
            float x14 = src[ 4 * src_stridea] + src[27 * src_stridea];
            float x15 = src[ 5 * src_stridea] + src[26 * src_stridea];
            float x16 = src[ 6 * src_stridea] + src[25 * src_stridea];
            float x17 = src[ 7 * src_stridea] + src[24 * src_stridea];
            float x18 = src[ 8 * src_stridea] + src[23 * src_stridea];
            float x19 = src[ 9 * src_stridea] + src[22 * src_stridea];
            float x1a = src[10 * src_stridea] + src[21 * src_stridea];
            float x1b = src[11 * src_stridea] + src[20 * src_stridea];
            float x1c = src[12 * src_stridea] + src[19 * src_stridea];
            float x1d = src[13 * src_stridea] + src[18 * src_stridea];
            float x1e = src[14 * src_stridea] + src[17 * src_stridea];
            float x1f = src[15 * src_stridea] + src[16 * src_stridea];
            float x01 = src[ 0 * src_stridea] - src[31 * src_stridea];
            float x02 = src[ 1 * src_stridea] - src[30 * src_stridea];
            float x03 = src[ 2 * src_stridea] - src[29 * src_stridea];
            float x04 = src[ 3 * src_stridea] - src[28 * src_stridea];
            float x05 = src[ 4 * src_stridea] - src[27 * src_stridea];
            float x06 = src[ 5 * src_stridea] - src[26 * src_stridea];
            float x07 = src[ 6 * src_stridea] - src[25 * src_stridea];
            float x08 = src[ 7 * src_stridea] - src[24 * src_stridea];
            float x09 = src[ 8 * src_stridea] - src[23 * src_stridea];
            float x0a = src[ 9 * src_stridea] - src[22 * src_stridea];
            float x0b = src[10 * src_stridea] - src[21 * src_stridea];
            float x0c = src[11 * src_stridea] - src[20 * src_stridea];
            float x0d = src[12 * src_stridea] - src[19 * src_stridea];
            float x0e = src[13 * src_stridea] - src[18 * src_stridea];
            float x0f = src[14 * src_stridea] - src[17 * src_stridea];
            float x10 = src[15 * src_stridea] - src[16 * src_stridea];
            float x62 = x00 + x1f;
            float x63 = x11 + x1e;
            float x64 = x12 + x1d;
            float x65 = x13 + x1c;
            float x66 = x14 + x1b;
            float x67 = x15 + x1a;
            float x68 = x16 + x19;
            float x69 = x17 + x18;
            float x6a = x00 - x1f;
            float x6b = x11 - x1e;
            float x6c = x12 - x1d;
            float x6d = x13 - x1c;
            float x6e = x14 - x1b;
            float x6f = x15 - x1a;
            float x70 = x16 - x19;
            float x71 = x17 - x18;
            float x72 = x62 + x69;
            float x73 = x63 + x68;
            float x74 = x64 + x67;
            float x75 = x65 + x66;
            float x76 = x62 - x69;
            float x77 = x63 - x68;
            float x78 = x64 - x67;
            float x79 = x65 - x66;
            float x7a = x72 + x75;
            float x7b = x73 + x74;
            float x7c = x72 - x75;
            float x7d = x73 - x74;
            float x7e = 1.38703984532215f*x76 + 0.275899379282943f*x79;
            float x7f = 1.17587560241936f*x77 + 0.785694958387102f*x78;
            float x80 = -0.785694958387102f*x77 + 1.17587560241936f*x78;
            float x81 = 0.275899379282943f*x76 - 1.38703984532215f*x79;
            float x82 = 0.176776695296637f * (x7e - x7f);
            float x83 = 0.176776695296637f * (x80 - x81);
            float x84 = 1.40740373752638f*x6a + 0.138617169199091f*x71;
            float x85 = 1.35331800117435f*x6b + 0.410524527522357f*x70;
            float x86 = 1.24722501298667f*x6c + 0.666655658477747f*x6f;
            float x87 = 1.09320186700176f*x6d + 0.897167586342636f*x6e;
            float x88 = -0.897167586342636f*x6d + 1.09320186700176f*x6e;
            float x89 = 0.666655658477747f*x6c - 1.24722501298667f*x6f;
            float x8a = -0.410524527522357f*x6b + 1.35331800117435f*x70;
            float x8b = 0.138617169199091f*x6a - 1.40740373752638f*x71;
            float x8c = x84 + x87;
            float x8d = x85 + x86;
            float x8e = x84 - x87;
            float x8f = x85 - x86;
            float x90 = 0.176776695296637f * (x8c - x8d);
            float x91 = 0.230969883127822f*x8e + 0.0956708580912725f*x8f;
            float x92 = 0.0956708580912725f*x8e - 0.230969883127822f*x8f;
            float x93 = x88 + x8b;
            float x94 = x89 + x8a;
            float x95 = x88 - x8b;
            float x96 = x89 - x8a;
            float x97 = 0.176776695296637f * (x93 - x94);
            float x98 = 0.230969883127822f*x95 + 0.0956708580912725f*x96;
            float x99 = 0.0956708580912725f*x95 - 0.230969883127822f*x96;
            float x20 = 1.41251008020198f*x01 + 0.0693921705079407f*x10;
            float x21 = 1.39890683597308f*x02 + 0.207508226988212f*x0f;
            float x22 = 1.37183135419349f*x03 + 0.34362586580705f*x0e;
            float x23 = 1.33154438655373f*x04 + 0.476434199693161f*x0d;
            float x24 = 1.27843391857524f*x05 + 0.604654211790801f*x0c;
            float x25 = 1.21301143309781f*x06 + 0.72705107329128f*x0b;
            float x26 = 1.13590698442014f*x07 + 0.842446035509419f*x0a;
            float x27 = 1.04786313053259f*x08 + 0.949727781877754f*x09;
            float x28 = -0.949727781877754f*x08 + 1.04786313053259f*x09;
            float x29 = 0.842446035509419f*x07 - 1.13590698442014f*x0a;
            float x2a = -0.72705107329128f*x06 + 1.21301143309781f*x0b;
            float x2b = 0.604654211790801f*x05 - 1.27843391857524f*x0c;
            float x2c = -0.476434199693161f*x04 + 1.33154438655373f*x0d;
            float x2d = 0.34362586580705f*x03 - 1.37183135419349f*x0e;
            float x2e = -0.207508226988212f*x02 + 1.39890683597308f*x0f;
            float x2f = 0.0693921705079407f*x01 - 1.41251008020198f*x10;
            float x30 = x20 + x27;
            float x31 = x21 + x26;
            float x32 = x22 + x25;
            float x33 = x23 + x24;
            float x34 = x20 - x27;
            float x35 = x21 - x26;
            float x36 = x22 - x25;
            float x37 = x23 - x24;
            float x3a = x30 + x33;
            float x3b = x31 + x32;
            float x3c = x30 - x33;
            float x3d = x31 - x32;
            float x3e = 0.176776695296637f * (x3a - x3b);
            float x3f = 0.230969883127822f*x3c + 0.0956708580912725f*x3d;
            float x40 = 0.0956708580912725f*x3c - 0.230969883127822f*x3d;
            float x41 = 1.38703984532215f*x34 + 0.275899379282943f*x37;
            float x42 = 1.17587560241936f*x35 + 0.785694958387102f*x36;
            float x43 = -0.785694958387102f*x35 + 1.17587560241936f*x36;
            float x44 = 0.275899379282943f*x34 - 1.38703984532215f*x37;
            float x45 = 0.176776695296637f * (x41 + x42);
            float x46 = 0.176776695296637f * (x41 - x42);
            float x47 = 0.176776695296637f * (x43 + x44);
            float x48 = 0.176776695296637f * (x43 - x44);
            float x38 = 0.707106781186547f * (x46 - x48);
            float x39 = 0.707106781186547f * (x46 + x48);
            float x49 = x28 + x2f;
            float x4a = x29 + x2e;
            float x4b = x2a + x2d;
            float x4c = x2b + x2c;
            float x4d = x28 - x2f;
            float x4e = x29 - x2e;
            float x4f = x2a - x2d;
            float x50 = x2b - x2c;
            float x53 = x49 + x4c;
            float x54 = x4a + x4b;
            float x55 = x49 - x4c;
            float x56 = x4a - x4b;
            float x57 = 0.176776695296637f * (x53 - x54);
            float x58 = 0.230969883127822f*x55 + 0.0956708580912725f*x56;
            float x59 = 0.0956708580912725f*x55 - 0.230969883127822f*x56;
            float x5a = 1.38703984532215f*x4d + 0.275899379282943f*x50;
            float x5b = 1.17587560241936f*x4e + 0.785694958387102f*x4f;
            float x5c = -0.785694958387102f*x4e + 1.17587560241936f*x4f;
            float x5d = 0.275899379282943f*x4d - 1.38703984532215f*x50;
            float x5e = 0.176776695296637f * (x5a + x5b);
            float x5f = 0.176776695296637f * (x5a - x5b);
            float x60 = 0.176776695296637f * (x5c + x5d);
            float x61 = 0.176776695296637f * (x5c - x5d);
            float x51 = 0.707106781186547f * (x5f - x61);
            float x52 = 0.707106781186547f * (x5f + x61);
            dst[ 0 * dst_stridea] = 0.176776695296637f * (x7a + x7b);
            dst[ 1 * dst_stridea] = 0.176776695296637f * (x3a + x3b);
            dst[ 2 * dst_stridea] = 0.176776695296637f * (x8c + x8d);
            dst[ 3 * dst_stridea] = 0.707106781186547f * (x45 - x60);
            dst[ 4 * dst_stridea] = 0.176776695296637f * (x7e + x7f);
            dst[ 5 * dst_stridea] = 0.707106781186547f * (x45 + x60);
            dst[ 6 * dst_stridea] = 0.707106781186547f * (x91 - x99);
            dst[ 7 * dst_stridea] = 0.707106781186547f * (x3f + x59);
            dst[ 8 * dst_stridea] = 0.230969883127822f*x7c + 0.0956708580912725f*x7d;
            dst[ 9 * dst_stridea] = 0.707106781186547f * (x3f - x59);
            dst[10 * dst_stridea] = 0.707106781186547f * (x91 + x99);
            dst[11 * dst_stridea] = 0.707106781186547f * (x38 - x52);
            dst[12 * dst_stridea] = 0.707106781186547f * (x82 - x83);
            dst[13 * dst_stridea] = 0.707106781186547f * (x38 + x52);
            dst[14 * dst_stridea] = 0.707106781186547f * (x90 + x97);
            dst[15 * dst_stridea] = 0.707106781186547f * (x3e + x57);
            dst[16 * dst_stridea] = 0.176776695296637f * (x7a - x7b);
            dst[17 * dst_stridea] = 0.707106781186547f * (x3e - x57);
            dst[18 * dst_stridea] = 0.707106781186547f * (x90 - x97);
            dst[19 * dst_stridea] = 0.707106781186547f * (x39 - x51);
            dst[20 * dst_stridea] = 0.707106781186547f * (x82 + x83);
            dst[21 * dst_stridea] = 0.707106781186547f * (x39 + x51);
            dst[22 * dst_stridea] = 0.707106781186547f * (x92 - x98);
            dst[23 * dst_stridea] = 0.707106781186547f * (x40 + x58);
            dst[24 * dst_stridea] = 0.0956708580912725f*x7c - 0.230969883127822f*x7d;
            dst[25 * dst_stridea] = 0.707106781186547f * (x40 - x58);
            dst[26 * dst_stridea] = 0.707106781186547f * (x92 + x98);
            dst[27 * dst_stridea] = 0.707106781186547f * (x47 - x5e);
            dst[28 * dst_stridea] = 0.176776695296637f * (x80 + x81);
            dst[29 * dst_stridea] = 0.707106781186547f * (x47 + x5e);
            dst[30 * dst_stridea] = 0.176776695296637f * (x93 + x94);
            dst[31 * dst_stridea] = 0.176776695296637f * (x53 + x54);
            dst += dst_strideb;
            src += src_strideb;
        }
    }

    public static void InverseDct(ReadOnlySpan<float> source, Span<float> destination)
    {
        fixed (float* dst = destination)
        fixed (float* src = source)
        {
            float* tmp = stackalloc float[N*N];
            InverseDct1d(tmp, src, 1, N, 1, N);
            InverseDct1d(dst, tmp, N, 1, N, 1);
        }
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    private static void InverseDct1d(
        float* dst, float* src,
        int dst_stridea, int dst_strideb,
        int src_stridea, int src_strideb)
    {
        int i;

        for (i = 0; i < N; i++) {
            float x00 = 1.4142135623731f*src[ 0 * src_stridea];
            float x11 = 1.41251008020198f*src[ 1 * src_stridea] + 0.0693921705079407f*src[31 * src_stridea];
            float x12 = 1.40740373752638f*src[ 2 * src_stridea] + 0.138617169199091f*src[30 * src_stridea];
            float x13 = 1.39890683597308f*src[ 3 * src_stridea] + 0.207508226988212f*src[29 * src_stridea];
            float x14 = 1.38703984532215f*src[ 4 * src_stridea] + 0.275899379282943f*src[28 * src_stridea];
            float x15 = 1.37183135419349f*src[ 5 * src_stridea] + 0.34362586580705f*src[27 * src_stridea];
            float x16 = 1.35331800117435f*src[ 6 * src_stridea] + 0.410524527522357f*src[26 * src_stridea];
            float x17 = 1.33154438655373f*src[ 7 * src_stridea] + 0.476434199693161f*src[25 * src_stridea];
            float x18 = 1.30656296487638f*src[ 8 * src_stridea] + 0.541196100146197f*src[24 * src_stridea];
            float x19 = 1.27843391857524f*src[ 9 * src_stridea] + 0.604654211790801f*src[23 * src_stridea];
            float x1a = 1.24722501298667f*src[10 * src_stridea] + 0.666655658477747f*src[22 * src_stridea];
            float x1b = 1.21301143309781f*src[11 * src_stridea] + 0.72705107329128f*src[21 * src_stridea];
            float x1c = 1.17587560241936f*src[12 * src_stridea] + 0.785694958387102f*src[20 * src_stridea];
            float x1d = 1.13590698442014f*src[13 * src_stridea] + 0.842446035509419f*src[19 * src_stridea];
            float x1e = 1.09320186700176f*src[14 * src_stridea] + 0.897167586342636f*src[18 * src_stridea];
            float x1f = 1.04786313053259f*src[15 * src_stridea] + 0.949727781877754f*src[17 * src_stridea];
            float x01 = 1.4142135623731f*src[16 * src_stridea];
            float x02 = -0.949727781877754f*src[15 * src_stridea] + 1.04786313053259f*src[17 * src_stridea];
            float x03 = 0.897167586342636f*src[14 * src_stridea] - 1.09320186700176f*src[18 * src_stridea];
            float x04 = -0.842446035509419f*src[13 * src_stridea] + 1.13590698442014f*src[19 * src_stridea];
            float x05 = 0.785694958387102f*src[12 * src_stridea] - 1.17587560241936f*src[20 * src_stridea];
            float x06 = -0.72705107329128f*src[11 * src_stridea] + 1.21301143309781f*src[21 * src_stridea];
            float x07 = 0.666655658477747f*src[10 * src_stridea] - 1.24722501298667f*src[22 * src_stridea];
            float x08 = -0.604654211790801f*src[ 9 * src_stridea] + 1.27843391857524f*src[23 * src_stridea];
            float x09 = 0.541196100146197f*src[ 8 * src_stridea] - 1.30656296487638f*src[24 * src_stridea];
            float x0a = -0.476434199693161f*src[ 7 * src_stridea] + 1.33154438655373f*src[25 * src_stridea];
            float x0b = 0.410524527522357f*src[ 6 * src_stridea] - 1.35331800117435f*src[26 * src_stridea];
            float x0c = -0.34362586580705f*src[ 5 * src_stridea] + 1.37183135419349f*src[27 * src_stridea];
            float x0d = 0.275899379282943f*src[ 4 * src_stridea] - 1.38703984532215f*src[28 * src_stridea];
            float x0e = -0.207508226988212f*src[ 3 * src_stridea] + 1.39890683597308f*src[29 * src_stridea];
            float x0f = 0.138617169199091f*src[ 2 * src_stridea] - 1.40740373752638f*src[30 * src_stridea];
            float x10 = -0.0693921705079407f*src[ 1 * src_stridea] + 1.41251008020198f*src[31 * src_stridea];
            float x6c = x00 + x01;
            float x6e = x11 + x1f;
            float x6f = x12 + x1e;
            float x70 = x13 + x1d;
            float x71 = x14 + x1c;
            float x72 = x15 + x1b;
            float x73 = x16 + x1a;
            float x74 = x17 + x19;
            float x75 = 1.4142135623731f*x18;
            float x76 = x00 - x01;
            float x77 = x11 - x1f;
            float x78 = x12 - x1e;
            float x79 = x13 - x1d;
            float x7a = x14 - x1c;
            float x7b = x15 - x1b;
            float x7c = x16 - x1a;
            float x6d = x17 - x19;
            float x83 = x6c + x75;
            float x84 = x6e + x74;
            float x85 = x6f + x73;
            float x86 = x70 + x72;
            float x87 = 1.4142135623731f*x71;
            float x88 = x6c - x75;
            float x89 = x6e - x74;
            float x8a = x6f - x73;
            float x8b = x70 - x72;
            float x8e = x83 + x87;
            float x8f = x84 + x86;
            float x90 = 1.4142135623731f*x85;
            float x91 = x83 - x87;
            float x92 = x84 - x86;
            float x93 = 0.176776695296637f * (x8e - x90);
            float x94 = 0.176776695296637f * (x91 + x92);
            float x95 = 0.176776695296637f * (x91 - x92);
            float x96 = 1.4142135623731f*x88;
            float x97 = 1.30656296487638f*x89 + 0.541196100146197f*x8b;
            float x98 = 1.4142135623731f*x8a;
            float x99 = -0.541196100146197f*x89 + 1.30656296487638f*x8b;
            float x9a = 0.125f * (x96 + x98) + 0.176776695296637f*x97;
            float x9b = 0.176776695296637f * (x96 - x98);
            float x9c = 0.125f * (x96 + x98) - 0.176776695296637f*x97;
            float x9d = 0.25f*x99;
            float x8c = 0.707106781186547f * (x9b - x9d);
            float x8d = 0.707106781186547f * (x9b + x9d);
            float x9e = 1.4142135623731f*x76;
            float x9f = 0.275899379282943f*x6d + 1.38703984532215f*x77;
            float xa0 = 1.30656296487638f*x78 + 0.541196100146197f*x7c;
            float xa1 = 1.17587560241936f*x79 + 0.785694958387102f*x7b;
            float xa2 = 1.4142135623731f*x7a;
            float xa3 = -0.785694958387102f*x79 + 1.17587560241936f*x7b;
            float xa4 = 0.541196100146197f*x78 - 1.30656296487638f*x7c;
            float xa5 = 1.38703984532215f*x6d - 0.275899379282943f*x77;
            float xa7 = x9e + xa2;
            float xa8 = x9f + xa1;
            float xa9 = 1.4142135623731f*xa0;
            float xaa = x9e - xa2;
            float xab = x9f - xa1;
            float xac = 0.125f * (xa7 + xa9) + 0.176776695296637f*xa8;
            float xad = 0.176776695296637f * (xa7 - xa9);
            float xae = 0.125f * (xa7 + xa9) - 0.176776695296637f*xa8;
            float xaf = 0.176776695296637f * (xaa + xab);
            float xb0 = 0.176776695296637f * (xaa - xab);
            float xb1 = 1.4142135623731f*xa4;
            float xb2 = xa3 + xa5;
            float xb3 = xa3 - xa5;
            float xb4 = 0.176776695296637f * (xb1 + xb2);
            float xb5 = 0.176776695296637f * (xb1 - xb2);
            float xb6 = 0.25f*xb3;
            float xa6 = -xb5;
            float x7d = 0.707106781186547f * (xaf - xa6);
            float x7e = 0.707106781186547f * (xaf + xa6);
            float x7f = 0.707106781186547f * (xad + xb6);
            float x80 = 0.707106781186547f * (xad - xb6);
            float x81 = 0.707106781186547f * (xb0 - xb4);
            float x82 = 0.707106781186547f * (xb0 + xb4);
            float x20 = 1.4142135623731f*x09;
            float x21 = x08 + x0a;
            float x22 = x07 + x0b;
            float x23 = x06 + x0c;
            float x24 = x05 + x0d;
            float x25 = x04 + x0e;
            float x26 = x03 + x0f;
            float x27 = x02 + x10;
            float x28 = x02 - x10;
            float x29 = x03 - x0f;
            float x2a = x04 - x0e;
            float x2b = x05 - x0d;
            float x2c = x06 - x0c;
            float x2d = x07 - x0b;
            float x2e = x08 - x0a;
            float x37 = 1.4142135623731f*x20;
            float x38 = 1.38703984532215f*x21 + 0.275899379282943f*x27;
            float x39 = 1.30656296487638f*x22 + 0.541196100146197f*x26;
            float x3a = 1.17587560241936f*x23 + 0.785694958387102f*x25;
            float x3b = 1.4142135623731f*x24;
            float x3c = -0.785694958387102f*x23 + 1.17587560241936f*x25;
            float x3d = 0.541196100146197f*x22 - 1.30656296487638f*x26;
            float x3e = -0.275899379282943f*x21 + 1.38703984532215f*x27;
            float x40 = x37 + x3b;
            float x41 = x38 + x3a;
            float x42 = 1.4142135623731f*x39;
            float x43 = x37 - x3b;
            float x44 = x38 - x3a;
            float x45 = 0.125f * (x40 + x42) + 0.176776695296637f*x41;
            float x46 = 0.176776695296637f * (x40 - x42);
            float x47 = 0.125f * (x40 + x42) - 0.176776695296637f*x41;
            float x48 = 0.176776695296637f * (x43 + x44);
            float x49 = 0.176776695296637f * (x43 - x44);
            float x4a = 1.4142135623731f*x3d;
            float x4b = x3c + x3e;
            float x4c = x3c - x3e;
            float x4d = 0.176776695296637f * (x4a + x4b);
            float x4e = 0.176776695296637f * (x4a - x4b);
            float x4f = 0.25f*x4c;
            float x3f = -x4e;
            float x2f = 0.707106781186547f * (x48 - x3f);
            float x30 = 0.707106781186547f * (x48 + x3f);
            float x31 = 0.707106781186547f * (x46 + x4f);
            float x32 = 0.707106781186547f * (x46 - x4f);
            float x33 = 0.707106781186547f * (x49 - x4d);
            float x34 = 0.707106781186547f * (x49 + x4d);
            float x50 = 1.4142135623731f*x2b;
            float x51 = x2a + x2c;
            float x52 = x29 + x2d;
            float x53 = x28 + x2e;
            float x54 = x28 - x2e;
            float x55 = x29 - x2d;
            float x56 = x2a - x2c;
            float x5e = 1.4142135623731f*x50;
            float x5f = 1.30656296487638f*x51 + 0.541196100146197f*x53;
            float x60 = 1.4142135623731f*x52;
            float x61 = -0.541196100146197f*x51 + 1.30656296487638f*x53;
            float x62 = 0.125f * (x5e + x60) + 0.176776695296637f*x5f;
            float x63 = 0.176776695296637f * (x5e - x60);
            float x64 = 0.125f * (x5e + x60) - 0.176776695296637f*x5f;
            float x65 = 0.25f*x61;
            float x57 = 0.707106781186547f * (x63 - x65);
            float x58 = 0.707106781186547f * (x63 + x65);
            float x66 = 1.4142135623731f*x55;
            float x67 = x54 + x56;
            float x68 = x54 - x56;
            float x69 = 0.176776695296637f * (x66 + x67);
            float x6a = 0.176776695296637f * (x66 - x67);
            float x6b = 0.25f*x68;
            float x59 = -x6a;
            float x35 = -x57;
            float x36 = -x64;
            float x5a = -x2f;
            float x5b = -x31;
            float x5c = -x33;
            float x5d = -x47;
            dst[ 0 * dst_stridea] = 0.125f * (x8e + x90) + 0.176776695296637f*x8f;
            dst[ 1 * dst_stridea] = -0.707106781186547f*x5d + 0.707106781186547f*xac;
            dst[ 2 * dst_stridea] = 0.707106781186547f * (x5d + xac);
            dst[ 3 * dst_stridea] = 0.707106781186547f * (x36 + x9a);
            dst[ 4 * dst_stridea] = -0.707106781186547f*x36 + 0.707106781186547f*x9a;
            dst[ 5 * dst_stridea] = -0.707106781186547f*x34 + 0.707106781186547f*x7d;
            dst[ 6 * dst_stridea] = 0.707106781186547f * (x34 + x7d);
            dst[ 7 * dst_stridea] = 0.707106781186547f * (x59 + x94);
            dst[ 8 * dst_stridea] = -0.707106781186547f*x59 + 0.707106781186547f*x94;
            dst[ 9 * dst_stridea] = -0.707106781186547f*x5c + 0.707106781186547f*x7e;
            dst[10 * dst_stridea] = 0.707106781186547f * (x5c + x7e);
            dst[11 * dst_stridea] = 0.707106781186547f * (x58 + x8c);
            dst[12 * dst_stridea] = -0.707106781186547f*x58 + 0.707106781186547f*x8c;
            dst[13 * dst_stridea] = -0.707106781186547f*x32 + 0.707106781186547f*x7f;
            dst[14 * dst_stridea] = 0.707106781186547f * (x32 + x7f);
            dst[15 * dst_stridea] = 0.707106781186547f * (x6b + x93);
            dst[16 * dst_stridea] = -0.707106781186547f*x6b + 0.707106781186547f*x93;
            dst[17 * dst_stridea] = -0.707106781186547f*x5b + 0.707106781186547f*x80;
            dst[18 * dst_stridea] = 0.707106781186547f * (x5b + x80);
            dst[19 * dst_stridea] = 0.707106781186547f * (x35 + x8d);
            dst[20 * dst_stridea] = -0.707106781186547f*x35 + 0.707106781186547f*x8d;
            dst[21 * dst_stridea] = -0.707106781186547f*x30 + 0.707106781186547f*x81;
            dst[22 * dst_stridea] = 0.707106781186547f * (x30 + x81);
            dst[23 * dst_stridea] = 0.707106781186547f * (x69 + x95);
            dst[24 * dst_stridea] = -0.707106781186547f*x69 + 0.707106781186547f*x95;
            dst[25 * dst_stridea] = -0.707106781186547f*x5a + 0.707106781186547f*x82;
            dst[26 * dst_stridea] = 0.707106781186547f * (x5a + x82);
            dst[27 * dst_stridea] = 0.707106781186547f * (x62 + x9c);
            dst[28 * dst_stridea] = -0.707106781186547f*x62 + 0.707106781186547f*x9c;
            dst[29 * dst_stridea] = -0.707106781186547f*x45 + 0.707106781186547f*xae;
            dst[30 * dst_stridea] = 0.707106781186547f * (x45 + xae);
            dst[31 * dst_stridea] = 0.125f * (x8e + x90) - 0.176776695296637f*x8f;
            dst += dst_strideb;
            src += src_strideb;
        }
    }
}